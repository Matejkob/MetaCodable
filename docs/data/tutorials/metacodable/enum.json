{"kind":"project","hierarchy":{"modules":[{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials","projects":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields"}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag"}]}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","projects":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","kind":"task"}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection","kind":"task"}]}]}],"reference":"doc:\/\/MetaCodable\/tutorials\/Usage","paths":[["doc:\/\/MetaCodable\/tutorials\/Usage","doc:\/\/MetaCodable\/tutorials\/Usage\/$volume","doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"Represent variations in data","role":"project","categoryPathComponent":"Usage","category":"Discover MetaCodable"},"identifier":{"url":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/metacodable\/enum"]}],"sections":[{"kind":"hero","title":"Represent variations in data","estimatedTimeInMinutes":10,"chapter":"MetaCodable essentials","xcodeRequirement":"Xcode 15 or later","content":[{"inlineContent":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":" using "},{"type":"codeVoice","code":"MetaCodable"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"tasks","tasks":[{"stepsSection":[{"runtimePreview":null,"caption":[],"code":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Identify all the variations and the tags representing variations."}]}],"media":"Command-01.png"},{"runtimePreview":"Command-01.png","caption":[],"code":"Command-01.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" with each case representing each variation, with case name synonymous to tag value."}],"type":"paragraph"}],"media":null},{"runtimePreview":"Command-01.png","caption":[],"code":"Command-02.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Add variation data to each case as associated values with label representing field name and value type as field type.","type":"text"}]}],"media":null},{"runtimePreview":"Command-01.png","caption":[],"code":"Command-03.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Secondary label can be used as field name as well, to allow not specifying explicit label when creating case value.","type":"text"}]}],"media":null},{"runtimePreview":"Command-01.png","caption":[],"code":"Command-04.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Variation tag values can be declared explicitly by attaching "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)"},{"type":"text","text":" macro to the case."}]}],"media":null},{"runtimePreview":"Command-01.png","caption":[],"code":"Command-05.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"In case of multiple variation data fields, variation specific ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"class","type":"codeVoice"},{"text":" type can be created, and created type can be added to enum-case as associated value without any label.","type":"text"}]}],"media":null},{"runtimePreview":"Command-01.png","caption":[],"code":"Command-06.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ignore specific case from decoding or encoding or both by attaching "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()"},{"type":"text","text":" macros respectively."}]}],"media":null},{"runtimePreview":"Command-07.png","caption":[],"code":"Command-07.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","isActive":true},{"type":"text","text":" macro to specify "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" case style per case while using different case style for associated value label."}]}],"media":null}],"anchor":"Create-Codable-enums-with-external-tag","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"This is default representation of ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":" in ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":", where variation can be identified with the value of the key.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Since the data is keyed by the tag, variation is known before the content is being parsed.","type":"text"}]}],"mediaPosition":"trailing"}],"title":"Create Codable enums with external tag"},{"stepsSection":[{"code":null,"runtimePreview":null,"type":"step","media":"Command-08.png","content":[{"inlineContent":[{"type":"text","text":"Identify all the variations by the tags representing variations and the field for the tag value."}],"type":"paragraph"}],"caption":[]},{"code":"Command-02.swift","runtimePreview":"Command-08.png","type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" with each case name synonymous to tag value, and associated values with label and type representing field name and type respectively, similar to first section."}],"type":"paragraph"}],"caption":[]},{"code":"Command-08.swift","runtimePreview":"Command-08.png","type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Attach "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true},{"type":"text","text":" macro to "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" type definition with value specifying tag field name."}]}],"caption":[]},{"code":"Command-09.swift","runtimePreview":"Command-08.png","type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"If tag value type differs from "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type, specify explicitly with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()"},{"type":"text","text":" macro attached to "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" type definition."}],"type":"paragraph"}],"caption":[]},{"code":"Command-10.swift","runtimePreview":"Command-08.png","type":"step","media":null,"content":[{"inlineContent":[{"text":"If tag values differ from case name, specify explicitly with ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","type":"reference"},{"text":" macro attached to the case.","type":"text"}],"type":"paragraph"}],"caption":[]}],"anchor":"Create-Codable-enums-with-internal-tag","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this case the tag value identifying variant is inside the content, next to any other fields."}]},{"type":"paragraph","inlineContent":[{"text":"The tag value is present at a specific field common across all the variations. ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":" supports any type of value for tag default being ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}]}]}],"title":"Create Codable enums with internal tag"},{"stepsSection":[{"content":[{"inlineContent":[{"type":"text","text":"Identify all the variations by the tags representing variations and the fields for the tag and content value."}],"type":"paragraph"}],"caption":[],"runtimePreview":null,"code":null,"type":"step","media":"Command-11.png"},{"content":[{"inlineContent":[{"text":"Create ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":" with each case name synonymous to tag value, and associated values with label and type representing field name and type respectively, similar to first section.","type":"text"}],"type":"paragraph"}],"caption":[],"runtimePreview":"Command-11.png","code":"Command-02.swift","type":"step","media":null},{"content":[{"inlineContent":[{"text":"Attach ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"text":" macro to ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":" type definition with value specifying tag field name, similar to previous section.","type":"text"}],"type":"paragraph"}],"caption":[],"runtimePreview":"Command-11.png","code":"Command-08.swift","type":"step","media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Attach "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","type":"reference","isActive":true},{"type":"text","text":" macro to "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" type definition with value specifying content field name."}]}],"caption":[],"runtimePreview":"Command-11.png","code":"Command-11.swift","type":"step","media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","type":"reference"},{"type":"text","text":" macro to ignore decoding and encoding initialized associated values per case while allowing them in other cases."}]}],"caption":[],"runtimePreview":"Command-12.png","code":"Command-12.swift","type":"step","media":null}],"anchor":"Create-Codable-enums-with-adjacent-tag","contentSection":[{"content":[{"inlineContent":[{"text":"In this case the tag and content are adjacent to each other as two fields in each variation.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The tag and content fields are common across all the variations. ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":" supports any type of value for tag default being ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"title":"Create Codable enums with adjacent tag"}]},{"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Add common decoding\/encoding customizations","abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}],"action":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","overridingTitle":"Get started","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true}}],"references":{"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","kind":"symbol","title":"ContentAt(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContentAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"type":"text","text":" "},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"url":"\/documentation\/metacodable\/contentat(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"url":"\/documentation\/metacodable\/ignoredecoding()","type":"topic","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from decoding."}],"title":"IgnoreDecoding()","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"text":"()","kind":"text"}]},"Command-06.swift":{"content":["import MetaCodable","","@Codable","enum Command {","    @CodedAs(\"load\")","    case loads(_ key: String)","    case store(StoredData)","    @IgnoreCoding","    case dumpToDisk","","    struct StoredData {","        let key: String","        let value: Int","    }","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9}],"syntax":"swift","identifier":"Command-06.swift"},"Xcode 15 or later":{"title":"Xcode 15 or later","url":"https:\/\/itunes.apple.com\/us\/app\/xcode\/id497799835?mt=12","type":"xcodeRequirement","identifier":"Xcode 15 or later"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-sequence-of-values":{"kind":"section","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"code":"HelperCoders","type":"codeVoice"},{"type":"text","text":" module."}],"type":"section","title":"Decode\/Encode sequence of values","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values","url":"\/tutorials\/metacodable\/helper#DecodeEncode-sequence-of-values","role":"pseudoSymbol"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-adjacent-tag":{"role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":"."}],"kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-adjacent-tag","title":"Create Codable enums with adjacent tag"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic":{"kind":"project","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}],"estimatedTime":"20min","type":"topic","title":"Represent dynamic data variations with protocol","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","url":"\/tutorials\/metacodable\/dynamic","role":"project"},"Command-12.swift":{"content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","@ContentAt(\"content\")","enum Command {","    case load(key: String)","    case store(key: String, value: Int)","    case ignore(count: Int = 1)","    @IgnoreCodingInitialized","    case dumpToDisk(info: Int = 0)","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11}],"syntax":"swift","identifier":"Command-12.swift"},"Command-05.swift":{"content":["import MetaCodable","","@Codable","enum Command {","    @CodedAs(\"load\")","    case loads(_ key: String)","    case store(StoredData)","","    struct StoredData {","        let key: String","        let value: Int","    }","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12}],"syntax":"swift","identifier":"Command-05.swift"},"Command-01.swift":{"content":["import MetaCodable","","@Codable","enum Command {","    case load","    case store","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[],"syntax":"swift","identifier":"Command-01.swift"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Customize-field-decodingencoding":{"kind":"section","abstract":[{"type":"text","text":"This tutorial guides you through"}],"type":"section","title":"Customize field decoding\/encoding","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding","url":"\/tutorials\/metacodable\/essential#Customize-field-decodingencoding","role":"pseudoSymbol"},"Command-08.swift":{"content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","enum Command {","    case load(key: String)","    case store(key: String, value: Int)","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":4}],"syntax":"swift","identifier":"Command-08.swift"},"Command-02.swift":{"content":["import MetaCodable","","@Codable","enum Command {","    case load(key: String)","    case store(key: String, value: Int)","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[],"syntax":"swift","identifier":"Command-02.swift"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-date-representations":{"role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}],"kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","url":"\/tutorials\/metacodable\/helper#DecodeEncode-date-representations","title":"Decode\/Encode date representations"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"role":"symbol","type":"topic","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","url":"\/documentation\/metacodable\/ignorecoding()","title":"IgnoreCoding()"},"doc://MetaCodable/tutorials/Usage/Advanced-MetaCodable":{"role":"article","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","url":"\/tutorials\/usage\/advanced-metacodable","title":"Advanced MetaCodable"},"Command-03.swift":{"content":["import MetaCodable","","@Codable","enum Command {","    case load(_ key: String)","    case store(key: String, value: Int)","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":5}],"syntax":"swift","identifier":"Command-03.swift"},"Command-11.swift":{"content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","@ContentAt(\"content\")","enum Command {","    case load(key: String)","    case store(key: String, value: Int)","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":5}],"syntax":"swift","identifier":"Command-11.swift"},"doc://MetaCodable/tutorials/MetaCodable/Enum":{"title":"Represent variations in data","kind":"project","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","role":"project","url":"\/tutorials\/metacodable\/enum"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Share-common-Codable-fields":{"url":"\/tutorials\/metacodable\/essential#Share-common-Codable-fields","type":"section","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields","abstract":[{"type":"text","text":"This tutorial guides you through"}],"title":"Share common Codable fields","role":"pseudoSymbol"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-external-tag":{"title":"Create Codable enums with external tag","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":"."}],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-external-tag"},"Command-01.png":{"type":"image","alt":"Command variations JSON representation","identifier":"Command-01.png","variants":[{"url":"\/images\/Command-01.png","traits":["1x","light"]},{"url":"\/images\/Command-01~dark.png","traits":["1x","dark"]}]},"Command-12.png":{"type":"image","alt":"Command variations JSON representation","identifier":"Command-12.png","variants":[{"traits":["1x","light"],"url":"\/images\/Command-12.png"},{"traits":["1x","dark"],"url":"\/images\/Command-12~dark.png"}]},"doc://MetaCodable/tutorials/MetaCodable/Helper":{"title":"Add common decoding\/encoding customizations","kind":"project","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","estimatedTime":"20min","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"code":"HelperCoders","type":"codeVoice"},{"type":"text","text":" module."}],"type":"topic","role":"project","url":"\/tutorials\/metacodable\/helper"},"Command-07.swift":{"content":["import MetaCodable","","@Codable","enum Command {","    @CodedAs(\"load\")","    case loads(_ key: String)","    case store(StoredData)","    case execute(filePath: String)","    @CodingKeys(.snake_case)","    case send(localData: String)","    @IgnoreCoding","    case dumpToDisk","","    struct StoredData {","        let key: String","        let value: Int","    }","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10}],"syntax":"swift","identifier":"Command-07.swift"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-internal-tag":{"title":"Create Codable enums with internal tag","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":"."}],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-internal-tag"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"title":"CodedAt(_:)","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded to the"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":"...)","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/metacodable\/codedat(_:)"},"Command-04.swift":{"content":["import MetaCodable","","@Codable","enum Command {","    @CodedAs(\"load\")","    case loads(_ key: String)","    case store(key: String, value: Int)","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":5},{"line":6}],"syntax":"swift","identifier":"Command-04.swift"},"Command-09.swift":{"content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","@CodedAs<Int>","enum Command {","    case load(key: String)","    case store(key: String, value: Int)","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":5}],"syntax":"swift","identifier":"Command-09.swift"},"Command-08.png":{"type":"image","alt":"Command variations JSON representation","identifier":"Command-08.png","variants":[{"url":"\/images\/Command-08.png","traits":["1x","light"]},{"url":"\/images\/Command-08~dark.png","traits":["1x","dark"]}]},"doc://MetaCodable/tutorials/MetaCodable/Helper#Create-custom-advanced-customizations":{"title":"Create custom advanced customizations","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/helper#Create-custom-advanced-customizations"},"Command-07.png":{"type":"image","alt":"Command variations JSON representation","identifier":"Command-07.png","variants":[{"traits":["1x","light"],"url":"\/images\/Command-07.png"},{"traits":["1x","dark"],"url":"\/images\/Command-07~dark.png"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"url":"\/documentation\/metacodable\/ignorecodinginitialized()","type":"topic","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"text":" ","type":"text"},{"text":"the attached type\/enum-case will be ignored for decoding\/encoding.","type":"text"}],"title":"IgnoreCodingInitialized()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"url":"\/documentation\/metacodable\/codingkeys(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" for the field names\/associated value label will be"},{"type":"text","text":" "},{"type":"text","text":"of the provided case format."}],"title":"CodingKeys(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier","text":"CodingKeyNameStrategy"},{"kind":"text","text":")"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"kind":"symbol","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from encoding.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"type":"topic","title":"IgnoreEncoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","url":"\/documentation\/metacodable\/ignoreencoding()","role":"symbol"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-basic-value-types-without-type-check":{"role":"pseudoSymbol","type":"section","abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}],"kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check","url":"\/tutorials\/metacodable\/helper#DecodeEncode-basic-value-types-without-type-check","title":"Decode\/Encode basic value types without type check"},"doc://MetaCodable/tutorials/MetaCodable/Essential":{"title":"Use with general-purpose Swift types","kind":"project","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial guides you through"}],"type":"topic","role":"project","url":"\/tutorials\/metacodable\/essential"},"doc://MetaCodable/tutorials/Usage/MetaCodable-essentials":{"role":"article","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials","url":"\/tutorials\/usage\/metacodable-essentials","title":"MetaCodable essentials"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Create-dynamic-variation-Codable-types":{"type":"section","title":"Create dynamic variation Codable types","url":"\/tutorials\/metacodable\/dynamic#Create-dynamic-variation-Codable-types","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}],"kind":"section","role":"pseudoSymbol"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Customize-dynamic-data-variations-detection":{"role":"pseudoSymbol","kind":"section","title":"Customize dynamic data variations detection","abstract":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection","type":"section","url":"\/tutorials\/metacodable\/dynamic#Customize-dynamic-data-variations-detection"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Create-Codable-type-and-customize-CodingKey-of-fields":{"role":"pseudoSymbol","type":"section","abstract":[{"text":"This tutorial guides you through","type":"text"}],"kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields","url":"\/tutorials\/metacodable\/essential#Create-Codable-type-and-customize-CodingKey-of-fields","title":"Create Codable type and customize CodingKey of fields"},"doc://MetaCodable/tutorials/Usage":{"role":"overview","kind":"overview","title":"Discover MetaCodable","abstract":[{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":" supercharges "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":"’s "},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros. Remove previous boiler-plate for ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations and create "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" conformances faster than ever before."}],"identifier":"doc:\/\/MetaCodable\/tutorials\/Usage","type":"topic","url":"\/tutorials\/usage"},"Command-10.swift":{"content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","@CodedAs<Int>","enum Command {","    @CodedAs(0)","    case load(key: String)","    @CodedAs(1)","    case store(key: String, value: Int)","}"],"fileName":"Command.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":9}],"syntax":"swift","identifier":"Command-10.swift"},"Command-11.png":{"type":"image","alt":"Command variations JSON representation","identifier":"Command-11.png","variants":[{"traits":["1x","light"],"url":"\/images\/Command-11.png"},{"traits":["1x","dark"],"url":"\/images\/Command-11~dark.png"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"role":"symbol","type":"topic","abstract":[{"text":"Provides values to be used for an enum-case instead of using case name or","type":"text"},{"text":" ","type":"text"},{"text":"additional variable ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":"s.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","url":"\/documentation\/metacodable\/codedas(_:_:)","title":"CodedAs(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"type":"topic","title":"CodedAs()","url":"\/documentation\/metacodable\/codedas()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","abstract":[{"text":"Provides the identifier actual type for internally\/adjacently tagged enums","type":"text"},{"text":" ","type":"text"},{"text":"and protocols.","type":"text"}],"kind":"symbol","role":"symbol"}}}