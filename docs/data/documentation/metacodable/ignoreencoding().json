{"metadata":{"symbolKind":"macro","platforms":[{"beta":false,"unavailable":false,"introducedAt":"5.9","deprecated":false,"name":"Swift"}],"title":"IgnoreEncoding()","role":"symbol","roleHeading":"Macro","externalID":"s:11MetaCodable14IgnoreEncodingyycfm","modules":[{"name":"MetaCodable"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"()"}]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer) ","kind":"text"},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This macro can be applied to variables to ignore them from encoding.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@IgnoreEncoding","let field: String"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoding data needs to have applicable data in "},{"type":"codeVoice","code":"field"},{"type":"text","text":" key."},{"type":"text","text":" "},{"type":"text","text":"But the encoded data will also not have any "},{"code":"field","type":"codeVoice"},{"text":" key.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Similarly, for enums and protocols this macro can be applied to cases","type":"text"},{"text":" ","type":"text"},{"text":"or conforming types respectively to ignore them from encoding.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@IgnoreEncoding","case field(String)"]},{"code":["@Codable","@IgnoreEncoding","struct Load: Command, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"load\" }","    let key: String","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"This case\/type will never be encoded. But "},{"code":"field","type":"codeVoice"},{"type":"text","text":" case and "},{"type":"codeVoice","code":"Load"},{"type":"text","text":" "},{"text":"type will be decoded if case related data is present.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"text":" ","type":"text"},{"type":"text","text":"is a variable declaration. "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference","isActive":true},{"text":" macro uses this macro","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when generating final implementations."}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/metacodable\/ignoreencoding()"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Strategies","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:forErrors:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)"],"anchor":"Strategies"}],"sections":[],"abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from encoding."}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"topic","url":"\/documentation\/metacodable\/codedat(_:)","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded to the"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"title":"CodedAt(_:)","role":"symbol","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable":{"role":"collection","url":"\/documentation\/metacodable","abstract":[{"type":"text","text":"Supercharge "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":"â€™s "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations with macros."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","type":"topic","kind":"symbol","title":"MetaCodable"},"doc://MetaCodable/documentation/MetaCodable/Inherits(decodable:encodable:)":{"type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Inherits"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"decodable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"encodable","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)","url":"\/documentation\/metacodable\/inherits(decodable:encodable:)","abstract":[{"type":"text","text":"Indicates whether super class conforms to "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" or not."}],"title":"Inherits(decodable:encodable:)","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodedAs","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"...)","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","type":"topic","url":"\/documentation\/metacodable\/codedas(_:_:)","abstract":[{"type":"text","text":"Provides values to be used for an enum-case instead of using case name or"},{"type":"text","text":" "},{"text":"additional variable ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":"s.","type":"text"}],"title":"CodedAs(_:_:)","role":"symbol","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreCoding"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","url":"\/documentation\/metacodable\/ignorecoding()","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from decoding and encoding."}],"title":"IgnoreCoding()","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","url":"\/documentation\/metacodable\/codable()","abstract":[{"text":"Generate ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"class"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"actor"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"declarations."}],"title":"Codable()","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","type":"topic","url":"\/documentation\/metacodable\/codedas()","abstract":[{"type":"text","text":"Provides the identifier actual type for internally\/adjacently tagged enums"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}],"title":"CodedAs()","role":"symbol","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"role":"symbol","url":"\/documentation\/metacodable\/ignoredecoding()","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","title":"IgnoreDecoding()"},"doc://MetaCodable/documentation/MetaCodable/UnTagged()":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnTagged"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","type":"topic","url":"\/documentation\/metacodable\/untagged()","abstract":[{"text":"Indicates the cases of enum lack distinct identifier.","type":"text"}],"title":"UnTagged()","role":"symbol","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"url":"\/documentation\/metacodable\/codedby(_:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"abstract":[{"text":"Indicates the field or enum\/protocol identifier needs to be decoded and","type":"text"},{"text":" ","type":"text"},{"text":"encoded by the provided ","type":"text"},{"code":"helper","type":"codeVoice"},{"type":"text","text":" instance."}],"title":"CodedBy(_:)"},"doc://MetaCodable/documentation/MetaCodable/Default(ifMissing:)":{"type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"ifMissing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:)","url":"\/documentation\/metacodable\/default(ifmissing:)","abstract":[{"text":"Provides a ","type":"text"},{"code":"default","type":"codeVoice"},{"text":" value to be used when value is missing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and when not initialized explicitly in memberwise initializer(s)."}],"title":"Default(ifMissing:)","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-1iuvv":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"<each ","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"if"},{"kind":"text","text":": (repeat each "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv","type":"topic","url":"\/documentation\/metacodable\/ignoreencoding(if:)-1iuvv","abstract":[{"type":"text","text":"Indicates the field\/case needs to be encoded only if provided condition"},{"text":" ","type":"text"},{"type":"text","text":"is not satisfied."}],"title":"IgnoreEncoding(if:)","role":"symbol","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","url":"\/documentation\/metacodable\/ignorecodinginitialized()","abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"text":" ","type":"text"},{"text":"the attached type\/enum-case will be ignored for decoding\/encoding.","type":"text"}],"title":"IgnoreCodingInitialized()","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from encoding."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","url":"\/documentation\/metacodable\/ignoreencoding()","title":"IgnoreEncoding()","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodedIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","url":"\/documentation\/metacodable\/codedin(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"container "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"title":"CodedIn(_:)","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","title":"ContentAt(_:_:)","url":"\/documentation\/metacodable\/contentat(_:_:)","abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"type":"text","text":" "},{"text":"to be decoded\/encoded at the ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ContentAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}],"kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"kind":"text","text":"("},{"text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","type":"topic","url":"\/documentation\/metacodable\/codingkeys(_:)","abstract":[{"text":"Indicates ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" for the field names\/associated value label will be"},{"type":"text","text":" "},{"text":"of the provided case format.","type":"text"}],"title":"CodingKeys(_:)","role":"symbol","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Default(ifMissing:forErrors:)":{"url":"\/documentation\/metacodable\/default(ifmissing:forerrors:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:forErrors:)","kind":"symbol","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Default","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"ifMissing","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"forErrors","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"text":"Provides different ","type":"text"},{"type":"codeVoice","code":"default"},{"text":" values to be used for missing value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decoding errors."}],"title":"Default(ifMissing:forErrors:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-7toka":{"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"if","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka","type":"topic","url":"\/documentation\/metacodable\/ignoreencoding(if:)-7toka","abstract":[{"text":"Indicates the field needs to be encoded only if provided condition","type":"text"},{"text":" ","type":"text"},{"text":"is not satisfied.","type":"text"}],"title":"IgnoreEncoding(if:)","role":"symbol","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","type":"topic","url":"\/documentation\/metacodable\/default(_:)","abstract":[{"type":"text","text":"Provides a "},{"code":"default","type":"codeVoice"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}],"title":"Default(_:)","role":"symbol","kind":"symbol"}}}