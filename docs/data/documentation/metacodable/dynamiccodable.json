{"abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue"],"title":"Associated Types"},{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"],"title":"Type Properties"}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}],"roleHeading":"Protocol","modules":[{"name":"MetaCodable"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"externalID":"s:11MetaCodable07DynamicB0P","role":"symbol","title":"DynamicCodable"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/dynamiccodable"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"],"generated":true,"title":"Dynamic Coding"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"IdentifierValue"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The type declared "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"},{"type":"text","text":" is used to decode conformed type"},{"type":"text","text":" "},{"type":"text","text":"if matches, and encode to represent data for the conformed type."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conforming to this "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" allows type to be decoded\/encoded dynamically"},{"type":"text","text":" "},{"type":"text","text":"if it conforms to any additional "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":"(s) that declare dynamic"},{"type":"text","text":" "},{"type":"text","text":"decoding\/encoding with attached "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"type":"text","text":" macro, while the conformed"},{"type":"text","text":" "},{"type":"text","text":"types can be declared in several different targets."}]},{"type":"paragraph","inlineContent":[{"text":"To use dynamic decoding, first declare a protocol with ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference"},{"text":" macro","type":"text"},{"text":" ","type":"text"},{"text":"attached that represents common data. i.e. for dynamic ","type":"text"},{"type":"codeVoice","code":"Post"},{"text":" data:","type":"text"}]},{"syntax":"json","type":"codeListing","code":["[","  {","    \"id\": \"00005678-abcd-efab-0123-456789abcdef\",","    \"type\": \"text\",","    \"author\": \"12345678-abcd-efab-0123-456789abcdef\",","    \"likes\": 145,","    \"createdAt\": \"2021-07-23T07:36:43Z\",","    \"text\": \"Lorem Ipsium\"","  },","  {","    \"id\": \"43215678-abcd-efab-0123-456789abcdef\",","    \"type\": \"picture\",","    \"author\": \"abcd5678-abcd-efab-0123-456789abcdef\",","    \"likes\": 370,","    \"createdAt\": \"2021-07-23T09:32:13Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/picture.png\",","    \"caption\": \"Lorem Ipsium\"","  },","  {","    \"id\": \"43215678-abcd-efab-0123-456789abcdef\",","    \"type\": \"photo\",","    \"author\": \"abcd5678-abcd-efab-0123-456789abcdef\",","    \"likes\": 370,","    \"createdAt\": \"2021-07-23T09:32:13Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/picture.png\",","    \"caption\": \"Lorem Ipsium\"","  },","  {","    \"id\": \"64475bcb-caff-48c1-bb53-8376628b350b\",","    \"type\": \"audio\",","    \"author\": \"4c17c269-1c56-45ab-8863-d8924ece1d0b\",","    \"likes\": 25,","    \"createdAt\": \"2021-07-23T09:33:48Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/audio.aac\",","    \"duration\": 60","  },","  {","    \"id\": \"98765432-abcd-efab-0123-456789abcdef\",","    \"type\": \"video\",","    \"author\": \"04355678-abcd-efab-0123-456789abcdef\",","    \"likes\": 2345,","    \"createdAt\": \"2021-07-23T09:36:38Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/video.mp4\",","    \"duration\": 460,","    \"thumbnail\": \"https:\/\/a.url.com\/to\/a\/thumbnail.png\"","  }","]"]},{"type":"paragraph","inlineContent":[{"text":"new protocol ","type":"text"},{"code":"Post","type":"codeVoice"},{"text":" can be created, with the type of identifier tagging","type":"text"},{"text":" ","type":"text"},{"text":"(external, internal or adjacent) indicated, here tagging is ","type":"text"},{"code":"internal","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Data type of identifier can also be specified with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","isActive":true,"type":"reference"},{"text":" if","type":"text"},{"text":" ","type":"text"},{"text":"varies from ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Codable","@CodedAt(\"type\")","protocol Post {","    var id: UUID { get }","    var author: UUID { get }","    var likes: Int { get }","    var createdAt: String { get }","}"]},{"type":"paragraph","inlineContent":[{"text":"Individual ","type":"text"},{"type":"codeVoice","code":"Post"},{"text":" data type can be created conforming to ","type":"text"},{"type":"codeVoice","code":"Post"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DynamicCodable"},{"text":", specifying one or multiple identifier:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"text\" }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"audio\" }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"video\" }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let url: URL","    let duration: Int","    let thumbnail: URL","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Include "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin to generate protocol"},{"type":"text","text":" "},{"type":"text","text":"decoding\/encoding "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","isActive":true},{"type":"text","text":" named "},{"type":"codeVoice","code":"\\(protocolName)Coder"},{"type":"text","text":" "},{"type":"text","text":"where "},{"type":"codeVoice","code":"\\(protocolName)"},{"type":"text","text":" is replaced with the protocol name."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable"},"sections":[],"kind":"symbol","references":{"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig":{"url":"\/documentation\/metacodable\/metacodableconfig","kind":"symbol","fragments":[{"text":"configuration","kind":"keyword"},{"text":" ","kind":"text"},{"text":"file","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaCodableConfig","kind":"identifier"}],"role":"symbol","abstract":[{"text":"The configuration file providing additional customization options for ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"type":"text","text":" build tool plugin."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","type":"topic","title":"MetaCodableConfig"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodableIdentifier":{"abstract":[{"type":"text","text":"The identifier option for "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable"},{"type":"text","text":" types."}],"title":"DynamicCodableIdentifier","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","role":"symbol","url":"\/documentation\/metacodable\/dynamiccodableidentifier","navigatorTitle":[{"kind":"identifier","text":"DynamicCodableIdentifier"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodableIdentifier"}]},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"abstract":[{"text":"The actual type of value that is going to be decoded\/encoded.","type":"text"}],"type":"topic","title":"Coded","role":"symbol","url":"\/documentation\/metacodable\/helpercoder\/coded","required":true,"kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Coded","kind":"identifier"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","kind":"symbol","url":"\/documentation\/metacodable\/codedas()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">()"}],"title":"CodedAs()","role":"symbol","abstract":[{"text":"Provides the identifier actual type for internally\/adjacently tagged enums","type":"text"},{"text":" ","type":"text"},{"text":"and protocols.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"url":"\/documentation\/metacodable\/dynamiccodable\/identifier","title":"identifier","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO","kind":"typeIdentifier","text":"DynamicCodableIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"IdentifierValue"},{"kind":"text","text":">"}],"required":true,"kind":"symbol","abstract":[{"text":"The identifier value(s) for this type.","type":"text"}],"role":"symbol"},"doc://MetaCodable/documentation/MetaCodable":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","kind":"symbol","url":"\/documentation\/metacodable","title":"MetaCodable","role":"collection","abstract":[{"text":"Supercharge ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"url":"\/documentation\/metacodable\/helpercoder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HelperCoder","kind":"identifier"}],"navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A type that helps to decode and encode underlying ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","type":"reference"},{"type":"text","text":" type"},{"type":"text","text":" "},{"type":"text","text":"from provided "},{"code":"decoder","type":"codeVoice"},{"type":"text","text":" and to provided "},{"code":"encoder","type":"codeVoice"},{"type":"text","text":" respectively."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","type":"topic","title":"HelperCoder"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/IdentifierValue":{"required":true,"abstract":[{"text":"The type of identifier value.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/metacodable\/dynamiccodable\/identifiervalue","title":"IdentifierValue","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdentifierValue","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"}],"kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","kind":"symbol","url":"\/documentation\/metacodable\/codable()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"title":"Codable()","role":"symbol","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"text":" ","type":"text"},{"text":"declarations.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"abstract":[{"type":"text","text":"A type that can be decoded\/encoded dynamically based on unique identifier."}],"title":"DynamicCodable","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","role":"symbol","url":"\/documentation\/metacodable\/dynamiccodable","navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}]}}}