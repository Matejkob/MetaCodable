{"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"values","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"...) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"values","content":[{"type":"paragraph","inlineContent":[{"text":"The values to use.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"When values are provided attached to a case declaration those are chosen","type":"text"},{"text":" ","type":"text"},{"text":"as case values. The case can be decoded from any of the value specified","type":"text"},{"text":" ","type":"text"},{"text":"while only first value is used for encoding. i.e. for a case declared as:","type":"text"}],"type":"paragraph"},{"code":["@CodedAs(\"loaded\", \"operation_loaded\")","case load(key: Int)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"can be decoded from both the externally tagged JSON:"}],"type":"paragraph"},{"code":["{ \"loaded\": { \"key\": 5 } }"],"type":"codeListing","syntax":"json"},{"inlineContent":[{"type":"text","text":"or"}],"type":"paragraph"},{"code":["{ \"operation_loaded\": { \"key\": 5 } }"],"type":"codeListing","syntax":"json"},{"inlineContent":[{"text":"but when encoding only first JSON will be generated.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When attached to variables, the values are chosen additional "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"the variable data might appear at. Only the primary key specified with"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"type":"text","text":" or the variable name is used when encoding. i.e. for a"},{"type":"text","text":" "},{"type":"text","text":"variable declared as:"}],"type":"paragraph"},{"syntax":"swift","code":["@CodedAt(\"key\")","@CodedAs(\"key_field\")","let field: String"],"type":"codeListing"},{"inlineContent":[{"text":"can be decoded from both the JSON:","type":"text"}],"type":"paragraph"},{"syntax":"json","code":["{ \"key\": \"value\" }"],"type":"codeListing"},{"inlineContent":[{"text":"or","type":"text"}],"type":"paragraph"},{"syntax":"json","code":["{ \"key_field\": \"value\" }"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"but when encoding only first JSON will be generated."}],"type":"paragraph"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"type":"text","text":" "},{"type":"text","text":"is a variable declaration. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"type":"text","text":" macro uses this macro"},{"type":"text","text":" "},{"type":"text","text":"when generating final implementations."}],"type":"paragraph"}],"name":"Note","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value type must be "},{"type":"codeVoice","code":"String"},{"type":"text","text":" when used in"},{"type":"text","text":" "},{"type":"text","text":"externally tagged enums or variables, and internally\/adjacently tagged"},{"type":"text","text":" "},{"type":"text","text":"enums without type specified with "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","type":"reference"},{"type":"text","text":" macro. When used"},{"type":"text","text":" "},{"type":"text","text":"along with "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","type":"reference"},{"type":"text","text":" macro, both the generic type must be same."}]}],"name":"Important","type":"aside","style":"important"},{"content":[{"inlineContent":[{"text":"For externally tagged enum-cases and variables, data","type":"text"},{"text":" ","type":"text"},{"text":"must have only one of the key present, otherwise decoding will result in","type":"text"},{"text":" ","type":"text"},{"code":"DecodingError.typeMismatch","type":"codeVoice"},{"text":" error.","type":"text"}],"type":"paragraph"}],"name":"Important","type":"aside","style":"important"}],"kind":"content"}],"kind":"symbol","metadata":{"symbolKind":"macro","modules":[{"name":"MetaCodable"}],"title":"CodedAs(_:_:)","externalID":"s:11MetaCodable7CodedAsyyx_xdtcSeRzSERzSQRzlufm","platforms":[{"name":"Swift","introducedAt":"5.9","unavailable":false,"beta":false,"deprecated":false}],"roleHeading":"Macro","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"...)","kind":"text"}]},"seeAlsoSections":[{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"],"title":"Strategies","generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Provides values to be used for an enum-case instead of using case name or","type":"text"},{"text":" ","type":"text"},{"text":"additional variable ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":"s.","type":"text"}],"sections":[],"variants":[{"paths":["\/documentation\/metacodable\/codedas(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"url":"\/documentation\/metacodable\/codedas(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"...)"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","kind":"symbol","title":"CodedAs(_:_:)","abstract":[{"text":"Provides values to be used for an enum-case instead of using case name or","type":"text"},{"text":" ","type":"text"},{"text":"additional variable ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":"s.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","kind":"symbol","url":"\/documentation\/metacodable\/ignoreencoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"title":"IgnoreEncoding()","role":"symbol","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from encoding.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","kind":"symbol","url":"\/documentation\/metacodable\/codingkeys(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO"},{"kind":"text","text":")"}],"title":"CodingKeys(_:)","role":"symbol","abstract":[{"text":"Indicates ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" for the field names\/associated value label will be","type":"text"},{"text":" ","type":"text"},{"text":"of the provided case format.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","kind":"symbol","url":"\/documentation\/metacodable\/ignorecodinginitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}],"title":"IgnoreCodingInitialized()","role":"symbol","abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"text":" ","type":"text"},{"text":"the attached type\/enum-case will be ignored for decoding\/encoding.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","kind":"symbol","url":"\/documentation\/metacodable\/codable()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"title":"Codable()","role":"symbol","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"text":" ","type":"text"},{"text":"declarations.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","kind":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"title":"CodedIn(_:)","role":"symbol","abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"text":" ","type":"text"},{"text":"container ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided with field name as final","type":"text"},{"text":" ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","kind":"symbol","url":"\/documentation\/metacodable\/ignorecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"title":"IgnoreCoding()","role":"symbol","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","kind":"symbol","url":"\/documentation\/metacodable\/codedas()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">()"}],"title":"CodedAs()","role":"symbol","abstract":[{"text":"Provides the identifier actual type for internally\/adjacently tagged enums","type":"text"},{"text":" ","type":"text"},{"text":"and protocols.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","kind":"symbol","url":"\/documentation\/metacodable\/contentat(_:_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContentAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"title":"ContentAt(_:_:)","role":"symbol","abstract":[{"text":"Indicates the enum-case associated values or protocol conforming types need","type":"text"},{"text":" ","type":"text"},{"text":"to be decoded\/encoded at the ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","kind":"symbol","url":"\/documentation\/metacodable\/codedby(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"CodedBy(_:)","role":"symbol","abstract":[{"text":"Indicates the field or enum\/protocol identifier needs to be decoded and","type":"text"},{"text":" ","type":"text"},{"text":"encoded by the provided ","type":"text"},{"code":"helper","type":"codeVoice"},{"text":" instance.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","kind":"symbol","url":"\/documentation\/metacodable","title":"MetaCodable","role":"collection","abstract":[{"text":"Supercharge ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","kind":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"title":"CodedAt(_:)","role":"symbol","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"text":" ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","kind":"symbol","url":"\/documentation\/metacodable\/default(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"Default(_:)","role":"symbol","abstract":[{"text":"Provides a ","type":"text"},{"code":"default","type":"codeVoice"},{"text":" value to be used when decoding fails and","type":"text"},{"text":" ","type":"text"},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","kind":"symbol","url":"\/documentation\/metacodable\/ignoredecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}],"title":"IgnoreDecoding()","role":"symbol","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}],"type":"topic"}}}