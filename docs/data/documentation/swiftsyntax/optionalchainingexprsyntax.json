{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"metadata":{"title":"OptionalChainingExprSyntax","modules":[{"name":"SwiftSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OptionalChainingExprSyntax"}],"symbolKind":"struct","roleHeading":"Structure","role":"symbol","externalID":"s:11SwiftSyntax020OptionalChainingExprB0V","navigatorTitle":[{"text":"OptionalChainingExprSyntax","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OptionalChainingExprSyntax","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":3,"anchor":"Children","type":"heading","text":"Children"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"expression","type":"codeVoice"},{"text":": ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"questionMark"},{"text":": ","type":"text"},{"type":"codeVoice","code":"?"}],"type":"paragraph"}]}]}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"title":"Conforms To","type":"conformsTo"}],"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/init(_:)-24ccc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/init(leadingTrivia:_:expression:_:questionMark:_:trailingTrivia:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/expression","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/questionMark","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/unexpectedAfterQuestionMark","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/unexpectedBeforeExpression","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/unexpectedBetweenExpressionAndQuestionMark"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/structure"],"generated":true},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/ExprSyntaxProtocol-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/SyntaxProtocol-Implementations"],"anchor":"Default-Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/optionalchainingexprsyntax"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/expression":{"abstract":[],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/expression","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expression","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax"}],"url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/expression","title":"expression","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/CustomReflectable-Implementations":{"kind":"article","title":"CustomReflectable Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/CustomReflectable-Implementations","url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/customreflectable-implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/init(_:)-24ccc":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/init(_:)-24ccc","title":"init(_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/init(_:)-24ccc","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/Equatable-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/equatable-implementations","title":"Equatable Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/Equatable-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/init(leadingTrivia:_:expression:_:questionMark:_:trailingTrivia:)":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/init(leadingTrivia:_:expression:_:questionMark:_:trailingTrivia:)","type":"topic","role":"symbol","title":"init(leadingTrivia:_:expression:_:questionMark:_:trailingTrivia:)","url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/init(leadingtrivia:_:expression:_:questionmark:_:trailingtrivia:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"leadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?, ","kind":"text"},{"text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"expression"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax04ExprB8ProtocolP","text":"ExprSyntaxProtocol","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"questionMark"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"trailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/unexpectedBeforeExpression":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/unexpectedBeforeExpression","title":"unexpectedBeforeExpression","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedBeforeExpression"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/unexpectedbeforeexpression","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntaxProtocol":{"navigatorTitle":[{"kind":"identifier","text":"ExprSyntaxProtocol"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","kind":"symbol","url":"\/documentation\/swiftsyntax\/exprsyntaxprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","isActive":true},{"type":"text","text":" nodes conform."}],"type":"topic","title":"ExprSyntaxProtocol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/ExprSyntaxProtocol-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/exprsyntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/ExprSyntaxProtocol-Implementations","abstract":[],"title":"ExprSyntaxProtocol Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/SyntaxProtocol-Implementations":{"type":"topic","title":"SyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/syntaxprotocol-implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/SyntaxProtocol-Implementations","abstract":[],"role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/questionMark":{"url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/questionmark","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"questionMark","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/questionMark","title":"questionMark"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntax":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","title":"ExprSyntax","url":"\/documentation\/swiftsyntax\/exprsyntax","type":"topic","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/Hashable-Implementations":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/Hashable-Implementations","title":"Hashable Implementations","kind":"article","abstract":[],"url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/hashable-implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax":{"url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax","navigatorTitle":[{"text":"OptionalChainingExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax","type":"topic","kind":"symbol","role":"symbol","title":"OptionalChainingExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"OptionalChainingExprSyntax","kind":"identifier"}],"abstract":[]},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"type":"unresolvable","title":"Swift.TextOutputStreamable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/unexpectedBetweenExpressionAndQuestionMark":{"url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/unexpectedbetweenexpressionandquestionmark","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedBetweenExpressionAndQuestionMark"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/unexpectedBetweenExpressionAndQuestionMark","title":"unexpectedBetweenExpressionAndQuestionMark","abstract":[],"role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"type":"unresolvable","title":"Swift.CustomReflectable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/unexpectedAfterQuestionMark":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/unexpectedAfterQuestionMark","title":"unexpectedAfterQuestionMark","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unexpectedAfterQuestionMark","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/unexpectedafterquestionmark","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalChainingExprSyntax/structure":{"title":"structure","url":"\/documentation\/swiftsyntax\/optionalchainingexprsyntax\/structure","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO"}],"role":"symbol","kind":"symbol","abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalChainingExprSyntax\/structure","type":"topic"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxHashable"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxhashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","role":"symbol","title":"SyntaxHashable","abstract":[{"text":"Protocol that provides a common Hashable implementation for all syntax nodes","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}]}}}