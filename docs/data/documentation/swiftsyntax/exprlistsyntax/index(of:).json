{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/exprlistsyntax\/index(of:)"]}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","role":"symbol","title":"index(of:)","symbolKind":"method","externalID":"s:11SwiftSyntax0B10CollectionPAAE5index2ofAA0B13ChildrenIndexVSg7ElementQz_tF::SYNTHESIZED::s:11SwiftSyntax08ExprListB0V","extendedModule":"SwiftSyntax","modules":[{"name":"SwiftSyntax"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"text":"node","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SK7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"If ","type":"text"},{"code":"node","type":"codeVoice"},{"text":" is not part of this collection, returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This method is functionally equivalent to the one that takes"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"},{"text":". It is provided because otherwise ","type":"text"},{"type":"codeVoice","code":"Collection.index(of:)"},{"type":"text","text":" "},{"text":"is chosen, which is marked as deprecated and renamed to ","type":"text"},{"type":"codeVoice","code":"firstIndex(of:)"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprListSyntax\/SyntaxCollection-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprListSyntax\/index(of:)"},"abstract":[{"type":"text","text":"Return the index of "},{"code":"node","type":"codeVoice"},{"text":" within this collection.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprListSyntax":{"role":"symbol","kind":"symbol","type":"topic","title":"ExprListSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprListSyntax","navigatorTitle":[{"text":"ExprListSyntax","kind":"identifier"}],"abstract":[{"text":"A list of expressions connected by operators. This list is contained by a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/exprlistsyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExprListSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildrenIndex":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"An index in a syntax children collection."}],"url":"\/documentation\/swiftsyntax\/syntaxchildrenindex","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildrenIndex","type":"topic","navigatorTitle":[{"text":"SyntaxChildrenIndex","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildrenIndex"}],"title":"SyntaxChildrenIndex"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprListSyntax/index(of:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprListSyntax\/index(of:)","title":"index(of:)","url":"\/documentation\/swiftsyntax\/exprlistsyntax\/index(of:)","type":"topic","role":"symbol","abstract":[{"text":"Return the index of ","type":"text"},{"code":"node","type":"codeVoice"},{"type":"text","text":" within this collection."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprListSyntax/SyntaxCollection-Implementations":{"url":"\/documentation\/swiftsyntax\/exprlistsyntax\/syntaxcollection-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprListSyntax\/SyntaxCollection-Implementations","title":"SyntaxCollection Implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SequenceExprSyntax":{"url":"\/documentation\/swiftsyntax\/sequenceexprsyntax","type":"topic","abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"title":"SequenceExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SequenceExprSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}]}}}