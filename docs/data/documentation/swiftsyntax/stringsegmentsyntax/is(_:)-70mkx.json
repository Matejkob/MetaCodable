{"kind":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This cast will always succeed","type":"text"}]}],"metadata":{"roleHeading":"Instance Method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbxmF::SYNTHESIZED::s:11SwiftSyntax013StringSegmentB0V","modules":[{"name":"SwiftSyntax"}],"title":"is(_:)","symbolKind":"method","platforms":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","extendedModule":"SwiftSyntax"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/is(_:)-70mkx"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"text":" since the node is already of its own type.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This method overloads the general ","type":"text"},{"code":"is","type":"codeVoice"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"type":"text","text":" "},{"text":"informing the user that the cast will always succeed.","type":"text"}]}],"style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/stringsegmentsyntax\/is(_:)-70mkx"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/SyntaxProtocol-Implementations"]]},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/is(_:)-70mkx":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/is(_:)-70mkx","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"title":"is(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/is(_:)-70mkx","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/SyntaxProtocol-Implementations","kind":"article","title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/syntaxprotocol-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax":{"navigatorTitle":[{"kind":"identifier","text":"StringSegmentSyntax"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax","abstract":[{"type":"text","text":"A literal segment inside a string segment."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringSegmentSyntax"}],"kind":"symbol","title":"StringSegmentSyntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"}}}