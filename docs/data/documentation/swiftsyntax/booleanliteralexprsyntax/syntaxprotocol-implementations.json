{"metadata":{"title":"SyntaxProtocol Implementations","roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"SwiftSyntax"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax"]]},"topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/init(_:)-3on0h"],"title":"Initializers"},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedLength"]},{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-1h67v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-2bt0b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-3awqs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-3e0r5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-4g8de","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-4y3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-5anp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-5oa15","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6hyif","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6r79k","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6vsg6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-7etxr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-9jy73","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-9o24f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-16056","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-2fg13","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-2ppcx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3g66x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3nqqc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3ylyy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-43l8j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-4s2jm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-4taqm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-5dhmc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-6ea8m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-9yrdb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-cvts","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-mimj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/write(to:)"],"title":"Instance Methods","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/SyntaxProtocol-Implementations"},"kind":"article","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/write(to:)":{"title":"write(to:)","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/write(to:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Target","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/write(to:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/index":{"deprecated":true,"title":"index","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/index","abstract":[{"text":"The index of this node in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","isActive":true},{"text":" collection.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/index","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/parent":{"title":"parent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/parent","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-7etxr":{"title":"asProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-7etxr","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-7etxr","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/leadingTrivia":{"title":"leadingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/leadingtrivia","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/children(viewMode:)":{"title":"children(viewMode:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/children(viewMode:)","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/children(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxChildren","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmed(matching:)":{"title":"trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"text":" trimmed from the","type":"text"},{"text":" ","type":"text"},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmed(matching:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasError":{"title":"hasError","role":"symbol","type":"topic","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasError","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/haserror","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/leadingTriviaLength":{"title":"leadingTriviaLength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/leadingtrivialength","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-4y3":{"title":"asProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-4y3","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-4y3","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/byteRange":{"title":"byteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/byterange","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteRange","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/token(at:)":{"title":"token(at:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/token(at:)","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"text":"syntax node or any of its children.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"token"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/nextToken(viewMode:)":{"title":"nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"text":"after this node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/nexttoken(viewmode:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/nextToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmed":{"title":"trimmed","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmed","abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmed","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/previousToken(viewMode:)":{"type":"topic","title":"previousToken(viewMode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"text":"this node.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/previousToken(viewMode:)","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/previoustoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-16056":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-16056","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-16056","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/previousToken":{"title":"previousToken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/previoustoken","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/previousToken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-cvts":{"title":"isProtocol(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-cvts","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-cvts","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-6r79k":{"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-6r79k","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6r79k"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/keyPathInParent":{"title":"keyPathInParent","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/keyPathInParent","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/keypathinparent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/firstToken(viewMode:)":{"title":"firstToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/firsttoken(viewmode:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/firstToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanLiteralExprSyntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"kind":"symbol","abstract":[],"title":"BooleanLiteralExprSyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmedByteRange":{"title":"trimmedByteRange","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedByteRange","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmedbyterange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-3ylyy":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3ylyy","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-3ylyy","type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-5dhmc":{"role":"symbol","title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-5dhmc","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-5dhmc","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasWarning":{"title":"hasWarning","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic"},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/haswarning","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trailingTrivia":{"title":"trailingTrivia","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trailingTrivia","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trailingtrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/root":{"title":"root","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/root","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmedDescription":{"title":"trimmedDescription","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedDescription","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmeddescription","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-9jy73":{"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-9jy73","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-9jy73"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/endLocation(converter:afterTrailingTrivia:)":{"title":"endLocation(converter:afterTrailingTrivia:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endLocation(converter:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/endlocation(converter:aftertrailingtrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/id":{"title":"id","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/id","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/id"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/lastToken(viewMode:)":{"title":"lastToken(viewMode:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/lastToken(viewMode:)","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/lasttoken(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/nextToken":{"title":"nextToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/nexttoken","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/nextToken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-6vsg6":{"title":"asProtocol(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6vsg6","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-6vsg6","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-6ea8m":{"title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-6ea8m","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-6ea8m"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-1h67v":{"title":"asProtocol(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-1h67v","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-1h67v","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-3e0r5":{"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-3e0r5","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-3e0r5"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/position":{"title":"position","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/position","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/position","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"position"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-2fg13":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-2fg13","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-2fg13","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/startLocation(converter:afterLeadingTrivia:)":{"title":"startLocation(converter:afterLeadingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier"}],"abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/startlocation(converter:afterleadingtrivia:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/startLocation(converter:afterLeadingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/byteSizeAfterTrimmingTrivia":{"deprecated":true,"title":"byteSizeAfterTrimmingTrivia","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteSizeAfterTrimmingTrivia","abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/bytesizeaftertrimmingtrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/syntaxNodeType":{"title":"syntaxNodeType","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":".Type","kind":"text"}],"abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/syntaxnodetype","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/detached":{"title":"detached","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/detached","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/detached","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/byteSize":{"title":"byteSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/bytesize","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteSize","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-2bt0b":{"title":"asProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-2bt0b","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"BracedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-2bt0b","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trailingTriviaLength":{"title":"trailingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trailingTriviaLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trailingtrivialength","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trailingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasSequenceExpr":{"title":"hasSequenceExpr","role":"symbol","type":"topic","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasSequenceExpr","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/hassequenceexpr","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasSequenceExpr"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/totalLength":{"title":"totalLength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/totallength","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/totalLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-5anp":{"title":"asProtocol(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-5anp","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-5anp","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-2ppcx":{"title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-2ppcx","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-2ppcx"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/description":{"title":"description","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/description","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/description","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-9o24f":{"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-9o24f","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-9o24f"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-43l8j":{"type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-43l8j","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-43l8j"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmedDescription(matching:)":{"title":"trimmedDescription(matching:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"text":"last token.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedDescription(matching:)","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmeddescription(matching:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasParent":{"title":"hasParent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/hasparent","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isImplicit":{"deprecated":true,"title":"isImplicit","role":"symbol","type":"topic","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isImplicit","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isimplicit","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/node(at:)":{"title":"node(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"identifier."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/node(at:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/endPosition":{"title":"endPosition","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endPosition","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/endposition","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/positionAfterSkippingLeadingTrivia":{"title":"positionAfterSkippingLeadingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/positionafterskippingleadingtrivia","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/positionAfterSkippingLeadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/firstToken":{"deprecated":true,"title":"firstToken","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/firstToken","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/firsttoken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/totalByteRange":{"title":"totalByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/totalbyterange","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/totalByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-3g66x":{"title":"isProtocol(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3g66x","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-3g66x","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-3nqqc":{"title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-3nqqc","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3nqqc"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-4g8de":{"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-4g8de","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-4g8de"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/kind":{"title":"kind","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/kind","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"kind"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-6hyif":{"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-6hyif","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6hyif"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"title":"debugDescription(includeTrivia:converter:mark:indentString:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmedLength":{"title":"trimmedLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"text":"leading or trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmedlength","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/with(_:_:)":{"title":"with(_:_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/with(_:_:)","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/with(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-5oa15":{"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-5oa15","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-5oa15"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-mimj":{"title":"isProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-mimj","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-mimj","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-3awqs":{"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-3awqs","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-3awqs"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-9yrdb":{"title":"isProtocol(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-9yrdb","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-9yrdb","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/syntaxTextBytes":{"title":"syntaxTextBytes","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/syntaxtextbytes","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/syntaxTextBytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/lastToken":{"deprecated":true,"title":"lastToken","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/lastToken","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/lasttoken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/init(_:)-3on0h":{"title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S"},{"text":"?)","kind":"text"}],"abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/init(_:)-3on0h","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/init(_:)-3on0h"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-4s2jm":{"title":"isProtocol(_:)","role":"symbol","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-4s2jm","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-4s2jm","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/tokens(viewMode:)":{"title":"tokens(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"tokens","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/tokens(viewmode:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasMaximumNestingLevelOverflow":{"title":"hasMaximumNestingLevelOverflow","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasMaximumNestingLevelOverflow","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/hasmaximumnestingleveloverflow","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/endPositionBeforeTrailingTrivia":{"title":"endPositionBeforeTrailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/endpositionbeforetrailingtrivia","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endPositionBeforeTrailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/debugDescription":{"title":"debugDescription","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/debugDescription","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/debugdescription","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-4taqm":{"title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-4taqm","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-4taqm"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/contentLength":{"deprecated":true,"title":"contentLength","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/contentLength","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/contentlength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/detach()":{"title":"detach()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/detach()","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/detach()","deprecated":true}}}