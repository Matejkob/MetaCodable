{"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax\/unexpectedBetweenIdentifierAndAssociatedValue","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax"]]},"metadata":{"title":"unexpectedBetweenIdentifierAndAssociatedValue","extendedModule":"SwiftSyntax","symbolKind":"property","roleHeading":"Instance Property","platforms":[],"externalID":"s:11SwiftSyntax015EnumCaseElementB0V45unexpectedBetweenIdentifierAndAssociatedValueAA015UnexpectedNodesB0VSgvp","modules":[{"name":"SwiftSyntax"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpectedBetweenIdentifierAndAssociatedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBetweenIdentifierAndAssociatedValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax"},{"text":"? { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/enumcaseelementsyntax\/unexpectedbetweenidentifierandassociatedvalue"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnexpectedNodesSyntax":{"url":"\/documentation\/swiftsyntax\/unexpectednodessyntax","title":"UnexpectedNodesSyntax","abstract":[{"type":"text","text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree."}],"type":"topic","navigatorTitle":[{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementSyntax/unexpectedBetweenIdentifierAndAssociatedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenIdentifierAndAssociatedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax\/unexpectedBetweenIdentifierAndAssociatedValue","url":"\/documentation\/swiftsyntax\/enumcaseelementsyntax\/unexpectedbetweenidentifierandassociatedvalue","abstract":[],"kind":"symbol","title":"unexpectedBetweenIdentifierAndAssociatedValue","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementSyntax":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax","url":"\/documentation\/swiftsyntax\/enumcaseelementsyntax","abstract":[{"text":"An element of an enum case, containing the name of the case and, optionally, either associated values or an assignment to a raw value.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnumCaseElementSyntax"}],"title":"EnumCaseElementSyntax","navigatorTitle":[{"text":"EnumCaseElementSyntax","kind":"identifier"}]}}}