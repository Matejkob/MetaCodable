{"abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterListSyntax\/SyntaxProtocol-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/closureshorthandparameterlistsyntax\/firsttoken(viewmode:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterListSyntax\/firstToken(viewMode:)"},"sections":[],"kind":"symbol","metadata":{"modules":[{"name":"SwiftSyntax"}],"roleHeading":"Instance Method","title":"firstToken(viewMode:)","extendedModule":"SwiftSyntax","symbolKind":"method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE10firstToken8viewModeAA0eB0VSgAA0b8TreeViewG0O_tF::SYNTHESIZED::s:11SwiftSyntax029ClosureShorthandParameterListB0V","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureShorthandParameterListSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","role":"collectionGroup","kind":"article","abstract":[],"url":"\/documentation\/swiftsyntax\/closureshorthandparameterlistsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterListSyntax\/SyntaxProtocol-Implementations","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxTreeViewMode":{"abstract":[{"text":"Specifies how missing and unexpected nodes should be handled when traversing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a syntax tree."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxTreeViewMode"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode","url":"\/documentation\/swiftsyntax\/syntaxtreeviewmode","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxTreeViewMode"}],"title":"SyntaxTreeViewMode"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureShorthandParameterListSyntax":{"role":"symbol","abstract":[{"text":"A list of closure parameters that are not parenthesized and donâ€™t have type annotations.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ClosureShorthandParameterListSyntax"}],"url":"\/documentation\/swiftsyntax\/closureshorthandparameterlistsyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClosureShorthandParameterListSyntax","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterListSyntax","title":"ClosureShorthandParameterListSyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenSyntax":{"title":"TokenSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/tokensyntax","role":"symbol","type":"topic","navigatorTitle":[{"text":"TokenSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A Syntax node representing a single token."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TokenSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureShorthandParameterListSyntax/firstToken(viewMode:)":{"kind":"symbol","abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/closureshorthandparameterlistsyntax\/firsttoken(viewmode:)","role":"symbol","title":"firstToken(viewMode:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterListSyntax\/firstToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}]}}}