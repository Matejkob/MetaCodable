{"abstract":[{"type":"text","text":"Return the index of "},{"code":"node","type":"codeVoice"},{"text":" within this collection.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/index(of:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftsyntax\/conditionelementlistsyntax\/index(of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/SyntaxCollection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"node"},{"kind":"text","text":": "},{"text":"Element","preciseIdentifier":"s:SK7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildrenIndex","kind":"typeIdentifier","text":"SyntaxChildrenIndex"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"node"},{"type":"text","text":" is not part of this collection, returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"},{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"This method is functionally equivalent to the one that takes"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"},{"text":". It is provided because otherwise ","type":"text"},{"code":"Collection.index(of:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"is chosen, which is marked as deprecated and renamed to ","type":"text"},{"code":"firstIndex(of:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}]}],"metadata":{"title":"index(of:)","roleHeading":"Instance Method","extendedModule":"SwiftSyntax","symbolKind":"method","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B10CollectionPAAE5index2ofAA0B13ChildrenIndexVSg7ElementQz_tF::SYNTHESIZED::s:11SwiftSyntax020ConditionElementListB0V","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"Element","preciseIdentifier":"s:SK7ElementQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier","text":"SyntaxChildrenIndex"},{"text":"?","kind":"text"}],"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/SyntaxCollection-Implementations":{"title":"SyntaxCollection Implementations","kind":"article","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/syntaxcollection-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/SyntaxCollection-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/index(of:)":{"title":"index(of:)","kind":"symbol","abstract":[{"text":"Return the index of ","type":"text"},{"code":"node","type":"codeVoice"},{"text":" within this collection.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/index(of:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"Element","preciseIdentifier":"s:SK7ElementQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/index(of:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionElementListSyntax"}],"title":"ConditionElementListSyntax","navigatorTitle":[{"text":"ConditionElementListSyntax","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildrenIndex":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"An index in a syntax children collection."}],"url":"\/documentation\/swiftsyntax\/syntaxchildrenindex","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildrenIndex","type":"topic","navigatorTitle":[{"text":"SyntaxChildrenIndex","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildrenIndex"}],"title":"SyntaxChildrenIndex"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]}}}