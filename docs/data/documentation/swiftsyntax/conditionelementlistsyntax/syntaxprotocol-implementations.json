{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/SyntaxProtocol-Implementations"},"metadata":{"title":"SyntaxProtocol Implementations","modules":[{"name":"SwiftSyntax"}],"roleHeading":"API Collection","role":"collectionGroup"},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/init(_:)-73pbn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/init(_:)-n80"],"anchor":"Initializers"},{"anchor":"Instance-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedLength"],"title":"Instance Properties","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-21gt5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-4h2u0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-5zv18","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-17eyf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-1afnx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-2jgin","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-39kb9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-3a1lr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-3nu9d","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-41ajz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-46n9m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-47wgz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-55al3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-6esiq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-6n3l0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-714j6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-9xqdj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-5qqab","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-7petv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-9cee2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-4p96k","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-611gj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-9068v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-1a1gr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-23d2x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-2xm7n","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-3zjei","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-54vpb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-58ztc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-5l6zw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-611d8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-6ph86","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-6zw2i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-89snu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-9mwk1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-br0j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-k2nw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/write(to:)"],"generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/structure"],"generated":true,"anchor":"Type-Properties","title":"Type Properties"}],"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-k2nw":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-k2nw","kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-k2nw"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasParent":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasParent","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/hasparent","title":"hasParent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":"("},{"kind":"externalParam","text":"includeTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":"?, "},{"text":"mark","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","role":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/id":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/id","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/id","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"kind":"symbol","title":"id","role":"symbol","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/position":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/position","kind":"symbol","role":"symbol","title":"position","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/position","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/byteSizeAfterTrimmingTrivia":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/bytesizeaftertrimmingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteSizeAfterTrimmingTrivia","deprecated":true,"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"kind":"symbol","title":"byteSizeAfterTrimmingTrivia","abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/syntaxTextBytes":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":"]"}],"title":"syntaxTextBytes","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/syntaxTextBytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"type":"text","text":" "},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/syntaxtextbytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/description":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/description","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/description","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"role":"symbol","title":"description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/endPosition":{"abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endPosition","title":"endPosition","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/endposition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/node(at:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/node(at:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/node(at:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"identifier."}],"title":"node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/is(_:)-611gj":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-611gj","kind":"symbol","title":"is(_:)","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/is(_:)-611gj","type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/is(_:)-4p96k":{"deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"is(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/is(_:)-4p96k","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-4p96k","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasError":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/haserror","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasError"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"hasError","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasError","role":"symbol","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmedDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedDescription","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmeddescription","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and trailing whitespace of the last token removed."}],"title":"trimmedDescription","kind":"symbol","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/positionAfterSkippingLeadingTrivia":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/positionafterskippingleadingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/positionAfterSkippingLeadingTrivia","title":"positionAfterSkippingLeadingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia attached to the first token syntax."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmedLength":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmedlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedLength","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","title":"trimmedLength","role":"symbol","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/index":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"text":"SyntaxChildrenIndex","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"title":"index","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/index","abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"type":"text","text":" collection."}],"type":"topic","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/index","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/debugDescription":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/debugDescription","kind":"symbol","title":"debugDescription","type":"topic","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/debugdescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/init(_:)-73pbn":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/init(_:)-73pbn","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"title":"init(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/init(_:)-73pbn","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Children","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Children","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp"},{"text":")","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-6n3l0":{"title":"asProtocol(_:)","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-6n3l0","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-6n3l0","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/endLocation(converter:afterTrailingTrivia:)":{"abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endLocation(converter:afterTrailingTrivia:)","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/endlocation(converter:aftertrailingtrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"title":"endLocation(converter:afterTrailingTrivia:)","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/root":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/root","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/root","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"title":"root","kind":"symbol","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/firstToken":{"role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/firstToken","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/firsttoken","type":"topic","title":"firstToken","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/is(_:)-9068v":{"type":"topic","title":"is(_:)","role":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/is(_:)-9068v","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-9068v"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-611d8":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-611d8","kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"BracedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-611d8"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-3zjei":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-3zjei","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-3zjei","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/cast(_:)-7petv":{"title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/cast(_:)-7petv","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-7petv","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-89snu":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-89snu","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-89snu"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-17eyf":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-17eyf","kind":"symbol","type":"topic","title":"asProtocol(_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-17eyf"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasSequenceExpr":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/hassequenceexpr","title":"hasSequenceExpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasSequenceExpr","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/leadingTriviaLength":{"title":"leadingTriviaLength","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/leadingtrivialength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/kind":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/kind","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true},{"type":"text","text":"."}],"kind":"symbol","title":"kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-55al3":{"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-55al3","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-55al3","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-6ph86":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-6ph86","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-6ph86","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-5l6zw":{"title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-5l6zw","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-5l6zw","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/byteRange":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteRange","deprecated":true,"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/byterange","title":"byteRange","abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/nextToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/nextToken","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/nexttoken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[],"title":"nextToken","kind":"symbol","type":"topic","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/parent":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/parent","kind":"symbol","title":"parent","type":"topic","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/leadingTrivia":{"type":"topic","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"title":"leadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/leadingTrivia","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/leadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-714j6":{"title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-714j6","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-714j6","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/detach()":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/detach()","deprecated":true,"title":"detach()","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/detach()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmed":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmed","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmed","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"title":"trimmed","kind":"symbol","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/as(_:)-21gt5":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-21gt5","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"deprecated":true,"title":"as(_:)","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/as(_:)-21gt5"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-6zw2i":{"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-6zw2i","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-6zw2i","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasWarning":{"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasWarning"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/haswarning","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasWarning","type":"topic","title":"hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/keyPathInParent":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/keypathinparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/keyPathInParent","title":"keyPathInParent","kind":"symbol","type":"topic","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"text":": ","kind":"text"},{"text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/totalLength":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/totalLength","kind":"symbol","title":"totalLength","type":"topic","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/totallength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionElementListSyntax"}],"title":"ConditionElementListSyntax","navigatorTitle":[{"text":"ConditionElementListSyntax","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/as(_:)-4h2u0":{"deprecated":true,"title":"as(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-4h2u0","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/as(_:)-4h2u0","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trailingTriviaLength":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trailingTriviaLength","title":"trailingTriviaLength","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trailingtrivialength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/previousToken(viewMode:)":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/previousToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/previoustoken(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"type":"text","text":" "},{"text":"this node.","type":"text"}],"role":"symbol","title":"previousToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceRange"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/previousToken":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/previousToken","kind":"symbol","deprecated":true,"role":"symbol","abstract":[],"title":"previousToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/previoustoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-3a1lr":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-3a1lr","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-3a1lr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-58ztc":{"title":"isProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-58ztc","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-58ztc","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/firstToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/firstToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/firsttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"title":"firstToken(viewMode:)","kind":"symbol","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/lastToken":{"deprecated":true,"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/lasttoken","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/lastToken","title":"lastToken","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/nextToken(viewMode:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/nexttoken(viewmode:)","title":"nextToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/nextToken(viewMode:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"type":"text","text":"after this node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/structure":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/structure","title":"structure","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"structure","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/structure"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/detached":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/detached","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/detached","title":"detached","role":"symbol","kind":"symbol","abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"text":" ","type":"text"},{"text":"from its parent.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/startLocation(converter:afterLeadingTrivia:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol","title":"startLocation(converter:afterLeadingTrivia:)","type":"topic","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/startlocation(converter:afterleadingtrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/with(_:_:)":{"title":"with(_:_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/with(_:_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/with(_:_:)","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"code":"keyPath","type":"codeVoice"},{"text":" replaced by","type":"text"},{"text":" ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"with"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-9mwk1":{"title":"isProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-9mwk1","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-9mwk1"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endPositionBeforeTrailingTrivia","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"type":"topic","title":"endPositionBeforeTrailingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/endpositionbeforetrailingtrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-9xqdj":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-9xqdj","title":"asProtocol(_:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-9xqdj"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/as(_:)-5zv18":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/as(_:)-5zv18","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-5zv18","title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-2xm7n":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-2xm7n","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-2xm7n","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-47wgz":{"kind":"symbol","role":"symbol","title":"asProtocol(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-47wgz","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-47wgz"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmedByteRange":{"kind":"symbol","title":"trimmedByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedByteRange","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmedbyterange","role":"symbol","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-46n9m":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-46n9m","kind":"symbol","title":"asProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-46n9m"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trailingTrivia":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trailingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trailingTrivia","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}],"kind":"symbol","title":"trailingTrivia","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-41ajz":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-41ajz","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-41ajz","role":"symbol","kind":"symbol","title":"asProtocol(_:)","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/cast(_:)-5qqab":{"abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/cast(_:)-5qqab","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-5qqab","title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/write(to:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/write(to:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/write(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Target","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"title":"write(to:)","kind":"symbol","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/init(_:)-n80":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/init(_:)-n80","kind":"symbol","title":"init(_:)","type":"topic","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/init(_:)-n80"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/cast(_:)-9cee2":{"role":"symbol","deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/cast(_:)-9cee2","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-9cee2","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"type":"topic","title":"cast(_:)","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"text":" node..","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-6esiq":{"role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-6esiq","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-6esiq","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-2jgin":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-2jgin","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-2jgin","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/children(viewMode:)":{"title":"children(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/children(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/children(viewMode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"kind":"symbol","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isImplicit":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isimplicit","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isImplicit","type":"topic","title":"isImplicit"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-54vpb":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-54vpb","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-54vpb","role":"symbol","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/token(at:)":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/token(at:)","role":"symbol","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"title":"token(at:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/syntaxNodeType":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/syntaxNodeType","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/syntaxnodetype","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"text":".Type","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"role":"symbol","title":"syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-3nu9d":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-3nu9d","type":"topic","title":"asProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-3nu9d","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-39kb9":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-39kb9","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-39kb9","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmedDescription(matching:)":{"kind":"symbol","abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"text":"last token.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmeddescription(matching:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedDescription(matching:)","title":"trimmedDescription(matching:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/lastToken(viewMode:)":{"role":"symbol","title":"lastToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/lasttoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/lastToken(viewMode:)","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-br0j":{"title":"isProtocol(_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-br0j","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-br0j","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasMaximumNestingLevelOverflow":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/hasmaximumnestingleveloverflow","title":"hasMaximumNestingLevelOverflow","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasMaximumNestingLevelOverflow","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/totalByteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/totalByteRange","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"type":"topic","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/totalbyterange","role":"symbol","title":"totalByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-1afnx":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-1afnx","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-1afnx","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/contentLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/contentLength","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/contentlength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contentLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"abstract":[],"title":"contentLength","kind":"symbol","type":"topic","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/tokens(viewMode:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/tokens(viewmode:)","kind":"symbol","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/tokens(viewMode:)","title":"tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-1a1gr":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-1a1gr","type":"topic","title":"isProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-1a1gr","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-23d2x":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-23d2x","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-23d2x","title":"isProtocol(_:)","role":"symbol","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/byteSize":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteSize","kind":"symbol","title":"byteSize","type":"topic","deprecated":true,"abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/bytesize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmed(matching:)":{"title":"trimmed(matching:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmed(matching:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmed(matching:)"}}}