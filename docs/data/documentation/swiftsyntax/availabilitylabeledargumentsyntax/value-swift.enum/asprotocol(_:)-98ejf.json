{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityLabeledArgumentSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum\/SyntaxProtocol-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum\/asProtocol(_:)-98ejf"},"sections":[],"variants":[{"paths":["\/documentation\/swiftsyntax\/availabilitylabeledargumentsyntax\/value-swift.enum\/asprotocol(_:)-98ejf"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"SwiftSyntax","role":"symbol","symbolKind":"method","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA026FreestandingMacroExpansionB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax027AvailabilityLabeledArgumentB0V5ValueO","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"platforms":["macOS"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/FreestandingMacroExpansionSyntax":{"navigatorTitle":[{"kind":"identifier","text":"FreestandingMacroExpansionSyntax"}],"abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/freestandingmacroexpansionsyntax","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FreestandingMacroExpansionSyntax","kind":"identifier"}],"type":"topic","title":"FreestandingMacroExpansionSyntax","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FreestandingMacroExpansionSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityLabeledArgumentSyntax/Value-swift.enum/SyntaxProtocol-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","title":"SyntaxProtocol Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum\/SyntaxProtocol-Implementations","url":"\/documentation\/swiftsyntax\/availabilitylabeledargumentsyntax\/value-swift.enum\/syntaxprotocol-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityLabeledArgumentSyntax":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AvailabilityLabeledArgumentSyntax","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AvailabilityLabeledArgumentSyntax"}],"kind":"symbol","title":"AvailabilityLabeledArgumentSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityLabeledArgumentSyntax","url":"\/documentation\/swiftsyntax\/availabilitylabeledargumentsyntax","abstract":[{"text":"An argument to an ","type":"text"},{"type":"codeVoice","code":"@available"},{"text":" attribute that consists of a label and a value, e.g. ","type":"text"},{"type":"codeVoice","code":"message: \"This has been deprecated\""},{"type":"text","text":"."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityLabeledArgumentSyntax/Value-swift.enum/asProtocol(_:)-98ejf":{"type":"topic","role":"symbol","title":"asProtocol(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum\/asProtocol(_:)-98ejf","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/availabilitylabeledargumentsyntax\/value-swift.enum\/asprotocol(_:)-98ejf"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityLabeledArgumentSyntax/Value-swift.enum":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Value"}],"title":"AvailabilityLabeledArgumentSyntax.Value","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum","url":"\/documentation\/swiftsyntax\/availabilitylabeledargumentsyntax\/value-swift.enum"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"}}}