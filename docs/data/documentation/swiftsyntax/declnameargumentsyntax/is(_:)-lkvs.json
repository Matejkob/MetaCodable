{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/is(_:)-lkvs"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"languages":["swift"]}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"text":" since the node can always be upcast to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"is"},{"type":"text","text":" method and is marked deprecated to produce a warning"},{"text":" ","type":"text"},{"text":"informing the user that the upcast will always succeed.","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/SyntaxProtocol-Implementations"]]},"metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"SwiftSyntax"}],"platforms":[],"extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbAA0B0VmF::SYNTHESIZED::s:11SwiftSyntax016DeclNameArgumentB0V","title":"is(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"variants":[{"paths":["\/documentation\/swiftsyntax\/declnameargumentsyntax\/is(_:)-lkvs"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/SyntaxProtocol-Implementations","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/is(_:)-lkvs":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/is(_:)-lkvs","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node."}],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/is(_:)-lkvs","role":"symbol","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax":{"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax","abstract":[],"role":"symbol","navigatorTitle":[{"text":"DeclNameArgumentSyntax","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeclNameArgumentSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax","title":"DeclNameArgumentSyntax"}}}