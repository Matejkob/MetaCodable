{"sections":[],"kind":"article","metadata":{"roleHeading":"API Collection","modules":[{"name":"SwiftSyntax"}],"title":"SyntaxProtocol Implementations","role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/init(_:)-9gfx1"],"generated":true,"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmedLength"],"anchor":"Instance-Properties","generated":true},{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/as(_:)-216xt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/as(_:)-58wbf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/as(_:)-6eqam","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-1evw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-210wb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-2irc7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-2lxve","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-4lsc8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-4s7tl","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-4y8t4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-4yed6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-6hl2g","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-6wqow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-8wpk2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-911i4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-9ccbh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-r2bl","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/cast(_:)-23b3u","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/cast(_:)-4geqr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/cast(_:)-6nsln","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/is(_:)-5b5zb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/is(_:)-dz03","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/is(_:)-lkvs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-1dvpi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-1qhxh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-1zcse","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-201md","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-2qqd4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-2t6e2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-4uwa3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-55glp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-5g2yp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-5s5o0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-6aral","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-6g8wt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-9dais","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-q4mq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/write(to:)"],"generated":true,"title":"Instance Methods"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/previousToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/previousToken(viewMode:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"text":"this node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/previoustoken(viewmode:)","role":"symbol","title":"previousToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-1qhxh":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-1qhxh","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-1qhxh","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-210wb":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-210wb","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-210wb","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-6g8wt":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-6g8wt","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-6g8wt","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/parent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/parent","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"text":": ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"abstract":[{"text":"The parent of this syntax node, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if this node is the root."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/parent","role":"symbol","title":"parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/init(_:)-9gfx1":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/init(_:)-9gfx1","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"type":"topic","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"kind":"text","text":"?)"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/init(_:)-9gfx1","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-911i4":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-911i4","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-911i4","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/id":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/id","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"title":"id","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/id","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-55glp":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-55glp","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-55glp","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-201md":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-201md","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-201md","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/cast(_:)-6nsln":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/cast(_:)-6nsln","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node.."}],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/cast(_:)-6nsln","role":"symbol","title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-2qqd4":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-2qqd4","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-2qqd4","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-1zcse":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-1zcse","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-1zcse","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/endLocation(converter:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/endLocation(converter:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"type":"topic","title":"endLocation(converter:afterTrailingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/endlocation(converter:aftertrailingtrivia:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/trimmedDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmedDescription","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"text":" ","type":"text"},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/trimmeddescription","role":"symbol","title":"trimmedDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/cast(_:)-23b3u":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/cast(_:)-23b3u","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"title":"cast(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/cast(_:)-23b3u","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/detach()":{"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/detach()","abstract":[],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/detach()","title":"detach()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/byteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/byteRange","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"abstract":[],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/byterange","role":"symbol","title":"byteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-4y8t4":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-4y8t4","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-4y8t4","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/root":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/root","type":"topic","kind":"symbol","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"role":"symbol","title":"root","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/write(to:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/write(to:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/write(to:)","role":"symbol","title":"write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/trimmedDescription(matching:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmedDescription(matching:)","abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"text":"last token.","type":"text"}],"type":"topic","title":"trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/trimmeddescription(matching:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-5g2yp":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-5g2yp","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-5g2yp","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/description":{"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/description","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/description","title":"description","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/endPositionBeforeTrailingTrivia","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"type":"topic","title":"endPositionBeforeTrailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/endpositionbeforetrailingtrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/tokens(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/tokens(viewMode:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"TokenSequence","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/tokens(viewmode:)","role":"symbol","title":"tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/trailingTriviaLength":{"kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/trailingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trailingTriviaLength","title":"trailingTriviaLength","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-r2bl":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-r2bl","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-r2bl","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/totalLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/totalLength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/totallength","role":"symbol","title":"totalLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/leadingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/leadingTrivia","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"type":"topic","title":"leadingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/leadingtrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-6aral":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-6aral","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-6aral","type":"topic","role":"symbol","title":"isProtocol(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-9dais":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-9dais","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-9dais","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/positionAfterSkippingLeadingTrivia":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/positionAfterSkippingLeadingTrivia","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/positionafterskippingleadingtrivia","title":"positionAfterSkippingLeadingTrivia","kind":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/nextToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/nextToken","abstract":[],"type":"topic","title":"nextToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/nexttoken","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/firstToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/firstToken","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/firsttoken","role":"symbol","title":"firstToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-5s5o0":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-5s5o0","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-5s5o0","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/with(_:_:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/with(_:_:)","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/with(_:_:)","kind":"symbol","role":"symbol","title":"with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/keyPathInParent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/keyPathInParent","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyPathInParent"},{"text":": ","kind":"text"},{"text":"AnyKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC"},{"text":"?","kind":"text"}],"abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/keypathinparent","role":"symbol","title":"keyPathInParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isImplicit":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isImplicit","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"title":"isImplicit","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isImplicit"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isimplicit","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/detached":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/detached","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"type":"text","text":"from its parent."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/detached","role":"symbol","title":"detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/trimmedByteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmedByteRange","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"type":"topic","title":"trimmedByteRange","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/trimmedbyterange","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/leadingTriviaLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/leadingTriviaLength","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/leadingtrivialength","role":"symbol","title":"leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/hasParent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasParent","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"type":"topic","title":"hasParent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/hasparent","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/hasError":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasError","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/haserror","role":"symbol","title":"hasError"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/node(at:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"type":"topic","title":"node(at:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/node(at:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","kind":"typeIdentifier"}],"abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","role":"symbol","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/totalByteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/totalByteRange","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"title":"totalByteRange","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/totalbyterange","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-4lsc8":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-4lsc8","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-4lsc8","kind":"symbol","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/syntaxTextBytes":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/syntaxtextbytes","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"kind":"text","text":": ["},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}],"title":"syntaxTextBytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/syntaxTextBytes","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-6wqow":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-6wqow","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-6wqow","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/children(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/children(viewMode:)","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"title":"children(viewMode:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/children(viewmode:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/index":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/index","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxChildrenIndex","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"abstract":[{"type":"text","text":"The index of this node in a "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","isActive":true},{"text":" collection.","type":"text"}],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/index","role":"symbol","title":"index"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax":{"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax","abstract":[],"role":"symbol","navigatorTitle":[{"text":"DeclNameArgumentSyntax","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeclNameArgumentSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax","title":"DeclNameArgumentSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/hasSequenceExpr":{"abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasSequenceExpr","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/hassequenceexpr","title":"hasSequenceExpr","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/is(_:)-dz03":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/is(_:)-dz03","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"type":"topic","title":"is(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/is(_:)-dz03","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/token(at:)":{"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/token(at:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"token"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/token(at:)","kind":"symbol","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"text":"syntax node or any of its children.","type":"text"}],"title":"token(at:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/trailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trailingTrivia","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}],"abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/trailingtrivia","role":"symbol","title":"trailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/firstToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/firstToken(viewMode:)","abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"title":"firstToken(viewMode:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/firsttoken(viewmode:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/kind":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/kind","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"kind"},{"text":": ","kind":"text"},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/kind","role":"symbol","title":"kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-9ccbh":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-9ccbh","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-9ccbh","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/hasMaximumNestingLevelOverflow":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasMaximumNestingLevelOverflow","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/hasmaximumnestingleveloverflow","role":"symbol","title":"hasMaximumNestingLevelOverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/cast(_:)-4geqr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/cast(_:)-4geqr","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"type":"topic","title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/cast(_:)-4geqr","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/as(_:)-216xt":{"role":"symbol","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"kind":"symbol","title":"as(_:)","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/as(_:)-216xt","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/as(_:)-216xt"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/as(_:)-6eqam":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/as(_:)-6eqam","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":"?"}],"abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/as(_:)-6eqam","role":"symbol","title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-2t6e2":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-2t6e2","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-2t6e2","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/as(_:)-58wbf":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/as(_:)-58wbf","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/as(_:)-58wbf","role":"symbol","title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/debugDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/debugDescription","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"type":"topic","title":"debugDescription","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/debugdescription","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/lastToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/lastToken(viewMode:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/lasttoken(viewmode:)","role":"symbol","title":"lastToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/lastToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/lastToken","abstract":[],"title":"lastToken","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/lasttoken","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/byteSize":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/byteSize","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/bytesize","role":"symbol","title":"byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/endPosition":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/endPosition","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"title":"endPosition","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/endposition","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-2lxve":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-2lxve","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-2lxve","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/contentLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/contentLength","abstract":[],"type":"topic","title":"contentLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/contentlength","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/is(_:)-5b5zb":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/is(_:)-5b5zb","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/is(_:)-5b5zb","role":"symbol","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-4yed6":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-4yed6","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-4yed6","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-6hl2g":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-6hl2g","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-6hl2g","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/trimmedLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmedLength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"type":"topic","title":"trimmedLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/trimmedlength","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/position":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/position","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"text":"trivia.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/position","role":"symbol","title":"position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"title":"debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-4s7tl":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-4s7tl","title":"asProtocol(_:)","type":"topic","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-4s7tl","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-8wpk2":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-8wpk2","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-8wpk2","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/byteSizeAfterTrimmingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/byteSizeAfterTrimmingTrivia","abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"title":"byteSizeAfterTrimmingTrivia","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/bytesizeaftertrimmingtrivia","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/is(_:)-lkvs":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/is(_:)-lkvs","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node."}],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/is(_:)-lkvs","role":"symbol","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-q4mq":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-q4mq","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-q4mq","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-2irc7":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-2irc7","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-2irc7","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/previousToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/previousToken","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/previoustoken","kind":"symbol","role":"symbol","title":"previousToken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/startLocation(converter:afterLeadingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/startLocation(converter:afterLeadingTrivia:)","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"title":"startLocation(converter:afterLeadingTrivia:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startLocation"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/startlocation(converter:afterleadingtrivia:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/trimmed(matching:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmed(matching:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/trimmed(matching:)","role":"symbol","title":"trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-1dvpi":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-1dvpi","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-1dvpi","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/trimmed":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/trimmed","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/trimmed","role":"symbol","title":"trimmed"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/isProtocol(_:)-4uwa3":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/isProtocol(_:)-4uwa3","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/isprotocol(_:)-4uwa3","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/syntaxNodeType":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/syntaxNodeType","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":".Type","kind":"text"}],"abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/syntaxnodetype","role":"symbol","title":"syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/hasWarning":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/hasWarning","type":"topic","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/haswarning","title":"hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/nextToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/nextToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"text":"after this node.","type":"text"}],"type":"topic","title":"nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/nexttoken(viewmode:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/asProtocol(_:)-1evw":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/asProtocol(_:)-1evw","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/asprotocol(_:)-1evw","role":"symbol","title":"asProtocol(_:)"}}}