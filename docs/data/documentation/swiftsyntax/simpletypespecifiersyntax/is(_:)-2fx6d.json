{"kind":"symbol","deprecationSummary":[{"inlineContent":[{"type":"text","text":"This cast will always succeed"}],"type":"paragraph"}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax\/is(_:)-2fx6d","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}]},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" since the node can always be upcast to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"is"},{"text":" method and is marked deprecated to produce a warning","type":"text"},{"text":" ","type":"text"},{"text":"informing the user that the upcast will always succeed.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/simpletypespecifiersyntax\/is(_:)-2fx6d"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node.","type":"text"}],"sections":[],"metadata":{"roleHeading":"Instance Method","title":"is(_:)","modules":[{"name":"SwiftSyntax"}],"role":"symbol","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbAA0B0VmF::SYNTHESIZED::s:11SwiftSyntax019SimpleTypeSpecifierB0V","extendedModule":"SwiftSyntax","symbolKind":"method","platforms":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleTypeSpecifierSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SimpleTypeSpecifierSyntax","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SimpleTypeSpecifierSyntax"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/simpletypespecifiersyntax","abstract":[{"type":"text","text":"A specifier that can be attached to a type to eg. mark a parameter as "},{"code":"inout","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"consuming"}],"title":"SimpleTypeSpecifierSyntax","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleTypeSpecifierSyntax/is(_:)-2fx6d":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax\/is(_:)-2fx6d","type":"topic","title":"is(_:)","url":"\/documentation\/swiftsyntax\/simpletypespecifiersyntax\/is(_:)-2fx6d","deprecated":true,"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"text":" node.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleTypeSpecifierSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax\/SyntaxProtocol-Implementations","type":"topic","kind":"article","title":"SyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/simpletypespecifiersyntax\/syntaxprotocol-implementations","role":"collectionGroup","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"}}}