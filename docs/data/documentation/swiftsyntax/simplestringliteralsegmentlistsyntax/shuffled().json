{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/shuffled()"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/shuffled()"]}],"metadata":{"externalID":"s:STsE8shuffledSay7ElementQzGyF::SYNTHESIZED::s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"SwiftSyntax"}],"extendedModule":"Swift","role":"symbol","roleHeading":"Instance Method","title":"shuffled()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"shuffled","kind":"identifier"},{"text":"() -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Sequence.shuffled()"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shuffled"},{"text":"() -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/Sequence-Implementations"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax/Sequence-Implementations":{"title":"Sequence Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/sequence-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/Sequence-Implementations","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax/shuffled()":{"title":"shuffled()","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/shuffled()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/shuffled()","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"shuffled","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"]"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax":{"url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"title":"SimpleStringLiteralSegmentListSyntax","navigatorTitle":[{"text":"SimpleStringLiteralSegmentListSyntax","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}]}}}