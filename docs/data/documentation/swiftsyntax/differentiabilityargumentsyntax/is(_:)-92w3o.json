{"sections":[],"kind":"symbol","metadata":{"roleHeading":"Instance Method","platforms":[],"role":"symbol","modules":[{"name":"SwiftSyntax"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"is(_:)","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbxmF::SYNTHESIZED::s:11SwiftSyntax025DifferentiabilityArgumentB0V","extendedModule":"SwiftSyntax"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax\/is(_:)-92w3o","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax\/SyntaxProtocol-Implementations"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/differentiabilityargumentsyntax\/is(_:)-92w3o"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"text":" since the node is already of its own type.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"content":[{"inlineContent":[{"text":"This method overloads the general ","type":"text"},{"code":"is","type":"codeVoice"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"text":"informing the user that the cast will always succeed.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside","style":"note"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","kind":"article","url":"\/documentation\/swiftsyntax\/differentiabilityargumentsyntax\/syntaxprotocol-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax\/SyntaxProtocol-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentSyntax/is(_:)-92w3o":{"type":"topic","title":"is(_:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentsyntax\/is(_:)-92w3o","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax\/is(_:)-92w3o","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"deprecated":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentSyntax":{"title":"DifferentiabilityArgumentSyntax","url":"\/documentation\/swiftsyntax\/differentiabilityargumentsyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DifferentiabilityArgumentSyntax"}],"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A differentiability argument: either the “self” identifier, a function parameter name, or a function parameter index."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax","navigatorTitle":[{"text":"DifferentiabilityArgumentSyntax","kind":"identifier"}]}}}