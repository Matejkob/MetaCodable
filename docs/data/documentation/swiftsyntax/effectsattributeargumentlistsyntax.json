{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/init(_:)-28d1a"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Element"],"title":"Type Aliases","generated":true,"anchor":"Type-Aliases"},{"anchor":"Type-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/syntaxKind"],"title":"Type Properties","generated":true},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/BidirectionalCollection-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Collection-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/ExpressibleByArrayLiteral-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Sequence-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/SyntaxCollection-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/SyntaxProtocol-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/SK","doc:\/\/com.SwiftyLab.HelperCoders\/Sl","doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/s25ExpressibleByArrayLiteralP","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/ST","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectsAttributeArgumentListSyntax"}]}]},{"content":[{"level":3,"anchor":"Children","type":"heading","text":"Children"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax"},{"type":"text","text":" "},{"code":"*","type":"codeVoice"}],"type":"paragraph"},{"anchor":"Contained-in","level":3,"type":"heading","text":"Contained in"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AttributeSyntax"},{"type":"text","text":"."},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AttributeSyntax\/arguments-swift.property","type":"reference","isActive":true}]}]}]}],"kind":"content"}],"sections":[],"metadata":{"externalID":"s:11SwiftSyntax028EffectsAttributeArgumentListB0V","title":"EffectsAttributeArgumentListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EffectsAttributeArgumentListSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"EffectsAttributeArgumentListSyntax"}],"modules":[{"name":"SwiftSyntax"}],"role":"symbol","roleHeading":"Structure","symbolKind":"struct"},"abstract":[{"type":"text","text":"The arguments of the ‘@_effects’ attribute. These will be parsed during the SIL stage."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/SyntaxProtocol-Implementations":{"type":"topic","title":"SyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/syntaxprotocol-implementations","kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/SyntaxProtocol-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/Equatable-Implementations":{"type":"topic","kind":"article","title":"Equatable Implementations","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/equatable-implementations","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Equatable-Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/init(_:)-28d1a":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")"}],"title":"init(_:)","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/init(_:)-28d1a","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/init(_:)-28d1a","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxKind"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxKind"}],"title":"SyntaxKind","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxkind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind","abstract":[{"type":"text","text":"Enumerates the known kinds of Syntax represented in the Syntax tree."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenSyntax":{"title":"TokenSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/tokensyntax","role":"symbol","type":"topic","navigatorTitle":[{"text":"TokenSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A Syntax node representing a single token."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TokenSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/Sequence-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Sequence-Implementations","title":"Sequence Implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[],"url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/sequence-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/Element":{"abstract":[],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"navigatorTitle":[{"text":"Element","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Element","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/element","kind":"symbol","title":"EffectsAttributeArgumentListSyntax.Element","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/SQ":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","title":"Swift.Equatable"},"doc://com.SwiftyLab.HelperCoders/SK":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SK","title":"Swift.BidirectionalCollection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxHashable"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxhashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","role":"symbol","title":"SyntaxHashable","abstract":[{"text":"Protocol that provides a common Hashable implementation for all syntax nodes","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax":{"type":"topic","title":"EffectsAttributeArgumentListSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectsAttributeArgumentListSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"EffectsAttributeArgumentListSyntax"}],"url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax","kind":"symbol","abstract":[{"type":"text","text":"The arguments of the ‘@_effects’ attribute. These will be parsed during the SIL stage."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AttributeSyntax":{"navigatorTitle":[{"text":"AttributeSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AttributeSyntax","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/attributesyntax","abstract":[{"type":"text","text":"An "},{"code":"@","type":"codeVoice"},{"type":"text","text":" attribute."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AttributeSyntax","kind":"identifier"}],"title":"AttributeSyntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/Sl":{"type":"unresolvable","title":"Swift.Collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/Sl"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/syntaxKind":{"title":"syntaxKind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/syntaxKind","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxKind","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/syntaxkind","role":"symbol","abstract":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind"},{"text":" of the syntax node that conforms to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/ST":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/ST","title":"Swift.Sequence"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","title":"Swift.CustomReflectable"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/SyntaxCollection-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/syntaxcollection-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/SyntaxCollection-Implementations","abstract":[],"title":"SyntaxCollection Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/Collection-Implementations":{"url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/collection-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Collection-Implementations","type":"topic","kind":"article","title":"Collection Implementations","abstract":[],"role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxCollection":{"url":"\/documentation\/swiftsyntax\/syntaxcollection","navigatorTitle":[{"text":"SyntaxCollection","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","type":"topic","title":"SyntaxCollection","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxCollection","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","title":"Swift.TextOutputStreamable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/ExpressibleByArrayLiteral-Implementations":{"role":"collectionGroup","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/expressiblebyarrayliteral-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/ExpressibleByArrayLiteral-Implementations","abstract":[],"kind":"article","type":"topic","title":"ExpressibleByArrayLiteral Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AttributeSyntax/arguments-swift.property":{"url":"\/documentation\/swiftsyntax\/attributesyntax\/arguments-swift.property","kind":"symbol","type":"topic","role":"symbol","title":"arguments","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"arguments"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09AttributeB0V9ArgumentsO","text":"Arguments","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AttributeSyntax\/arguments-swift.property","abstract":[{"text":"The arguments of the attribute.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/bidirectionalcollection-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/BidirectionalCollection-Implementations","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/CustomReflectable-Implementations":{"title":"CustomReflectable Implementations","role":"collectionGroup","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/customreflectable-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/CustomReflectable-Implementations","type":"topic","kind":"article","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/Hashable-Implementations":{"title":"Hashable Implementations","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/hashable-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/Hashable-Implementations","role":"collectionGroup","kind":"article"},"doc://com.SwiftyLab.HelperCoders/SH":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","title":"Swift.Hashable"},"doc://com.SwiftyLab.HelperCoders/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral"}}}