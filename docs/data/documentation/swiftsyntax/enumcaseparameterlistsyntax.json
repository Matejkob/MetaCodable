{"variants":[{"paths":["\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/init(_:)-6vijm"],"title":"Initializers","anchor":"Initializers"},{"anchor":"Type-Aliases","generated":true,"title":"Type Aliases","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Element"]},{"title":"Type Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/syntaxKind"],"generated":true,"anchor":"Type-Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/BidirectionalCollection-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Collection-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/ExpressibleByArrayLiteral-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Sequence-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/SyntaxCollection-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/SyntaxProtocol-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"kind":"symbol","relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/SK","doc:\/\/com.SwiftyLab.HelperCoders\/Sl","doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/s25ExpressibleByArrayLiteralP","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/ST","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EnumCaseParameterListSyntax","kind":"identifier"}],"platforms":["macOS"]}]},{"content":[{"level":3,"type":"heading","text":"Children","anchor":"Children"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterSyntax"},{"text":" ","type":"text"},{"code":"*","type":"codeVoice"}]},{"type":"heading","anchor":"Contained-in","text":"Contained in","level":3},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax","isActive":true},{"text":".","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/parameters","isActive":true}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"sections":[],"metadata":{"modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax021EnumCaseParameterListB0V","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnumCaseParameterListSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"EnumCaseParameterListSyntax","kind":"identifier"}],"title":"EnumCaseParameterListSyntax","symbolKind":"struct","roleHeading":"Structure","role":"symbol"},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax","interfaceLanguage":"swift"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EnumCaseParameterClauseSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"EnumCaseParameterClauseSyntax","kind":"identifier"}],"title":"EnumCaseParameterClauseSyntax","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/SyntaxProtocol-Implementations":{"abstract":[],"title":"SyntaxProtocol Implementations","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/syntaxprotocol-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterSyntax":{"kind":"symbol","abstract":[],"navigatorTitle":[{"text":"EnumCaseParameterSyntax","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparametersyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnumCaseParameterSyntax"}],"title":"EnumCaseParameterSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/BidirectionalCollection-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/BidirectionalCollection-Implementations","title":"BidirectionalCollection Implementations","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/bidirectionalcollection-implementations","kind":"article","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxHashable"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxhashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","role":"symbol","title":"SyntaxHashable","abstract":[{"text":"Protocol that provides a common Hashable implementation for all syntax nodes","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/Hashable-Implementations":{"title":"Hashable Implementations","kind":"article","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/hashable-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Hashable-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/Element":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/element","title":"EnumCaseParameterListSyntax.Element","kind":"symbol","navigatorTitle":[{"text":"Element","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Element","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/SyntaxCollection-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/SyntaxCollection-Implementations","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/syntaxcollection-implementations","title":"SyntaxCollection Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://com.SwiftyLab.HelperCoders/SH":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","title":"Swift.Hashable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/ExpressibleByArrayLiteral-Implementations":{"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/ExpressibleByArrayLiteral-Implementations","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/Equatable-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/equatable-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Equatable-Implementations","title":"Equatable Implementations"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","title":"Swift.Sendable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxKind"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxKind"}],"title":"SyntaxKind","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxkind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind","abstract":[{"type":"text","text":"Enumerates the known kinds of Syntax represented in the Syntax tree."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/Collection-Implementations":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/collection-implementations","type":"topic","abstract":[],"title":"Collection Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Collection-Implementations","role":"collectionGroup","kind":"article"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax":{"title":"EnumCaseParameterListSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumCaseParameterListSyntax"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"EnumCaseParameterListSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","title":"Swift.CustomReflectable"},"doc://com.SwiftyLab.HelperCoders/SK":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SK","title":"Swift.BidirectionalCollection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/Sequence-Implementations":{"title":"Sequence Implementations","kind":"article","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/sequence-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/Sequence-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/parameters":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/parameters","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parameters"},{"text":": ","kind":"text"},{"text":"EnumCaseParameterListSyntax","preciseIdentifier":"s:11SwiftSyntax021EnumCaseParameterListB0V","kind":"typeIdentifier"}],"title":"parameters","abstract":[{"text":"The actual parameters.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/parameters"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/syntaxKind":{"title":"syntaxKind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/syntaxKind","kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/syntaxkind","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxKind","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"abstract":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind","isActive":true},{"text":" of the syntax node that conforms to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","type":"reference"},{"text":".","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxCollection":{"url":"\/documentation\/swiftsyntax\/syntaxcollection","navigatorTitle":[{"text":"SyntaxCollection","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","type":"topic","title":"SyntaxCollection","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxCollection","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/CustomReflectable-Implementations":{"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/customreflectable-implementations","title":"CustomReflectable Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/CustomReflectable-Implementations","abstract":[]},"doc://com.SwiftyLab.HelperCoders/Sl":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/Sl","title":"Swift.Collection","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/init(_:)-6vijm":{"fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/init(_:)-6vijm","title":"init(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/init(_:)-6vijm","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/ST":{"title":"Swift.Sequence","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/ST","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"title":"Swift.TextOutputStreamable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","type":"unresolvable"}}}