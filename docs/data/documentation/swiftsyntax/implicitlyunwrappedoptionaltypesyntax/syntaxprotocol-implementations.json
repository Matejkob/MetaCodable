{"metadata":{"title":"SyntaxProtocol Implementations","roleHeading":"API Collection","modules":[{"name":"SwiftSyntax"}],"role":"collectionGroup"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","topicSections":[{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/init(_:)-2146x"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmedLength"],"title":"Instance Properties"},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-1c3ql","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-1yt3d","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-34frn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-38fyj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-3cqb4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-4l5hr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-4tqvm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-5utm6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-7c2c7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-7l9ro","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-84fmn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-8qos0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-9hkd3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-gys4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-16dzr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-2dirt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-2f8r3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-375re","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-3icjj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-3nj4j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-428ux","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-4kovi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-5lzxc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-7xgl7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-815im","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-96t04","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-9u6p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-9x88m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/write(to:)"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax"]]},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-38fyj":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-38fyj","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-38fyj","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-4kovi":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-4kovi","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-4kovi"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-96t04":{"kind":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-96t04","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-96t04","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/totalLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/totalLength","title":"totalLength","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"type":"topic","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/totallength","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","kind":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-2dirt":{"kind":"symbol","title":"isProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-2dirt","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-2dirt"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/keyPathInParent":{"abstract":[],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/keypathinparent","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"keyPathInParent","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/keyPathInParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/detach()":{"type":"topic","title":"detach()","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/detach()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"deprecated":true,"abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/detach()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/hasSequenceExpr":{"abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/hassequenceexpr","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasSequenceExpr","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"hasSequenceExpr","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasSequenceExpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-9x88m":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-9x88m","role":"symbol","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-9x88m","kind":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/endPositionBeforeTrailingTrivia":{"type":"topic","title":"endPositionBeforeTrailingTrivia","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/endPositionBeforeTrailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/endpositionbeforetrailingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/tokens(viewMode:)":{"role":"symbol","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/tokens(viewMode:)","type":"topic","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/tokens(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"tokens","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"title":"tokens(viewMode:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isImplicit":{"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isimplicit","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isImplicit","deprecated":true,"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isImplicit"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/byteSize":{"abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSize"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"role":"symbol","title":"byteSize","deprecated":true,"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/byteSize","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/bytesize","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/byteSizeAfterTrimmingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/byteSizeAfterTrimmingTrivia","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol","title":"byteSizeAfterTrimmingTrivia","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/bytesizeaftertrimmingtrivia","deprecated":true,"abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/contentLength":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/contentLength","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/contentlength","abstract":[],"deprecated":true,"role":"symbol","type":"topic","title":"contentLength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/hasError":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasError","role":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/haserror","title":"hasError","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/syntaxNodeType":{"type":"topic","title":"syntaxNodeType","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/syntaxNodeType","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":".Type","kind":"text"}],"abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/syntaxnodetype"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/trimmed":{"type":"topic","role":"symbol","title":"trimmed","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"type":"text","text":" "},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/trimmed"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/syntaxTextBytes":{"type":"topic","title":"syntaxTextBytes","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"text":" ","type":"text"},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/syntaxTextBytes","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/syntaxtextbytes","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"kind":"text","text":"]"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/firstToken":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/firstToken","deprecated":true,"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"title":"firstToken","abstract":[],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/firsttoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/previousToken":{"abstract":[],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/previoustoken","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"title":"previousToken","deprecated":true,"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/previousToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/id":{"kind":"symbol","role":"symbol","title":"id","type":"topic","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/id","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/id"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/trimmedDescription":{"type":"topic","title":"trimmedDescription","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmedDescription","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/trimmeddescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/endLocation(converter:afterTrailingTrivia:)":{"abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/endlocation(converter:aftertrailingtrivia:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"title":"endLocation(converter:afterTrailingTrivia:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/endLocation(converter:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/parent":{"title":"parent","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/parent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/parent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/root":{"type":"topic","title":"root","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/root","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/previousToken(viewMode:)":{"title":"previousToken(viewMode:)","type":"topic","abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"text":" ","type":"text"},{"text":"this node.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/previousToken(viewMode:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/previoustoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/leadingTriviaLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/leadingTriviaLength","type":"topic","title":"leadingTriviaLength","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/leadingtrivialength","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-1yt3d":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-1yt3d","kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-1yt3d","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-84fmn":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-84fmn","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-84fmn"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/trailingTrivia":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/trailingtrivia","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}],"type":"topic","title":"trailingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trailingTrivia","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/lastToken":{"type":"topic","title":"lastToken","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/lastToken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/lasttoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/trimmedByteRange":{"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/trimmedbyterange","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"title":"trimmedByteRange","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmedByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/leadingTrivia":{"type":"topic","title":"leadingTrivia","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/leadingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"}],"abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/leadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/positionAfterSkippingLeadingTrivia":{"abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/positionafterskippingleadingtrivia","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"title":"positionAfterSkippingLeadingTrivia","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/positionAfterSkippingLeadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-7xgl7":{"type":"topic","title":"isProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-7xgl7","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-7xgl7"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/position":{"abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"text":"trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/position","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"title":"position","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-9u6p":{"type":"topic","title":"isProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-9u6p","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-9u6p"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/endPosition":{"abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/endposition","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"title":"endPosition","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/endPosition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-7l9ro":{"type":"topic","title":"asProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-7l9ro","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-7l9ro"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-9hkd3":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-9hkd3","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-9hkd3"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/startLocation(converter:afterLeadingTrivia:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"title":"startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/startlocation(converter:afterleadingtrivia:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/startLocation(converter:afterLeadingTrivia:)","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/write(to:)":{"type":"topic","title":"write(to:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/write(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Target"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target"},{"text":")","kind":"text"}],"abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/with(_:_:)":{"title":"with(_:_:)","type":"topic","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/with(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-gys4":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-gys4","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-gys4"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol","title":"ImplicitlyUnwrappedOptionalTypeSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-3icjj":{"type":"topic","title":"isProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-3icjj","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-3icjj"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/children(viewMode:)":{"abstract":[{"type":"text","text":"A sequence over the children of this node."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/children(viewmode:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","text":"SyntaxChildren"}],"title":"children(viewMode:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/children(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-2f8r3":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-2f8r3","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","title":"isProtocol(_:)","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-2f8r3"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/token(at:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"token"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","title":"token(at:)","type":"topic","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/token(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/token(at:)","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"syntax node or any of its children."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/trimmedLength":{"title":"trimmedLength","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/trimmedlength","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmedLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-3nj4j":{"type":"topic","title":"isProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-3nj4j","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-3nj4j"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-815im":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-815im","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-815im","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/init(_:)-2146x":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/init(_:)-2146x","title":"init(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/init(_:)-2146x","role":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?)"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/totalByteRange":{"abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/totalbyterange","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"title":"totalByteRange","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/totalByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-428ux":{"kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-428ux","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-428ux","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-3cqb4":{"type":"topic","title":"asProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-3cqb4","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-3cqb4"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-375re":{"role":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-375re","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-375re","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/nextToken(viewMode:)":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/nextToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"text":"after this node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"title":"nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/nexttoken(viewmode:)","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-4tqvm":{"role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-4tqvm","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-4tqvm","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/trimmed(matching:)":{"abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/trimmed(matching:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"trimmed(matching:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/debugDescription":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/debugdescription","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/debugDescription","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"title":"debugDescription","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/nextToken":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/nexttoken","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/nextToken","role":"symbol","title":"nextToken","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/hasParent":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"hasParent","type":"topic","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasParent","role":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/hasparent","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-1c3ql":{"type":"topic","title":"asProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-1c3ql","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-1c3ql"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/hasMaximumNestingLevelOverflow":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasMaximumNestingLevelOverflow","abstract":[],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/hasmaximumnestingleveloverflow","title":"hasMaximumNestingLevelOverflow","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-5lzxc":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-5lzxc","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-5lzxc"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange"}],"abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/index":{"title":"index","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxChildrenIndex","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/index","type":"topic","abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference"},{"text":" collection.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/index","kind":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/isProtocol(_:)-16dzr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/isProtocol(_:)-16dzr","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/isprotocol(_:)-16dzr","type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-4l5hr":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-4l5hr","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-4l5hr","type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/lastToken(viewMode:)":{"type":"topic","title":"lastToken(viewMode:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/lastToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/lasttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-7c2c7":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-7c2c7","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-7c2c7","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/detached":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/detached","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"detached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","title":"detached","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-5utm6":{"title":"asProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-5utm6","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-5utm6"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-34frn":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-34frn","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-34frn"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/trailingTriviaLength":{"type":"topic","title":"trailingTriviaLength","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trailingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/trailingtrivialength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-8qos0":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-8qos0","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-8qos0","type":"topic","title":"asProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/byteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/byteRange","title":"byteRange","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/byterange","kind":"symbol","abstract":[],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/trimmedDescription(matching:)":{"abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"text":" removed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"type":"text","text":"last token."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/trimmeddescription(matching:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"trimmedDescription(matching:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/trimmedDescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/kind":{"type":"topic","title":"kind","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/kind","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/hasWarning":{"abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"reference","isActive":true},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/haswarning","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"hasWarning","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/node(at:)":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/node(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"type":"text","text":"identifier."}],"title":"node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/description":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/description","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/description","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"kind":"symbol","role":"symbol","title":"description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/firstToken(viewMode:)":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/firsttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/firstToken(viewMode:)","title":"firstToken(viewMode:)","abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}]}}}