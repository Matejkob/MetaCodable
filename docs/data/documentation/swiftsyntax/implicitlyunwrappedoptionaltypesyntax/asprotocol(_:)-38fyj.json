{"metadata":{"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"SwiftSyntax","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA021WithGenericParametersB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax031ImplicitlyUnwrappedOptionalTypeB0V"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-38fyj","interfaceLanguage":"swift"},"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithGenericParametersSyntax"},{"text":"?","kind":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-38fyj"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/WithGenericParametersSyntax":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"WithGenericParametersSyntax"}],"title":"WithGenericParametersSyntax","kind":"symbol","abstract":[{"type":"text","text":"Syntax nodes that have generic parameters."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/withgenericparameterssyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithGenericParametersSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/asProtocol(_:)-38fyj":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/asprotocol(_:)-38fyj","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/asProtocol(_:)-38fyj","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/SyntaxProtocol-Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol","title":"ImplicitlyUnwrappedOptionalTypeSyntax"}}}