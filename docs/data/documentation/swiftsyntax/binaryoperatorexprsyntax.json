{"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/binaryoperatorexprsyntax"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(_:)-8691r","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operator:_:trailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operatorToken:_:trailingTrivia:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/operator","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/operatorToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedAfterOperator","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedAfterOperatorToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedBeforeOperator","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedBeforeOperatorToken"],"anchor":"Instance-Properties"},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/structure"],"anchor":"Type-Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/ExprSyntaxProtocol-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/SyntaxProtocol-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax"},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This node represents the binary operator itself. It can occur inside a "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax","isActive":true},{"text":"","type":"text"},{"type":"text","text":" "},{"type":"text","text":"after parsing and will be the "},{"type":"codeVoice","code":"operator"},{"type":"text","text":" child of an "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InfixOperatorExprSyntax","isActive":true},{"text":"","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"after folding operator using the "},{"code":"SwiftOperators","type":"codeVoice"},{"text":" library.","type":"text"}]},{"type":"heading","anchor":"Children","text":"Children","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"operator","type":"codeVoice"},{"type":"text","text":": "},{"type":"codeVoice","code":"<binaryOperator>"}],"type":"paragraph"}]}]}]}],"metadata":{"roleHeading":"Structure","title":"BinaryOperatorExprSyntax","modules":[{"name":"SwiftSyntax"}],"symbolKind":"struct","externalID":"s:11SwiftSyntax018BinaryOperatorExprB0V","navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}]},"abstract":[{"type":"text","text":"An operator like "},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":".","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/unexpectedBeforeOperator":{"url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/unexpectedbeforeoperator","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedBeforeOperator","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBeforeOperator","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","title":"unexpectedBeforeOperator"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/unexpectedAfterOperator":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedAfterOperator","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"unexpectedAfterOperator","abstract":[],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedAfterOperator","role":"symbol","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/unexpectedafteroperator","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/ExprSyntaxProtocol-Implementations":{"type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/exprsyntaxprotocol-implementations","title":"ExprSyntaxProtocol Implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/ExprSyntaxProtocol-Implementations","abstract":[],"role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"title":"Swift.CustomReflectable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntax":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","title":"ExprSyntax","url":"\/documentation\/swiftsyntax\/exprsyntax","type":"topic","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/structure":{"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure"}],"role":"symbol","title":"structure","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/structure"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/CustomReflectable-Implementations":{"title":"CustomReflectable Implementations","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/customreflectable-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/CustomReflectable-Implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/init(_:)-8691r":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(_:)-8691r","title":"init(_:)","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/init(_:)-8691r","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax":{"abstract":[{"type":"text","text":"An operator like "},{"code":"+","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BinaryOperatorExprSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax","navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"kind":"symbol","title":"BinaryOperatorExprSyntax","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/Hashable-Implementations":{"title":"Hashable Implementations","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/hashable-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/Hashable-Implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","title":"Swift.Sendable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/SyntaxProtocol-Implementations":{"abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/SyntaxProtocol-Implementations","kind":"article","title":"SyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/syntaxprotocol-implementations","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/Equatable-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/Equatable-Implementations","title":"Equatable Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/equatable-implementations","kind":"article"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntaxProtocol":{"navigatorTitle":[{"kind":"identifier","text":"ExprSyntaxProtocol"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","kind":"symbol","url":"\/documentation\/swiftsyntax\/exprsyntaxprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","isActive":true},{"type":"text","text":" nodes conform."}],"type":"topic","title":"ExprSyntaxProtocol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/operator":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"`operator`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"}],"role":"symbol","title":"operator","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/operator","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/operator","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/unexpectedAfterOperatorToken":{"url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/unexpectedafteroperatortoken","title":"unexpectedAfterOperatorToken","deprecated":true,"abstract":[],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedAfterOperatorToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedAfterOperatorToken"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/InfixOperatorExprSyntax":{"title":"InfixOperatorExprSyntax","type":"topic","abstract":[{"text":"An infix operator call like ","type":"text"},{"code":"1 + 2","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"InfixOperatorExprSyntax","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InfixOperatorExprSyntax"}],"url":"\/documentation\/swiftsyntax\/infixoperatorexprsyntax","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InfixOperatorExprSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/init(leadingTrivia:_:operator:_:trailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/init(leadingtrivia:_:operator:_:trailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operator:_:trailingTrivia:)","title":"init(leadingTrivia:_:operator:_:trailingTrivia:)","kind":"symbol","type":"topic","role":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"leadingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?, "},{"text":"operator","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"trailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?)"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/operatorToken":{"deprecated":true,"title":"operatorToken","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/operatortoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/operatorToken","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"operatorToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"}]},"doc://com.SwiftyLab.HelperCoders/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH"},"doc://com.SwiftyLab.HelperCoders/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ"},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"type":"unresolvable","title":"Swift.TextOutputStreamable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxHashable"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxhashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","role":"symbol","title":"SyntaxHashable","abstract":[{"text":"Protocol that provides a common Hashable implementation for all syntax nodes","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SequenceExprSyntax":{"url":"\/documentation\/swiftsyntax\/sequenceexprsyntax","type":"topic","abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"title":"SequenceExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SequenceExprSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/unexpectedBeforeOperatorToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedBeforeOperatorToken","title":"unexpectedBeforeOperatorToken","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBeforeOperatorToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/unexpectedbeforeoperatortoken","kind":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/init(leadingTrivia:_:operatorToken:_:trailingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operatorToken:_:trailingTrivia:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/init(leadingtrivia:_:operatortoken:_:trailingtrivia:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"leadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?, "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?, ","kind":"text"},{"text":"operatorToken","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"trailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"text":"?)","kind":"text"}],"deprecated":true,"role":"symbol","title":"init(leadingTrivia:_:operatorToken:_:trailingTrivia:)","abstract":[]}}}