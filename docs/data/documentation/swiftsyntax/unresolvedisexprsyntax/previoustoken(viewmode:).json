{"abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this node."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnresolvedIsExprSyntax\/previousToken(viewMode:)"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnresolvedIsExprSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnresolvedIsExprSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax"},{"kind":"text","text":"?"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/unresolvedisexprsyntax\/previoustoken(viewmode:)"]}],"kind":"symbol","sections":[],"metadata":{"modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE13previousToken8viewModeAA0eB0VSgAA0b8TreeViewG0O_tF::SYNTHESIZED::s:11SwiftSyntax016UnresolvedIsExprB0V","roleHeading":"Instance Method","extendedModule":"SwiftSyntax","role":"symbol","symbolKind":"method","title":"previousToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnresolvedIsExprSyntax/previousToken(viewMode:)":{"abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"text":"this node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnresolvedIsExprSyntax\/previousToken(viewMode:)","title":"previousToken(viewMode:)","type":"topic","url":"\/documentation\/swiftsyntax\/unresolvedisexprsyntax\/previoustoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnresolvedIsExprSyntax":{"kind":"symbol","navigatorTitle":[{"text":"UnresolvedIsExprSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/unresolvedisexprsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnresolvedIsExprSyntax","abstract":[{"text":"The ","type":"text"},{"code":"is","type":"codeVoice"},{"text":" keyword without any operands.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnresolvedIsExprSyntax"}],"title":"UnresolvedIsExprSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxTreeViewMode":{"abstract":[{"text":"Specifies how missing and unexpected nodes should be handled when traversing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a syntax tree."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxTreeViewMode"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode","url":"\/documentation\/swiftsyntax\/syntaxtreeviewmode","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxTreeViewMode"}],"title":"SyntaxTreeViewMode"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenSyntax":{"title":"TokenSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/tokensyntax","role":"symbol","type":"topic","navigatorTitle":[{"text":"TokenSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A Syntax node representing a single token."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TokenSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnresolvedIsExprSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftsyntax\/unresolvedisexprsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnresolvedIsExprSyntax\/SyntaxProtocol-Implementations","abstract":[],"role":"collectionGroup"}}}