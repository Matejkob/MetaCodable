{"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/init(_:)-2q7wr"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedLength"],"title":"Instance Properties"},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-1n2fj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-4qja4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-7faxf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-28c9q","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-2nm49","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-2zw9c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-36jyt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-3ek4z","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-3ft1p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-4o14y","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-4r4s7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-68qg1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-6r3pi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-7uhr8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-7vkyp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-9yohj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-e0bp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-1fnh1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-1ob68","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-63lc5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-3ao9c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-8orl0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-9vlqk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-20hu0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-2iqkf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-3cg7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-3uqnz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-4q24b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-5lxxb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-6743q","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-68fi7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-7gp2c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-7xgvj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-8bk93","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-8ipq2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-9fx31","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-x4me","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/with(_:_:)-1dnxe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/write(to:)"]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"kind":"article","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax"]]},"metadata":{"roleHeading":"API Collection","modules":[{"name":"SwiftSyntax"}],"title":"SyntaxProtocol Implementations","role":"collectionGroup"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/children(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/children(viewMode:)","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxChildren","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/children(viewmode:)","kind":"symbol","role":"symbol","title":"children(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/previousToken":{"title":"previousToken","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/previoustoken","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/previousToken","type":"topic","abstract":[],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmedByteRange":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"title":"trimmedByteRange","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmedbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-2iqkf":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-2iqkf","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-2iqkf","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-8bk93":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-8bk93","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-8bk93"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isImplicit":{"title":"isImplicit","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isimplicit","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isImplicit","type":"topic","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/cast(_:)-1ob68":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"title":"cast(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node.."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/cast(_:)-1ob68","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-1ob68"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/startLocation(converter:afterLeadingTrivia:)":{"title":"startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/startlocation(converter:afterleadingtrivia:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","type":"topic","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/firstToken(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"firstToken(viewMode:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/firsttoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/firstToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasError":{"title":"hasError","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/haserror","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasError","type":"topic","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/is(_:)-3ao9c":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"is(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/is(_:)-3ao9c","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-3ao9c"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-7vkyp":{"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-7vkyp","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-7vkyp","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-20hu0":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-20hu0","title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-20hu0","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmed":{"title":"trimmed","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmed","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmed","type":"topic","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-6r3pi":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-6r3pi","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-6r3pi"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/cast(_:)-63lc5":{"title":"cast(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/cast(_:)-63lc5","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-63lc5","type":"topic","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/syntaxNodeType":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":".Type","kind":"text"}],"title":"syntaxNodeType","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/syntaxnodetype","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/parent":{"title":"parent","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/parent","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/parent","type":"topic","abstract":[{"text":"The parent of this syntax node, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if this node is the root."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/init(_:)-2q7wr":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"title":"init(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/init(_:)-2q7wr","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/init(_:)-2q7wr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/kind":{"title":"kind","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/kind","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/kind","type":"topic","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true},{"type":"text","text":"."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/endLocation(converter:afterTrailingTrivia:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"title":"endLocation(converter:afterTrailingTrivia:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/endlocation(converter:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endLocation(converter:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-4q24b":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-4q24b","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-4q24b","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/leadingTriviaLength":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"leadingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"title":"leadingTriviaLength","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/leadingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-9yohj":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-9yohj","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-9yohj","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-4r4s7":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-4r4s7","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-4r4s7"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/as(_:)-1n2fj":{"title":"as(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/as(_:)-1n2fj","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-1n2fj","type":"topic","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node."}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EnumCaseParameterClauseSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"EnumCaseParameterClauseSyntax","kind":"identifier"}],"title":"EnumCaseParameterClauseSyntax","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/byteSize":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"byteSize","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/bytesize","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/detached":{"title":"detached","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/detached","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/detached","type":"topic","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"text":"from its parent.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-3cg7":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-3cg7","title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-3cg7","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/as(_:)-7faxf":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/as(_:)-7faxf","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-7faxf","role":"symbol","deprecated":true,"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/totalLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"title":"totalLength","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/totallength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/totalLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trailingTrivia":{"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trailingtrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"}],"title":"trailingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trailingTrivia","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/endPosition":{"title":"endPosition","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/endposition","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endPosition","type":"topic","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasWarning":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasWarning"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"hasWarning","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"reference","isActive":true},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/haswarning","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-6743q":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-6743q","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-6743q","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/previousToken(viewMode:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"title":"previousToken(viewMode:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/previoustoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/previousToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmedDescription":{"title":"trimmedDescription","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmeddescription","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedDescription","type":"topic","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"text":" ","type":"text"},{"text":"and trailing whitespace of the last token removed.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/is(_:)-9vlqk":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"is(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference"},{"type":"text","text":" node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/is(_:)-9vlqk","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-9vlqk"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-36jyt":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-36jyt","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-36jyt","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/keyPathInParent":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"keyPathInParent","kind":"symbol","type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/keypathinparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/keyPathInParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-28c9q":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-28c9q","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-28c9q","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceRange"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-7uhr8":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-7uhr8","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-7uhr8","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-x4me":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-x4me","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-x4me"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/endPositionBeforeTrailingTrivia":{"abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endPositionBeforeTrailingTrivia","title":"endPositionBeforeTrailingTrivia","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/endpositionbeforetrailingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/byteRange":{"title":"byteRange","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/byterange","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteRange","type":"topic","abstract":[],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"kind":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mark"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"indentString"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-e0bp":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-e0bp","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-e0bp"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-3uqnz":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-3uqnz","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-3uqnz","kind":"symbol","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/tokens(viewMode:)":{"title":"tokens(viewMode:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/tokens(viewmode:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tokens","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/tokens(viewMode:)","type":"topic","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-9fx31":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-9fx31","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-9fx31"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-4o14y":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-4o14y","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-4o14y","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/byteSizeAfterTrimmingTrivia":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"byteSizeAfterTrimmingTrivia","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/bytesizeaftertrimmingtrivia","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteSizeAfterTrimmingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/id":{"title":"id","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/id","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/id","type":"topic","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/syntaxTextBytes":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"syntaxTextBytes","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"type":"text","text":" "},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/syntaxtextbytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/syntaxTextBytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/node(at:)":{"title":"node(at:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/node(at:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/node(at:)","type":"topic","abstract":[{"text":"If the node with the given ","type":"text"},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"text":"identifier.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasParent":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"hasParent","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/hasparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/index":{"title":"index","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/index","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/index","type":"topic","abstract":[{"text":"The index of this node in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"text":" collection.","type":"text"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-7gp2c":{"title":"isProtocol(_:)","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-7gp2c","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-7gp2c","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-68fi7":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-68fi7","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-68fi7"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-7xgvj":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-7xgvj","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-7xgvj","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/nextToken":{"title":"nextToken","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/nexttoken","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/nextToken","type":"topic","abstract":[],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/token(at:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"title":"token(at:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"text":" ","type":"text"},{"text":"syntax node or any of its children.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/token(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/contentLength":{"title":"contentLength","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/contentlength","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/contentLength","type":"topic","abstract":[],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmed(matching:)":{"title":"trimmed(matching:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmed(matching:)","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmed(matching:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trailingTriviaLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"title":"trailingTriviaLength","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trailingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trailingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/is(_:)-8orl0":{"title":"is(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/is(_:)-8orl0","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-8orl0","type":"topic","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/description":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"description","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/description","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-8ipq2":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-8ipq2","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-8ipq2","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/firstToken":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"firstToken","kind":"symbol","type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/firsttoken","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/firstToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/totalByteRange":{"abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/totalByteRange","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/totalbyterange","title":"totalByteRange","type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/debugDescription":{"title":"debugDescription","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/debugdescription","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/debugDescription","type":"topic","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-3ek4z":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-3ek4z","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-3ek4z"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/positionAfterSkippingLeadingTrivia":{"title":"positionAfterSkippingLeadingTrivia","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/positionafterskippingleadingtrivia","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/positionAfterSkippingLeadingTrivia","type":"topic","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"text":"leading trivia attached to the first token syntax.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-2nm49":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-2nm49","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-2nm49"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/leadingTrivia":{"title":"leadingTrivia","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/leadingtrivia","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/leadingTrivia","type":"topic","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/write(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","kind":"typeIdentifier","text":"Target"},{"text":")","kind":"text"}],"title":"write(to:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/write(to:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/lastToken":{"abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/lastToken","type":"topic","role":"symbol","title":"lastToken","deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/lasttoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/nextToken(viewMode:)":{"title":"nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/nexttoken(viewmode:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/nextToken(viewMode:)","type":"topic","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"text":" ","type":"text"},{"text":"after this node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/lastToken(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"lastToken(viewMode:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/lasttoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/lastToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasMaximumNestingLevelOverflow":{"title":"hasMaximumNestingLevelOverflow","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/hasmaximumnestingleveloverflow","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasMaximumNestingLevelOverflow","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-3ft1p":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-3ft1p","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-3ft1p"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-2zw9c":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-2zw9c","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-2zw9c","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-68qg1":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-68qg1","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-68qg1"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/as(_:)-4qja4":{"title":"as(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/as(_:)-4qja4","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-4qja4","type":"topic","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasSequenceExpr":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"hasSequenceExpr","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/hassequenceexpr","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasSequenceExpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/root":{"title":"root","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/root","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"root"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/root","type":"topic","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-5lxxb":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-5lxxb","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-5lxxb"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmedDescription(matching:)":{"title":"trimmedDescription(matching:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmeddescription(matching:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedDescription(matching:)","type":"topic","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"type":"text","text":"last token."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/position":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"title":"position","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/position","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/detach()":{"title":"detach()","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/detach()","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/detach()","type":"topic","abstract":[],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/cast(_:)-1fnh1":{"title":"cast(_:)","deprecated":true,"role":"symbol","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/cast(_:)-1fnh1","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-1fnh1","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmedLength":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"title":"trimmedLength","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"type":"text","text":"leading or trailing trivia."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmedlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/with(_:_:)-1dnxe":{"title":"with(_:_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/with(_:_:)-1dnxe","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/with(_:_:)-1dnxe","type":"topic","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"text":" ","type":"text"},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}]}}}