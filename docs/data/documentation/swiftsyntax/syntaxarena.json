{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena"},"metadata":{"roleHeading":"Class","modules":[{"name":"SwiftSyntax"}],"title":"SyntaxArena","symbolKind":"class","externalID":"s:11SwiftSyntax0B5ArenaC","navigatorTitle":[{"kind":"identifier","text":"SyntaxArena"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxArena"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"relationshipsSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ParsingSyntaxArena"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"}],"abstract":[{"text":"A syntax arena owns the memory for all syntax nodes within it.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxArena"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"The following is only relevant if you are accessing the raw syntax tree using"},{"text":" ","type":"text"},{"code":"RawSyntax","type":"codeVoice"},{"text":" nodes. When working with syntax trees using SwiftSyntax’s API,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the usage of a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena"},{"text":" is transparent.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Contrary to Swift’s usual memory model, syntax node’s are not individually","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"reference-counted. Instead, they live in an arena. That arena allocates a"},{"text":" ","type":"text"},{"text":"chunk of memory at a time, which it can then use to store syntax nodes in.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This way, only a single memory allocation needs to be performed for multiple"},{"type":"text","text":" "},{"text":"syntax nodes and since memory allocations have a non-trivial cost, this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"significantly speeds up parsing."}]},{"inlineContent":[{"type":"text","text":"As a consequence, syntax nodes cannot be freed individually but the memory"},{"type":"text","text":" "},{"text":"will get freed once the owning ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","isActive":true,"type":"reference"},{"type":"text","text":" gets freed. Thus, it needs to"},{"text":" ","type":"text"},{"text":"be manually ensured that the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena"},{"text":" is not deallocated while any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of its nodes are being accessed. The "},{"type":"codeVoice","code":"SyntaxData"},{"text":" type ensures this as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"follows:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The root node has a strong reference to its "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Each node retains its parent "},{"type":"codeVoice","code":"SyntaxData"},{"text":", thus keeping it alive.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"If any node is allocated within a different ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena"},{"text":",  that arena","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is added to the root’s "},{"type":"codeVoice","code":"childRefs"},{"type":"text","text":" property and thus kept a live as long"},{"text":" ","type":"text"},{"type":"text","text":"as the parent tree is alive."}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"As an added benefit of the ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","isActive":true,"type":"reference"},{"type":"text","text":", "},{"code":"RawSyntax","type":"codeVoice"},{"text":" nodes don’t need to","type":"text"},{"type":"text","text":" "},{"text":"be reference-counted, further improving the performance of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},{"type":"text","text":" "},{"text":"when worked with at that level.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/swiftsyntax\/syntaxarena"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena\/init()"],"anchor":"Initializers","title":"Initializers"}],"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxArena":{"type":"topic","role":"symbol","abstract":[{"text":"A syntax arena owns the memory for all syntax nodes within it.","type":"text"}],"title":"SyntaxArena","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxArena"}],"url":"\/documentation\/swiftsyntax\/syntaxarena","navigatorTitle":[{"text":"SyntaxArena","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ParsingSyntaxArena":{"title":"ParsingSyntaxArena","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ParsingSyntaxArena","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsingSyntaxArena"}],"abstract":[{"text":"SyntaxArena for parsing.","type":"text"}],"navigatorTitle":[{"text":"ParsingSyntaxArena","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/parsingsyntaxarena","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxArena/init()":{"title":"init()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena\/init()","url":"\/documentation\/swiftsyntax\/syntaxarena\/init()","type":"topic","abstract":[{"text":"Construct a new ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","isActive":true},{"text":" in which syntax nodes can be allocated.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}]}}}