{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol\/is(_:)-lwbt"},"sections":[],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Type argument should be part of the 'PatternSyntaxProtocol' hierarchy"}],"type":"paragraph"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given node type from a base node protocol hierarchy other"},{"type":"text","text":" "},{"type":"text","text":"than "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","metadata":{"title":"is(_:)","extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax07PatternB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax07PatternB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","modules":[{"name":"SwiftSyntax"}],"platforms":[]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax07PatternB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the node can be cast, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"In most cases, this is comparing a ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","type":"reference","isActive":true},{"type":"text","text":" to a node that is not a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol"},{"text":", which will always fail. If the ","type":"text"},{"type":"codeVoice","code":"syntaxType"},{"type":"text","text":" argument is a generic type,"},{"type":"text","text":" "},{"text":"constrain it to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol"},{"type":"text","text":" instead of "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","isActive":true},{"text":".","type":"text"}]}],"type":"aside"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/patternsyntaxprotocol\/is(_:)-lwbt"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntax":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntax","url":"\/documentation\/swiftsyntax\/patternsyntax","role":"symbol","navigatorTitle":[{"text":"PatternSyntax","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PatternSyntax","kind":"identifier"}],"title":"PatternSyntax","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntaxProtocol/is(_:)-lwbt":{"url":"\/documentation\/swiftsyntax\/patternsyntaxprotocol\/is(_:)-lwbt","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol\/is(_:)-lwbt","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given node type from a base node protocol hierarchy other"},{"text":" ","type":"text"},{"type":"text","text":"than "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","isActive":true},{"text":".","type":"text"}],"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax07PatternB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"is(_:)","type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntaxProtocol":{"title":"PatternSyntaxProtocol","url":"\/documentation\/swiftsyntax\/patternsyntaxprotocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntax","type":"reference","isActive":true},{"text":" nodes conform.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PatternSyntaxProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"PatternSyntaxProtocol"}]}}}