{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax"]]},"kind":"article","sections":[],"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/init(_:)-3jvw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/init(_:)-518v0"]},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedLength"],"generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-3filq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-9scak","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-hs5o","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-16i6b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1aipi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1kh1e","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1xozj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-23o4w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-2nn1b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-30tuq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-3oro2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-465ta","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4kvyj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4t36w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-51ssx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9oxu2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9wwhd","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-5cjak","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-7zfgh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-8no2m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-1v7ip","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-2xb9l","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-9fhuo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-2uf8v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-427m5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-4ust","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6353z","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-66uuk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6fwca","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6mjt0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-78ion","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7cr93","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7iy9z","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7n2gt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-80m07","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8fy3a","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8zd7q","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/write(to:)"],"generated":true},{"generated":true,"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/structure"]}],"metadata":{"roleHeading":"API Collection","modules":[{"name":"SwiftSyntax"}],"role":"collectionGroup","title":"SyntaxProtocol Implementations"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/previousToken":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/previoustoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/previousToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","abstract":[],"role":"symbol","deprecated":true,"title":"previousToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-7n2gt":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-7n2gt","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7n2gt","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/structure":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/structure","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/structure","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"role":"symbol","title":"structure"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/nextToken":{"deprecated":true,"title":"nextToken","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/nexttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/nextToken","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/as(_:)-3filq":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/as(_:)-3filq","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-3filq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"role":"symbol","deprecated":true,"title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/endLocation(converter:afterTrailingTrivia:)":{"title":"endLocation(converter:afterTrailingTrivia:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/endlocation(converter:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endLocation(converter:afterTrailingTrivia:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmedDescription":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmeddescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedDescription","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"text":" ","type":"text"},{"type":"text","text":"and trailing whitespace of the last token removed."}],"role":"symbol","title":"trimmedDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-51ssx":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-51ssx","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-51ssx","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trailingTrivia":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trailingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"role":"symbol","title":"trailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/lastToken(viewMode:)":{"title":"lastToken(viewMode:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/lasttoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/lastToken(viewMode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/kind":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/kind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/kind","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"type":"text","text":"."}],"role":"symbol","title":"kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-80m07":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-80m07","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-80m07","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/leadingTriviaLength":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/leadingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/leadingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"type":"topic","kind":"symbol","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"role":"symbol","title":"leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmedByteRange":{"title":"trimmedByteRange","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier"}],"abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmedbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedByteRange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-23o4w":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-23o4w","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-23o4w","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/cast(_:)-5cjak":{"title":"cast(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/cast(_:)-5cjak","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-5cjak","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/tokens(viewMode:)":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/tokens(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/tokens(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"tokens","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"kind":"symbol","role":"symbol","title":"tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/endPositionBeforeTrailingTrivia":{"title":"endPositionBeforeTrailingTrivia","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/endpositionbeforetrailingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endPositionBeforeTrailingTrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/root":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/root","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/root","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"kind":"symbol","role":"symbol","title":"root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmedLength":{"title":"trimmedLength","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmedlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedLength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/byteRange":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/byterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteRange"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol","deprecated":true,"title":"byteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/init(_:)-518v0":{"title":"init(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Children"},{"kind":"text","text":">("},{"text":"Children","preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/init(_:)-518v0","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/init(_:)-518v0","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trailingTriviaLength":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trailingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trailingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"kind":"symbol","role":"symbol","title":"trailingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/init(_:)-3jvw":{"title":"init(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/init(_:)-3jvw","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/init(_:)-3jvw","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax","title":"StringLiteralSegmentListSyntax","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-2uf8v":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-2uf8v","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-2uf8v","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasError":{"title":"hasError","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/haserror","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasError","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/leadingTrivia":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/leadingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/leadingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"type":"topic","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"kind":"symbol","role":"symbol","title":"leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-6353z":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-6353z","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6353z","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmed(matching:)":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmed(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"text":" trimmed from the","type":"text"},{"type":"text","text":" "},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"kind":"symbol","role":"symbol","title":"trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasParent":{"title":"hasParent","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/hasparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasParent","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/contentLength":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/contentlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/contentLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol","deprecated":true,"title":"contentLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/previousToken(viewMode:)":{"title":"previousToken(viewMode:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/previoustoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/previousToken(viewMode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/cast(_:)-7zfgh":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/cast(_:)-7zfgh","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-7zfgh","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"type":"topic","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"text":" node..","type":"text"}],"kind":"symbol","role":"symbol","deprecated":true,"title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-7cr93":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-7cr93","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7cr93","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmedDescription(matching:)":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmeddescription(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedDescription"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"kind":"symbol","role":"symbol","title":"trimmedDescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-3oro2":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-3oro2","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-3oro2","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/is(_:)-2xb9l":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/is(_:)-2xb9l","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-2xb9l","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"kind":"symbol","role":"symbol","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/is(_:)-1v7ip":{"deprecated":true,"title":"is(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/is(_:)-1v7ip","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-1v7ip","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/position":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/position","title":"position","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"text":"trivia.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isImplicit":{"deprecated":true,"title":"isImplicit","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isimplicit","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isImplicit","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmed":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmed","title":"trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmed"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-1aipi":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-1aipi","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1aipi","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/as(_:)-9scak":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-9scak","title":"as(_:)","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/as(_:)-9scak"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/detached":{"title":"detached","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"type":"text","text":"from its parent."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/detached","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/detached","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/byteSize":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteSize","title":"byteSize","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/bytesize","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-8fy3a":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-8fy3a","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8fy3a","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/index":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier","text":"SyntaxChildrenIndex"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/index","title":"index","abstract":[{"text":"The index of this node in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"type":"text","text":" collection."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/index","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-6fwca":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-6fwca","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6fwca","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/totalLength":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/totalLength","title":"totalLength","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/totallength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-465ta":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-465ta","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-465ta","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/write(to:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Target","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/write(to:)","title":"write(to:)","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/syntaxTextBytes":{"title":"syntaxTextBytes","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}],"abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"type":"text","text":" "},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/syntaxtextbytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/syntaxTextBytes","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/is(_:)-9fhuo":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-9fhuo","title":"is(_:)","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"text":" node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/is(_:)-9fhuo","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/syntaxNodeType":{"title":"syntaxNodeType","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"kind":"text","text":".Type"}],"abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/syntaxnodetype","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/syntaxNodeType","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/debugDescription":{"title":"debugDescription","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/debugdescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/debugDescription","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-30tuq":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-30tuq","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-30tuq"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-7iy9z":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-7iy9z","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7iy9z","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/token(at:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"token"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/token(at:)","title":"token(at:)","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/totalByteRange":{"title":"totalByteRange","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/totalbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/totalByteRange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasSequenceExpr":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasSequenceExpr","title":"hasSequenceExpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/hassequenceexpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-2nn1b":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-2nn1b","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-2nn1b","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-16i6b":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-16i6b","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-16i6b"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/as(_:)-hs5o":{"deprecated":true,"title":"as(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/as(_:)-hs5o","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-hs5o","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/with(_:_:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/with(_:_:)","title":"with(_:_:)","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/parent":{"title":"parent","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/parent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/parent","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-1xozj":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1xozj","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-1xozj"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/firstToken(viewMode:)":{"title":"firstToken(viewMode:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/firsttoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/firstToken(viewMode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-4t36w":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4t36w","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-4t36w"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-427m5":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-427m5","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-427m5","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-4ust":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-4ust","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-4ust"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/firstToken":{"deprecated":true,"title":"firstToken","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/firsttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/firstToken","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/endPosition":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endPosition","title":"endPosition","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/endposition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-9wwhd":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-9wwhd","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9wwhd","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/positionAfterSkippingLeadingTrivia":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/positionAfterSkippingLeadingTrivia","title":"positionAfterSkippingLeadingTrivia","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/positionafterskippingleadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/nextToken(viewMode:)":{"title":"nextToken(viewMode:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/nexttoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/nextToken(viewMode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mark"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"indentString"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","title":"debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/id":{"title":"id","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier","text":"SyntaxIdentifier"}],"abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/id","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/id","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-9oxu2":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9oxu2","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-9oxu2"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-1kh1e":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-1kh1e","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1kh1e","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasMaximumNestingLevelOverflow":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasMaximumNestingLevelOverflow","title":"hasMaximumNestingLevelOverflow","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/hasmaximumnestingleveloverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-4kvyj":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-4kvyj","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4kvyj","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/node(at:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/node(at:)","title":"node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"text":" ","type":"text"},{"text":"identifier.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/detach()":{"deprecated":true,"title":"detach()","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/detach()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/detach()","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/startLocation(converter:afterLeadingTrivia:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/startLocation(converter:afterLeadingTrivia:)","title":"startLocation(converter:afterLeadingTrivia:)","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/startlocation(converter:afterleadingtrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/lastToken":{"deprecated":true,"title":"lastToken","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/lasttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/lastToken","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-6mjt0":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6mjt0","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-6mjt0"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasWarning":{"title":"hasWarning","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasWarning"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/haswarning","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasWarning","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/keyPathInParent":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/keyPathInParent","title":"keyPathInParent","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/keypathinparent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-8zd7q":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-8zd7q","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8zd7q","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/children(viewMode:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/children(viewMode:)","title":"children(viewMode:)","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/children(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-78ion":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-78ion","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-78ion","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/cast(_:)-8no2m":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-8no2m","title":"cast(_:)","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/cast(_:)-8no2m","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-66uuk":{"title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-66uuk","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-66uuk","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/byteSizeAfterTrimmingTrivia":{"deprecated":true,"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteSizeAfterTrimmingTrivia","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/bytesizeaftertrimmingtrivia","title":"byteSizeAfterTrimmingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/description":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/description","title":"description","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/description"}}}