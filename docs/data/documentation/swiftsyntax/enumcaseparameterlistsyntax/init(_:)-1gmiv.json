{"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","externalID":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc::SYNTHESIZED::s:11SwiftSyntax021EnumCaseParameterListB0V","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S"},{"kind":"text","text":"?)"}],"title":"init(_:)","extendedModule":"SwiftSyntax","roleHeading":"Initializer","modules":[{"name":"SwiftSyntax"}]},"abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"node","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"}],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the conversion isnâ€™t possible, or if the provided node is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/init(_:)-1gmiv"]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/init(_:)-1gmiv","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax":{"title":"EnumCaseParameterListSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumCaseParameterListSyntax"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"EnumCaseParameterListSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/init(_:)-1gmiv":{"role":"symbol","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/init(_:)-1gmiv","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/init(_:)-1gmiv","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"text":"?)","kind":"text"}],"kind":"symbol","title":"init(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/SyntaxProtocol-Implementations":{"abstract":[],"title":"SyntaxProtocol Implementations","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/syntaxprotocol-implementations"}}}