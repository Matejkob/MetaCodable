{"sections":[],"metadata":{"title":"SyntaxProtocol Implementations","modules":[{"name":"SwiftSyntax"}],"roleHeading":"API Collection","role":"collectionGroup"},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/SyntaxProtocol-Implementations"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/init(_:)-1vz5f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/init(_:)-2684v"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedLength"],"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-2s6hj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-68tq4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-9uv5g","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-35mvl","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-4373v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-5h41q","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-63v2f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-7l2ef","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-82z4p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8kv7l","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8pg4w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8yzid","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9rl6y","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9s6jj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9zjpf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-dvl5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-k7j7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-1n7r5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-3zyu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-4yaxg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-5m9op","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-5yv5w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-bmej","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-283oj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-2s3hh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-33r6m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-4svh5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-4vmt3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-5yxa8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-6nyb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-7a9ro","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8de75","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8gqqy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8yjo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-90vi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-ial5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-j9mw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/write(to:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/structure"],"anchor":"Type-Properties","generated":true,"title":"Type Properties"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-8yzid":{"kind":"symbol","type":"topic","title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-8yzid","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8yzid"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/leadingTrivia":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"title":"leadingTrivia","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/leadingtrivia","kind":"symbol","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/nextToken":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/nexttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/nextToken","deprecated":true,"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","title":"nextToken","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/is(_:)-5yv5w":{"role":"symbol","type":"topic","deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/is(_:)-5yv5w","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-5yv5w","title":"is(_:)","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"text":" node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-8yjo":{"kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-8yjo","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8yjo","type":"topic","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-4vmt3":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-4vmt3","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-4vmt3","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/init(_:)-2684v":{"kind":"symbol","title":"init(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/init(_:)-2684v","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Children","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp","kind":"typeIdentifier","text":"Children"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/init(_:)-2684v"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/is(_:)-bmej":{"kind":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/is(_:)-bmej","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-bmej","type":"topic","role":"symbol","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmedDescription":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmeddescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedDescription","title":"trimmedDescription","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/is(_:)-5m9op":{"kind":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/is(_:)-5m9op","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-5m9op","type":"topic","role":"symbol","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/structure":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/structure","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/structure","title":"structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/detach()":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/detach()","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/detach()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true,"kind":"symbol","title":"detach()","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmedDescription(matching:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmeddescription(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedDescription(matching:)","title":"trimmedDescription(matching:)","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/syntaxTextBytes":{"title":"syntaxTextBytes","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"kind":"text","text":": ["},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"type":"text","text":" "},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/syntaxtextbytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/syntaxTextBytes","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-2s3hh":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-2s3hh","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-2s3hh","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/init(_:)-1vz5f":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/init(_:)-1vz5f","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/init(_:)-1vz5f","title":"init(_:)","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?)"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-8pg4w":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-8pg4w","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8pg4w","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","title":"asProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-90vi":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-90vi","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-90vi","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","type":"topic","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","kind":"typeIdentifier"}],"kind":"symbol","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-9zjpf":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-9zjpf","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9zjpf","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/syntaxNodeType":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/syntaxnodetype","type":"topic","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/syntaxNodeType","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":".Type","kind":"text"}],"kind":"symbol","title":"syntaxNodeType","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/previousToken":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/previousToken","abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/previoustoken","title":"previousToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmed":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmed","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmed","title":"trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-8kv7l":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8kv7l","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-8kv7l","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/cast(_:)-1n7r5":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/cast(_:)-1n7r5","type":"topic","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-1n7r5","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"}],"kind":"symbol","title":"cast(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-j9mw":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-j9mw","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-j9mw","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"BracedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/cast(_:)-3zyu":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/cast(_:)-3zyu","type":"topic","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node.."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-3zyu","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"deprecated":true,"kind":"symbol","title":"cast(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-7a9ro":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-7a9ro","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-7a9ro","type":"topic","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/byteSizeAfterTrimmingTrivia":{"role":"symbol","type":"topic","deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/bytesizeaftertrimmingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteSizeAfterTrimmingTrivia","title":"byteSizeAfterTrimmingTrivia","abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/totalLength":{"abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"role":"symbol","kind":"symbol","title":"totalLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/totalLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/totallength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/index":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/index","type":"topic","abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference"},{"type":"text","text":" collection."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/index","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex"}],"deprecated":true,"kind":"symbol","title":"index","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/firstToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/firstToken(viewMode:)","type":"topic","kind":"symbol","title":"firstToken(viewMode:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/firsttoken(viewmode:)","role":"symbol","abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/totalByteRange":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/totalbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/totalByteRange","title":"totalByteRange","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-8gqqy":{"title":"isProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8gqqy","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-8gqqy","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-4373v":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-4373v","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-4373v","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"asProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/nextToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/nextToken(viewMode:)","type":"topic","title":"nextToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/nexttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/leadingTriviaLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/leadingTriviaLength","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/leadingtrivialength","kind":"symbol","role":"symbol","title":"leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/startLocation(converter:afterLeadingTrivia:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/startlocation(converter:afterleadingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/startLocation(converter:afterLeadingTrivia:)","title":"startLocation(converter:afterLeadingTrivia:)","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLocation"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trailingTrivia":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trailingtrivia","type":"topic","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"kind":"symbol","title":"trailingTrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-33r6m":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-33r6m","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-33r6m","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmedByteRange":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmedbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedByteRange","title":"trimmedByteRange","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-8de75":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8de75","title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-8de75"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-k7j7":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-k7j7","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-k7j7","type":"topic","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/write(to:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/write(to:)","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/write(to:)","kind":"symbol","role":"symbol","title":"write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/lastToken":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/lasttoken","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/lastToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"deprecated":true,"kind":"symbol","title":"lastToken","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/endPosition":{"role":"symbol","title":"endPosition","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/endposition","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endPosition","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/detached":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/detached","type":"topic","title":"detached","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"detached"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/detached","abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/byteSize":{"role":"symbol","type":"topic","deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/bytesize","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteSize","title":"byteSize","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasWarning":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/haswarning","type":"topic","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true,"type":"reference"},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasWarning","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","title":"hasWarning","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/endLocation(converter:afterTrailingTrivia:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/endlocation(converter:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endLocation(converter:afterTrailingTrivia:)","title":"endLocation(converter:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasSequenceExpr":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/hassequenceexpr","type":"topic","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasSequenceExpr","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasSequenceExpr","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","title":"hasSequenceExpr","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasError":{"role":"symbol","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"hasError","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/haserror","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasError"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/lastToken(viewMode:)":{"abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/lasttoken(viewmode:)","role":"symbol","title":"lastToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/lastToken(viewMode:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/kind":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/kind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/kind","title":"kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","type":"reference","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/previousToken(viewMode:)":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/previoustoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/previousToken(viewMode:)","title":"previousToken(viewMode:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/as(_:)-9uv5g":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/as(_:)-9uv5g","type":"topic","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-9uv5g","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"kind":"symbol","title":"as(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/root":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/root","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/root","title":"root","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/contentLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/contentLength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"kind":"symbol","abstract":[],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/contentlength","deprecated":true,"type":"topic","title":"contentLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/children(viewMode:)":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/children(viewmode:)","type":"topic","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/children(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","text":"SyntaxChildren"}],"kind":"symbol","title":"children(viewMode:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/with(_:_:)":{"title":"with(_:_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/with(_:_:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/with(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmedLength":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmedlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedLength","title":"trimmedLength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasMaximumNestingLevelOverflow":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/hasmaximumnestingleveloverflow","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasMaximumNestingLevelOverflow","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","title":"hasMaximumNestingLevelOverflow","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/byteRange":{"title":"byteRange","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/byterange","abstract":[],"kind":"symbol","type":"topic","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteRange","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/positionAfterSkippingLeadingTrivia":{"abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/positionAfterSkippingLeadingTrivia","title":"positionAfterSkippingLeadingTrivia","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/positionafterskippingleadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-5h41q":{"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-5h41q","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-5h41q","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DifferentiabilityArgumentListSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax","role":"symbol","abstract":[],"title":"DifferentiabilityArgumentListSyntax","navigatorTitle":[{"text":"DifferentiabilityArgumentListSyntax","kind":"identifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/token(at:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/token(at:)","title":"token(at:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/token(at:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"type":"text","text":"syntax node or any of its children."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"token"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/endPositionBeforeTrailingTrivia":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/endpositionbeforetrailingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endPositionBeforeTrailingTrivia","title":"endPositionBeforeTrailingTrivia","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/parent":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/parent","type":"topic","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/parent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"kind":"symbol","title":"parent","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/position":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/position","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/position","title":"position","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"type":"text","text":" "},{"text":"trivia.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/cast(_:)-4yaxg":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/cast(_:)-4yaxg","type":"topic","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-4yaxg","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true,"kind":"symbol","title":"cast(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/id":{"title":"id","role":"symbol","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/id","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/id","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-7l2ef":{"title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-7l2ef","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-7l2ef"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-5yxa8":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-5yxa8","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-5yxa8","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-35mvl":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-35mvl","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-35mvl","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":"?"}],"kind":"symbol","title":"asProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasParent":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasParent","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/hasparent","role":"symbol","kind":"symbol","title":"hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/tokens(viewMode:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/tokens(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/tokens(viewMode:)","title":"tokens(viewMode:)","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"tokens","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/as(_:)-2s6hj":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/as(_:)-2s6hj","type":"topic","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"text":" node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-2s6hj","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"deprecated":true,"kind":"symbol","title":"as(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-9s6jj":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-9s6jj","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9s6jj","title":"asProtocol(_:)","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/description":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/description","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/description","title":"description","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trailingTriviaLength":{"type":"topic","kind":"symbol","role":"symbol","title":"trailingTriviaLength","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trailingtrivialength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trailingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-283oj":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-283oj","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-283oj","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/as(_:)-68tq4":{"abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-68tq4","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/as(_:)-68tq4","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"text":"?","kind":"text"}],"title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-63v2f":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-63v2f","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-63v2f","kind":"symbol","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/debugDescription":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/debugdescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/debugDescription","title":"debugDescription","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-6nyb":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-6nyb","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-6nyb","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/keyPathInParent":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/keypathinparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/keyPathInParent","title":"keyPathInParent","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-dvl5":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-dvl5","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-dvl5","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"asProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-ial5":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-ial5","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-ial5","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-82z4p":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-82z4p","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-82z4p","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":"?","kind":"text"}],"kind":"symbol","title":"asProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/firstToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/firstToken","type":"topic","title":"firstToken","abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/firsttoken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/node(at:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/node(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/node(at:)","title":"node(at:)","abstract":[{"text":"If the node with the given ","type":"text"},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-4svh5":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-4svh5","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-4svh5","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-9rl6y":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9rl6y","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-9rl6y","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isImplicit":{"role":"symbol","type":"topic","deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isimplicit","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isImplicit","title":"isImplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","title":"debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"indentString"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmed(matching:)":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmed(matching:)","type":"topic","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"text":" trimmed from the","type":"text"},{"text":" ","type":"text"},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","title":"trimmed(matching:)","role":"symbol"}}}