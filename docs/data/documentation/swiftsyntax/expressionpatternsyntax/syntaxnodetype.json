{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/expressionpatternsyntax\/syntaxnodetype"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"metadata":{"symbolKind":"property","title":"syntaxNodeType","modules":[{"name":"SwiftSyntax"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"text":".Type","kind":"text"}],"role":"symbol","externalID":"s:11SwiftSyntax0B8ProtocolPAAE14syntaxNodeTypeAaB_pXpvp::SYNTHESIZED::s:11SwiftSyntax017ExpressionPatternB0V","extendedModule":"SwiftSyntax","roleHeading":"Instance Property"},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/syntaxNodeType","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"},{"text":".Type { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"You almost always want to prefer this over ","type":"text"},{"type":"codeVoice","code":"type(of: self)"},{"text":" because if","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"type":"text","text":" is a "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntax","isActive":true},{"text":" representing a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionDeclSyntax","type":"reference"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"codeVoice","code":"type(of: self)"},{"type":"text","text":" will return "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntax"},{"text":", while ","type":"text"},{"type":"codeVoice","code":"syntaxNodeType"},{"type":"text","text":" looks"},{"type":"text","text":" "},{"text":"at the dynamic kind of this node and returns ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionDeclSyntax"},{"text":".","type":"text"}],"type":"paragraph"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntaxProtocol":{"navigatorTitle":[{"kind":"identifier","text":"ExprSyntaxProtocol"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","kind":"symbol","url":"\/documentation\/swiftsyntax\/exprsyntaxprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","isActive":true},{"type":"text","text":" nodes conform."}],"type":"topic","title":"ExprSyntaxProtocol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/FunctionDeclSyntax":{"title":"FunctionDeclSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/functiondeclsyntax","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FunctionDeclSyntax","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"FunctionDeclSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionDeclSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/syntaxNodeType":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/syntaxNodeType","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":".Type"}],"title":"syntaxNodeType","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/syntaxnodetype","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclSyntax":{"abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declsyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DeclSyntax"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntax","title":"DeclSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/SyntaxProtocol-Implementations":{"type":"topic","title":"SyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/syntaxprotocol-implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/SyntaxProtocol-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax":{"title":"ExpressionPatternSyntax","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ExpressionPatternSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A pattern that contains an "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/swiftsyntax\/expressionpatternsyntax","navigatorTitle":[{"text":"ExpressionPatternSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax","type":"topic"}}}