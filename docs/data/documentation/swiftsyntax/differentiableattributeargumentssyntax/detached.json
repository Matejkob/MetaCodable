{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]}],"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax\/detached","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"metadata":{"roleHeading":"Instance Property","title":"detached","externalID":"s:11SwiftSyntax0B8ProtocolPAAE8detachedxvp::SYNTHESIZED::s:11SwiftSyntax032DifferentiableAttributeArgumentsB0V","extendedModule":"SwiftSyntax","role":"symbol","modules":[{"name":"SwiftSyntax"}],"symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"variants":[{"paths":["\/documentation\/swiftsyntax\/differentiableattributeargumentssyntax\/detached"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiableAttributeArgumentsSyntax":{"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiableattributeargumentssyntax","navigatorTitle":[{"kind":"identifier","text":"DifferentiableAttributeArgumentsSyntax"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DifferentiableAttributeArgumentsSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax","title":"DifferentiableAttributeArgumentsSyntax","type":"topic","abstract":[{"type":"text","text":"The arguments for the "},{"type":"codeVoice","code":"@differentiable"},{"text":" attribute: an optional differentiability kind, an optional differentiability parameter clause, and an optional ‘where’ clause.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiableAttributeArgumentsSyntax/detached":{"title":"detached","abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiableattributeargumentssyntax\/detached","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax\/detached","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detached"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiableAttributeArgumentsSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/swiftsyntax\/differentiableattributeargumentssyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax\/SyntaxProtocol-Implementations","type":"topic"}}}