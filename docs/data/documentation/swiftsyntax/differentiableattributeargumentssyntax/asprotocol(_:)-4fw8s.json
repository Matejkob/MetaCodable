{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithStatementsSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithStatementsSyntax","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"kind":"text","text":"?"}],"platforms":["macOS"]}]}],"metadata":{"roleHeading":"Instance Method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA014WithStatementsB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax032DifferentiableAttributeArgumentsB0V","title":"asProtocol(_:)","extendedModule":"SwiftSyntax","role":"symbol","modules":[{"name":"SwiftSyntax"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax\/asProtocol(_:)-4fw8s","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/differentiableattributeargumentssyntax\/asprotocol(_:)-4fw8s"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiableAttributeArgumentsSyntax/asProtocol(_:)-4fw8s":{"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiableattributeargumentssyntax\/asprotocol(_:)-4fw8s","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax\/asProtocol(_:)-4fw8s","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/WithStatementsSyntax":{"title":"WithStatementsSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/withstatementssyntax","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WithStatementsSyntax","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"WithStatementsSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithStatementsSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiableAttributeArgumentsSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/swiftsyntax\/differentiableattributeargumentssyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax\/SyntaxProtocol-Implementations","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiableAttributeArgumentsSyntax":{"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiableattributeargumentssyntax","navigatorTitle":[{"kind":"identifier","text":"DifferentiableAttributeArgumentsSyntax"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DifferentiableAttributeArgumentsSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiableAttributeArgumentsSyntax","title":"DifferentiableAttributeArgumentsSyntax","type":"topic","abstract":[{"type":"text","text":"The arguments for the "},{"type":"codeVoice","code":"@differentiable"},{"text":" attribute: an optional differentiability kind, an optional differentiability parameter clause, and an optional ‘where’ clause.","type":"text"}]}}}