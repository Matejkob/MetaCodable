{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"title":"init(wrappedValue:exclusivity:help:)","roleHeading":"Initializer","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"EnumerableFlag","type":"codeVoice"},{"text":".","type":"text"}]},"symbolKind":"init","role":"symbol","extendedModule":"ArgumentParser","externalID":"s:14ArgumentParser4FlagVA2A010EnumerableC0RzlE12wrappedValue11exclusivity4helpACyxGx_AA0C11ExclusivityVAA0A4HelpVSgtcfc","modules":[{"name":"ArgumentParser"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:14ArgumentParser4FlagVA2A010EnumerableC0RzlE5Valuexmfp"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV","kind":"typeIdentifier"},{"kind":"text","text":"?)"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/flag\/init(wrappedvalue:exclusivity:help:)"]}],"abstract":[{"text":"Creates a property with a default value provided by standard Swift default value syntax that gets its value from the presence of a flag.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser4FlagVA2A010EnumerableC0RzlE5Valuexmfp"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"kind":"text","text":" = .exclusive, "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp"},{"text":"? = nil)","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"wrappedValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A default value to use for this property, provided implicitly by the compiler during property wrapper initialization."}]}]},{"name":"exclusivity","content":[{"inlineContent":[{"text":"The behavior to use when multiple flags are specified.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Information about how to use this flag."}],"type":"paragraph"}],"name":"help"}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this initializer to customize the name and number of states further than using a ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"To use, define an "},{"code":"EnumerableFlag","type":"codeVoice"},{"type":"text","text":" enumeration with a case for each state, and use that as the type for your flag."},{"text":" ","type":"text"},{"type":"text","text":"In this case, the user can specify either "},{"code":"--use-production-server","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"--use-development-server"},{"type":"text","text":" to set the flagâ€™s value."}]},{"code":["enum ServerChoice: EnumerableFlag {","  case useProductionServer","  case useDevelopmentServer","}","","@Flag var serverChoice: ServerChoice = .useProductionServer"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:exclusivity:help:)"},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:exclusivity:help:)":{"title":"init(wrappedValue:exclusivity:help:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"EnumerableFlag"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser4FlagVA2A010EnumerableC0RzlE5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:exclusivity:help:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:exclusivity:help:)","abstract":[{"text":"Creates a property with a default value provided by standard Swift default value syntax that gets its value from the presence of a flag.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentHelp":{"title":"ArgumentHelp","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentHelp","kind":"identifier"}],"url":"\/documentation\/argumentparser\/argumenthelp","abstract":[{"type":"text","text":"Help information for a command-line argument."}],"navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"abstract":[{"text":"A property wrapper that represents a command-line flag.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","title":"Flag","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flag"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagExclusivity":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagExclusivity"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","role":"symbol","title":"FlagExclusivity","navigatorTitle":[{"text":"FlagExclusivity","kind":"identifier"}],"abstract":[{"type":"text","text":"The options for treating enumeration-based flags as exclusive."}],"url":"\/documentation\/argumentparser\/flagexclusivity","type":"topic"}}}