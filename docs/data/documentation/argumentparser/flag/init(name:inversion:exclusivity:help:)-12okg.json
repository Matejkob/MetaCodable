{"abstract":[{"type":"text","text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"]}],"metadata":{"title":"init(name:inversion:exclusivity:help:)","role":"symbol","symbolKind":"init","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"exclusivity"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"text":"?)","kind":"text"}],"extendedModule":"ArgumentParser","externalID":"s:14ArgumentParser4FlagVAASbRszlE4name9inversion11exclusivity4helpACySbGAA17NameSpecificationV_AA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc","roleHeading":"Initializer","modules":[{"name":"ArgumentParser"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification"},{"text":" = .long, ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","text":"FlagInversion"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FlagExclusivity","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"text":" = .chooseLast, ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"kind":"text","text":"? = nil)"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A specification for what names are allowed for this flag.","type":"text"}]}],"name":"name"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The method for converting this flagâ€™s name into an on\/off pair.","type":"text"}]}],"name":"inversion"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior to use when an on\/off pair of flags is specified."}]}],"name":"exclusivity"},{"name":"help","content":[{"inlineContent":[{"type":"text","text":"Information about how to use this flag."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this initializer to create a Boolean flag with an on\/off pair.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"With the following declaration, for example, the user can specify either "},{"type":"codeVoice","code":"--use-https"},{"type":"text","text":" or "},{"code":"--no-use-https","type":"codeVoice"},{"type":"text","text":" to set the "},{"type":"codeVoice","code":"useHTTPS"},{"text":" flag to ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":", respectively.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Flag(inversion: .prefixedNo)","var useHTTPS: Bool"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"abstract":[{"text":"A property wrapper that represents a command-line flag.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","title":"Flag","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flag"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagInversion":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FlagInversion","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","role":"symbol","title":"FlagInversion","navigatorTitle":[{"kind":"identifier","text":"FlagInversion"}],"abstract":[{"text":"The options for converting a Boolean flag into a ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"url":"\/documentation\/argumentparser\/flaginversion","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagExclusivity":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagExclusivity"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","role":"symbol","title":"FlagExclusivity","navigatorTitle":[{"text":"FlagExclusivity","kind":"identifier"}],"abstract":[{"type":"text","text":"The options for treating enumeration-based flags as exclusive."}],"url":"\/documentation\/argumentparser\/flagexclusivity","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","abstract":[{"text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.","type":"text"}],"url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","role":"symbol","kind":"symbol","title":"init(name:inversion:exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentHelp":{"title":"ArgumentHelp","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentHelp","kind":"identifier"}],"url":"\/documentation\/argumentparser\/argumenthelp","abstract":[{"type":"text","text":"Help information for a command-line argument."}],"navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/NameSpecification":{"title":"NameSpecification","navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","role":"symbol","abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"text":" ","type":"text"},{"type":"text","text":"label."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"NameSpecification","kind":"identifier"}],"type":"topic","url":"\/documentation\/argumentparser\/namespecification","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"}}}