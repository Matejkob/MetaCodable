{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"captureForPassthrough","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"You can use the ","type":"text"},{"code":"captureForPassthrough","type":"codeVoice"},{"type":"text","text":" parsing strategy if you need to"},{"type":"text","text":" "},{"type":"text","text":"capture a userâ€™s input to manually pass it unchanged to another command."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you use this parsing strategy, the parser stops parsing flags and"},{"type":"text","text":" "},{"type":"text","text":"options as soon as it encounters a positional argument or an unrecognized"},{"type":"text","text":" "},{"type":"text","text":"flag, and captures all remaining inputs in the array argument."}]},{"inlineContent":[{"type":"text","text":"For example, the "},{"type":"codeVoice","code":"Example"},{"text":" command defined below has an ","type":"text"},{"code":"words","type":"codeVoice"},{"type":"text","text":" array that"},{"text":" ","type":"text"},{"text":"uses the ","type":"text"},{"code":"captureForPassthrough","type":"codeVoice"},{"type":"text","text":" parsing strategy:"}],"type":"paragraph"},{"code":["@main","struct Example: ParsableCommand {","    @Flag var verbose = false","","    @Argument(parsing: .captureForPassthrough)","    var words: [String] = []","","    func run() {","        print(words.joined(separator: \"\\n\"))","    }","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Any values after the first unrecognized input are captured in the ","type":"text"},{"type":"codeVoice","code":"words"},{"type":"text","text":" "},{"text":"array.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["$ example --verbose one two --other","one","two","--other","$ example one two --verbose","one","two","--verbose"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With the "},{"type":"codeVoice","code":"captureForPassthrough"},{"type":"text","text":" parsing strategy, the "},{"code":"--","type":"codeVoice"},{"text":" terminator","type":"text"},{"type":"text","text":" "},{"text":"is included in the captured values.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["$ example --verbose one two -- --other","one","two","--","--other"]},{"type":"aside","name":"Note","content":[{"inlineContent":[{"text":"This parsing strategy can be surprising for users, particularly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when combined with options and flags. Prefer "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","isActive":true},{"type":"text","text":" or"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","type":"reference","isActive":true},{"type":"text","text":" whenever possible, since users can always terminate"},{"text":" ","type":"text"},{"type":"text","text":"options and flags with the "},{"code":"--","type":"codeVoice"},{"type":"text","text":" terminator. With the "},{"code":"remaining","type":"codeVoice"},{"type":"text","text":" "},{"text":"parsing strategy, the input ","type":"text"},{"code":"--verbose -- one two --other","type":"codeVoice"},{"type":"text","text":" would have"},{"text":" ","type":"text"},{"text":"the same result as the first example above.","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/argumentarrayparsingstrategy\/captureforpassthrough"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough"},"metadata":{"externalID":"s:14ArgumentParser0A20ArrayParsingStrategyV21captureForPassthroughACvpZ","title":"captureForPassthrough","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"captureForPassthrough"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier"}],"symbolKind":"property","roleHeading":"Type Property","modules":[{"name":"ArgumentParser"}]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"text":"Parse all remaining inputs after parsing any known options or flags,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including dash-prefixed inputs and the "},{"code":"--","type":"codeVoice"},{"text":" terminator.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/remaining":{"abstract":[{"text":"Parse only unprefixed values from the command-line input, ignoring","type":"text"},{"type":"text","text":" "},{"text":"any inputs that have a dash prefix. This is the default strategy.","type":"text"}],"kind":"symbol","role":"symbol","title":"remaining","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"remaining","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","type":"topic","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/remaining"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"type":"topic","kind":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","navigatorTitle":[{"kind":"identifier","text":"ArgumentArrayParsingStrategy"}],"title":"ArgumentArrayParsingStrategy","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"abstract":[{"text":"The strategy to use when parsing multiple values from positional arguments","type":"text"},{"type":"text","text":" "},{"text":"into an array.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/captureForPassthrough":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough","role":"symbol","title":"captureForPassthrough","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"captureForPassthrough","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/captureforpassthrough","kind":"symbol","abstract":[{"text":"Parse all remaining inputs after parsing any known options or flags,","type":"text"},{"type":"text","text":" "},{"text":"including dash-prefixed inputs and the ","type":"text"},{"code":"--","type":"codeVoice"},{"text":" terminator.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/allUnrecognized":{"kind":"symbol","title":"allUnrecognized","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/allunrecognized","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allUnrecognized","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}],"type":"topic","abstract":[{"text":"After parsing, capture all unrecognized inputs in this argument array.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"}}}