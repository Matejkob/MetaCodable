{"sections":[],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"metadata":{"title":"Flag","modules":[{"name":"ArgumentParser"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Flag"}],"navigatorTitle":[{"text":"Flag","kind":"identifier"}],"externalID":"s:14ArgumentParser4FlagV"},"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(exclusivity:help:)-38n7u","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(exclusivity:help:)-5fggj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:exclusivity:help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/wrappedValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/CustomStringConvertible-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations","generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Flag"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"@Flag"},{"type":"text","text":" wrapper to define a property of your custom type as a"},{"type":"text","text":" "},{"text":"command-line flag. A ","type":"text"},{"inlineContent":[{"type":"text","text":"flag"}],"type":"emphasis"},{"text":" is a dash-prefixed label that can be provided on","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the command line, such as "},{"type":"codeVoice","code":"-d"},{"type":"text","text":" and "},{"code":"--debug","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"For example, the following program declares a flag that lets a user indicate","type":"text"},{"text":" ","type":"text"},{"text":"that seconds should be included when printing the time.","type":"text"}],"type":"paragraph"},{"code":["@main","struct Time: ParsableCommand {","    @Flag var includeSeconds = false","","    mutating func run() {","        if includeSeconds {","            print(Date.now.formatted(.dateTime.hour().minute().second()))","        } else {","            print(Date.now.formatted(.dateTime.hour().minute()))","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"codeVoice","code":"includeSeconds"},{"text":" has a default value of ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", but becomes ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if","type":"text"},{"text":" ","type":"text"},{"code":"--include-seconds","type":"codeVoice"},{"type":"text","text":" is provided on the command line."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["$ time","11:09 AM","$ time --include-seconds","11:09:15 AM"]},{"type":"paragraph","inlineContent":[{"text":"A flag can have a value that is a ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":", an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":", or any "},{"type":"codeVoice","code":"EnumerableFlag"},{"type":"text","text":" "},{"type":"text","text":"type. When using an "},{"code":"EnumerableFlag","type":"codeVoice"},{"text":" type as a flag, the individual cases","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"form the flags that are used on the command line."}]},{"code":["@main","struct Math: ParsableCommand {","    enum Operation: EnumerableFlag {","        case add","        case multiply","    }","","    @Flag var operation: Operation","","    mutating func run() {","        print(\"Time to \\(operation)!\")","    }","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Instead of using the name of the "},{"type":"codeVoice","code":"operation"},{"type":"text","text":" property as the flag in this"},{"type":"text","text":" "},{"text":"case, the two cases of the ","type":"text"},{"type":"codeVoice","code":"Operation"},{"type":"text","text":" enumeration become valid flags."},{"type":"text","text":" "},{"type":"text","text":"The "},{"code":"operation","type":"codeVoice"},{"type":"text","text":" property is neither optional nor given a default value, so"},{"type":"text","text":" "},{"type":"text","text":"one of the two flags is required."}],"type":"paragraph"},{"syntax":null,"code":["$ math --add","Time to add!","$ math","Error: Missing one of: '--add', '--multiply'"],"type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/flag"]}],"kind":"symbol","relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/s8CopyableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/Se","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"],"type":"conformsTo"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"},"doc://com.SwiftyLab.HelperCoders/Se":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/Se","title":"Swift.Decodable"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:name:help:)":{"url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:help:)","title":"init(wrappedValue:name:help:)","abstract":[{"type":"text","text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of a flag."}],"kind":"symbol","role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:help:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/CustomStringConvertible-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/argumentparser\/flag\/customstringconvertible-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/CustomStringConvertible-Implementations","role":"collectionGroup","kind":"article","title":"CustomStringConvertible Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(exclusivity:help:)-38n7u":{"title":"init(exclusivity:help:)","role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"exclusivity"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"url":"\/documentation\/argumentparser\/flag\/init(exclusivity:help:)-38n7u","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(exclusivity:help:)-38n7u","abstract":[{"text":"Creates a property that gets its value from the presence of a flag,","type":"text"},{"text":" ","type":"text"},{"text":"where the allowed flags are defined by an ","type":"text"},{"code":"EnumerableFlag","type":"codeVoice"},{"type":"text","text":" type."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"abstract":[{"text":"A property wrapper that represents a command-line flag.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","title":"Flag","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flag"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","abstract":[{"text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.","type":"text"}],"url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","role":"symbol","kind":"symbol","title":"init(name:inversion:exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8CopyableP"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(exclusivity:help:)-5fggj":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"EnumerableFlag"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[{"type":"text","text":"Creates a property with no default value that gets its value from the presence of a flag."}],"url":"\/documentation\/argumentparser\/flag\/init(exclusivity:help:)-5fggj","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(exclusivity:help:)-5fggj","role":"symbol","kind":"symbol","title":"init(exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:exclusivity:help:)":{"title":"init(wrappedValue:exclusivity:help:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"EnumerableFlag"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser4FlagVA2A010EnumerableC0RzlE5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:exclusivity:help:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:exclusivity:help:)","abstract":[{"text":"Creates a property with a default value provided by standard Swift default value syntax that gets its value from the presence of a flag.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(help:)":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(help:)","url":"\/documentation\/argumentparser\/flag\/init(help:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Creates an array property with no default value that gets its values from the presence of zero or more flags, where the allowed flags are defined by an "},{"code":"EnumerableFlag","type":"codeVoice"},{"type":"text","text":" type."}],"role":"symbol","title":"init(help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool?"},{"text":".","type":"text"}]},"type":"topic","abstract":[{"text":"Creates a Boolean property that reads its value from the presence of","type":"text"},{"text":" ","type":"text"},{"text":"one or more inverted flags.","type":"text"}],"url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","role":"symbol","kind":"symbol","title":"init(name:inversion:exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:help:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser4FlagV12wrappedValue4helpACySayqd__GGAF_AA0A4HelpVSgtcAFRszAA010EnumerableC0Rd__lufc7ElementL_qd__mfp","text":"Element"},{"kind":"text","text":"], "},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:help:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:help:)","abstract":[{"text":"Creates an array property that gets its values from the presence of","type":"text"},{"text":" ","type":"text"},{"text":"zero or more flags, where the allowed flags are defined by an","type":"text"},{"text":" ","type":"text"},{"code":"EnumerableFlag","type":"codeVoice"},{"type":"text","text":" type."}],"title":"init(wrappedValue:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"text":"?)","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[{"type":"text","text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags."}],"url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","role":"symbol","kind":"symbol","title":"init(wrappedValue:name:inversion:exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:help:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"text":"?)","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[{"type":"text","text":"Creates an integer property that gets its value from the number of times"},{"type":"text","text":" "},{"type":"text","text":"a flag appears."}],"url":"\/documentation\/argumentparser\/flag\/init(name:help:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:help:)","role":"symbol","kind":"symbol","title":"init(name:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/wrappedValue":{"url":"\/documentation\/argumentparser\/flag\/wrappedvalue","kind":"symbol","abstract":[{"type":"text","text":"The value presented by this property wrapper."}],"title":"wrappedValue","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/wrappedValue","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser4FlagV5Valuexmfp","text":"Value"}]}}}