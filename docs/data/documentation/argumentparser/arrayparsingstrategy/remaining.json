{"variants":[{"paths":["\/documentation\/argumentparser\/arrayparsingstrategy\/remaining"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"remaining","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","text":"ArrayParsingStrategy"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"code":".remaining","type":"codeVoice"},{"text":" can be used for capturing pass-through flags. For example, for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a parsable type defined as"},{"text":" ","type":"text"},{"code":"@Option(parsing: .remaining) var passthrough: [String]","type":"codeVoice"},{"type":"text","text":":"}]},{"code":["$ cmd --passthrough --foo 1 --bar 2 -xvf","------------","options.passthrough == [\"--foo\", \"1\", \"--bar\", \"2\", \"-xvf\"]"],"syntax":null,"type":"codeListing"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"This will read all inputs following the option without attempting to do any parsing. This is"},{"text":" ","type":"text"},{"type":"text","text":"usually "},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"type":"text","text":" what users would expect. Use with caution."}],"type":"paragraph"}],"name":"Note","type":"aside"},{"inlineContent":[{"type":"text","text":"Consider using a trailing "},{"type":"codeVoice","code":"@Argument"},{"type":"text","text":" instead and letting users explicitly turn off parsing"},{"type":"text","text":" "},{"text":"through the terminator ","type":"text"},{"code":"--","type":"codeVoice"},{"type":"text","text":". That is the more common approach. For example:"}],"type":"paragraph"},{"code":["struct Options: ParsableArguments {","    @Option var title: String","    @Argument var remainder: [String]","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"would parse the input ","type":"text"},{"type":"codeVoice","code":"--title Foo -- Bar --baz"},{"text":" such that the ","type":"text"},{"code":"remainder","type":"codeVoice"},{"type":"text","text":" "},{"text":"would hold the value ","type":"text"},{"code":"[\"Bar\", \"--baz\"]","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Parse all remaining arguments into an array."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy\/remaining"},"metadata":{"symbolKind":"property","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"remaining"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","text":"ArrayParsingStrategy","kind":"typeIdentifier"}],"role":"symbol","externalID":"s:14ArgumentParser20ArrayParsingStrategyV9remainingACvpZ","roleHeading":"Type Property","modules":[{"name":"ArgumentParser"}],"title":"remaining"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy/remaining":{"title":"remaining","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"remaining","kind":"identifier"},{"kind":"text","text":": "},{"text":"ArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy\/remaining","url":"\/documentation\/argumentparser\/arrayparsingstrategy\/remaining","kind":"symbol","abstract":[{"text":"Parse all remaining arguments into an array.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy":{"abstract":[{"text":"The strategy to use when parsing multiple values from ","type":"text"},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"type":"text","text":" "},{"type":"text","text":"array."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","url":"\/documentation\/argumentparser\/arrayparsingstrategy","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayParsingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"type":"topic","title":"ArrayParsingStrategy"}}}