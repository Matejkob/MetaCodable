{"abstract":[{"type":"text","text":"With buildEither(second:), enables support for ‘if-else’ and ‘switch’"},{"type":"text","text":" "},{"type":"text","text":"statements by folding conditional results into a single result."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/primaryassociatedtypelistbuilder\/buildeither(first:)"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrimaryAssociatedTypeListBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrimaryAssociatedTypeListBuilder\/ListBuilder-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrimaryAssociatedTypeListBuilder\/buildEither(first:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildEither"},{"text":"(","kind":"text"},{"text":"first","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"component","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}],"platforms":["macOS"]}]}],"kind":"symbol","sections":[],"metadata":{"externalID":"s:18SwiftSyntaxBuilder04ListC0PAAE11buildEither5firstSay11FinalResult_7ElementQZGAI_tFZ::SYNTHESIZED::s:18SwiftSyntaxBuilder025PrimaryAssociatedTypeListC0V","extendedModule":"SwiftSyntaxBuilder","title":"buildEither(first:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"kind":"text","text":"("},{"text":"first","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","text":"Component"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"}],"symbolKind":"method","roleHeading":"Type Method","modules":[{"name":"SwiftSyntaxBuilder"}]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/PrimaryAssociatedTypeListBuilder/buildEither(first:)":{"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/primaryassociatedtypelistbuilder\/buildeither(first:)","abstract":[{"type":"text","text":"With buildEither(second:), enables support for ‘if-else’ and ‘switch’"},{"type":"text","text":" "},{"type":"text","text":"statements by folding conditional results into a single result."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrimaryAssociatedTypeListBuilder\/buildEither(first:)","role":"symbol","title":"buildEither(first:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"text":"(","kind":"text"},{"text":"first","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/PrimaryAssociatedTypeListBuilder":{"url":"\/documentation\/swiftsyntaxbuilder\/primaryassociatedtypelistbuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PrimaryAssociatedTypeListBuilder"}],"abstract":[],"title":"PrimaryAssociatedTypeListBuilder","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrimaryAssociatedTypeListBuilder","kind":"symbol","navigatorTitle":[{"text":"PrimaryAssociatedTypeListBuilder","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/PrimaryAssociatedTypeListBuilder/ListBuilder-Implementations":{"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/primaryassociatedtypelistbuilder\/listbuilder-implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrimaryAssociatedTypeListBuilder\/ListBuilder-Implementations","title":"ListBuilder Implementations","role":"collectionGroup","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ListBuilder/Component":{"url":"\/documentation\/swiftsyntaxbuilder\/listbuilder\/component","abstract":[{"type":"text","text":"The type of a partial result, which will be carried through all of the"},{"type":"text","text":" "},{"type":"text","text":"build methods."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Component"}],"type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Component"}],"title":"ListBuilder.Component","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component"}}}