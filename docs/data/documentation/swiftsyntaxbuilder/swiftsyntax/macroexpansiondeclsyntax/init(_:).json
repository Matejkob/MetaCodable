{"kind":"symbol","sections":[],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"symbolKind":"init","modules":[{"name":"SwiftSyntaxBuilder"}],"roleHeading":"Initializer","extendedModule":"SwiftSyntaxBuilder","role":"symbol","title":"init(_:)","externalID":"s:18SwiftSyntaxBuilder04DeclB9ParseablePAAEyxAA0B10NodeStringVKcfc::SYNTHESIZED::s:11SwiftSyntax018MacroExpansionDeclB0V"},"abstract":[{"text":"Create a syntax node from the given string interpolation.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"stringInterpolation"},{"text":": ","kind":"text"},{"text":"SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer throws if the syntax node was not able to be parsed as"},{"text":" ","type":"text"},{"type":"text","text":"this type, e.g. when calling "},{"type":"codeVoice","code":"ClassDeclSyntax(\"actor Foo {})"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"If there are syntax errors in the string, the initializer will return a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"node that contains errors without throwing."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroExpansionDeclSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroExpansionDeclSyntax\/DeclSyntaxParseable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/macroexpansiondeclsyntax\/init(_:)"]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroExpansionDeclSyntax\/init(_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SyntaxNodeString":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString","type":"topic","kind":"symbol","abstract":[{"text":"A type that is expressible by string interpolation the same way that syntax","type":"text"},{"text":" ","type":"text"},{"text":"nodes are, but instead of producing a node, it stores the string interpolation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"role":"symbol","title":"SyntaxNodeString","url":"\/documentation\/swiftsyntaxbuilder\/syntaxnodestring"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/MacroExpansionDeclSyntax":{"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MacroExpansionDeclSyntax","preciseIdentifier":"s:11SwiftSyntax018MacroExpansionDeclB0V","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MacroExpansionDeclSyntax"}],"type":"topic","title":"MacroExpansionDeclSyntax","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/macroexpansiondeclsyntax","role":"symbol","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroExpansionDeclSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax","kind":"symbol","title":"SwiftSyntax","role":"collection","abstract":[],"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/MacroExpansionDeclSyntax/init(_:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"kind":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Create a syntax node from the given string interpolation."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroExpansionDeclSyntax\/init(_:)","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/macroexpansiondeclsyntax\/init(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/MacroExpansionDeclSyntax/DeclSyntaxParseable-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroExpansionDeclSyntax\/DeclSyntaxParseable-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup","title":"DeclSyntaxParseable Implementations","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/macroexpansiondeclsyntax\/declsyntaxparseable-implementations"}}}