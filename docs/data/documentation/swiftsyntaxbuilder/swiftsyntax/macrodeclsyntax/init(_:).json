{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"stringInterpolation","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This initializer throws if the syntax node was not able to be parsed as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"this type, e.g. when calling "},{"type":"codeVoice","code":"ClassDeclSyntax(\"actor Foo {})"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"If there are syntax errors in the string, the initializer will return a","type":"text"},{"type":"text","text":" "},{"text":"node that contains errors without throwing.","type":"text"}]}],"kind":"content"}],"metadata":{"title":"init(_:)","roleHeading":"Initializer","symbolKind":"init","extendedModule":"SwiftSyntaxBuilder","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"role":"symbol","modules":[{"name":"SwiftSyntaxBuilder"}],"externalID":"s:18SwiftSyntaxBuilder04DeclB9ParseablePAAEyxAA0B10NodeStringVKcfc::SYNTHESIZED::s:11SwiftSyntax09MacroDeclB0V"},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroDeclSyntax\/init(_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/macrodeclsyntax\/init(_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroDeclSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroDeclSyntax\/DeclSyntaxParseable-Implementations"]]},"abstract":[{"text":"Create a syntax node from the given string interpolation.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/MacroDeclSyntax/init(_:)":{"abstract":[{"text":"Create a syntax node from the given string interpolation.","type":"text"}],"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/macrodeclsyntax\/init(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroDeclSyntax\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol","role":"symbol","type":"topic","title":"init(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/MacroDeclSyntax/DeclSyntaxParseable-Implementations":{"kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroDeclSyntax\/DeclSyntaxParseable-Implementations","title":"DeclSyntaxParseable Implementations","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/macrodeclsyntax\/declsyntaxparseable-implementations","type":"topic","role":"collectionGroup","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax","kind":"symbol","title":"SwiftSyntax","role":"collection","abstract":[],"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SyntaxNodeString":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString","type":"topic","kind":"symbol","abstract":[{"text":"A type that is expressible by string interpolation the same way that syntax","type":"text"},{"text":" ","type":"text"},{"text":"nodes are, but instead of producing a node, it stores the string interpolation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"role":"symbol","title":"SyntaxNodeString","url":"\/documentation\/swiftsyntaxbuilder\/syntaxnodestring"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/MacroDeclSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/MacroDeclSyntax","title":"MacroDeclSyntax","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/macrodeclsyntax","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MacroDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09MacroDeclB0V"}],"navigatorTitle":[{"text":"MacroDeclSyntax","kind":"identifier"}],"kind":"symbol"}}}