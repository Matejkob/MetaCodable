{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder\/buildEither(first:)"},"abstract":[{"text":"With buildEither(second:), enables support for ‘if-else’ and ‘switch’","type":"text"},{"text":" ","type":"text"},{"text":"statements by folding conditional results into a single result.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"buildEither","kind":"identifier"},{"text":"(","kind":"text"},{"text":"first","kind":"externalParam"},{"kind":"text","text":" "},{"text":"component","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","kind":"typeIdentifier","text":"Component"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","text":"Component"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","metadata":{"modules":[{"name":"SwiftSyntaxBuilder"}],"title":"buildEither(first:)","roleHeading":"Type Method","extendedModule":"SwiftSyntaxBuilder","symbolKind":"method","externalID":"s:18SwiftSyntaxBuilder04ListC0PAAE11buildEither5firstSay11FinalResult_7ElementQZGAI_tFZ::SYNTHESIZED::s:18SwiftSyntaxBuilder029DifferentiabilityArgumentListC0V","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"text":"(","kind":"text"},{"text":"first","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}]},"variants":[{"paths":["\/documentation\/swiftsyntaxbuilder\/differentiabilityargumentlistbuilder\/buildeither(first:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder\/ListBuilder-Implementations"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/DifferentiabilityArgumentListBuilder/buildEither(first:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildEither"},{"kind":"text","text":"("},{"kind":"externalParam","text":"first"},{"kind":"text","text":": "},{"text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"url":"\/documentation\/swiftsyntaxbuilder\/differentiabilityargumentlistbuilder\/buildeither(first:)","type":"topic","abstract":[{"text":"With buildEither(second:), enables support for ‘if-else’ and ‘switch’","type":"text"},{"text":" ","type":"text"},{"text":"statements by folding conditional results into a single result.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder\/buildEither(first:)","title":"buildEither(first:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/DifferentiabilityArgumentListBuilder":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DifferentiabilityArgumentListBuilder"}],"title":"DifferentiabilityArgumentListBuilder","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder","navigatorTitle":[{"kind":"identifier","text":"DifferentiabilityArgumentListBuilder"}],"abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/differentiabilityargumentlistbuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/DifferentiabilityArgumentListBuilder/ListBuilder-Implementations":{"kind":"article","type":"topic","title":"ListBuilder Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder\/ListBuilder-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/swiftsyntaxbuilder\/differentiabilityargumentlistbuilder\/listbuilder-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ListBuilder/Component":{"url":"\/documentation\/swiftsyntaxbuilder\/listbuilder\/component","abstract":[{"type":"text","text":"The type of a partial result, which will be carried through all of the"},{"type":"text","text":" "},{"type":"text","text":"build methods."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Component"}],"type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Component"}],"title":"ListBuilder.Component","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"}}}