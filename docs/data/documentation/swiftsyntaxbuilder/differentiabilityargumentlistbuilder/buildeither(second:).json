{"abstract":[{"type":"text","text":"With buildEither(first:), enables support for ‘if-else’ and ‘switch’"},{"type":"text","text":" "},{"type":"text","text":"statements by folding conditional results into a single result."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildEither"},{"kind":"text","text":"("},{"kind":"externalParam","text":"second"},{"kind":"text","text":" "},{"kind":"internalParam","text":"component"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","text":"Component"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","text":"Component"}],"platforms":["macOS"]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder\/buildEither(second:)"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder\/ListBuilder-Implementations"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/swiftsyntaxbuilder\/differentiabilityargumentlistbuilder\/buildeither(second:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"buildEither(second:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildEither"},{"kind":"text","text":"("},{"text":"second","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"symbolKind":"method","externalID":"s:18SwiftSyntaxBuilder04ListC0PAAE11buildEither6secondSay11FinalResult_7ElementQZGAI_tFZ::SYNTHESIZED::s:18SwiftSyntaxBuilder029DifferentiabilityArgumentListC0V","roleHeading":"Type Method","modules":[{"name":"SwiftSyntaxBuilder"}],"extendedModule":"SwiftSyntaxBuilder","role":"symbol"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/DifferentiabilityArgumentListBuilder":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DifferentiabilityArgumentListBuilder"}],"title":"DifferentiabilityArgumentListBuilder","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder","navigatorTitle":[{"kind":"identifier","text":"DifferentiabilityArgumentListBuilder"}],"abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/differentiabilityargumentlistbuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/DifferentiabilityArgumentListBuilder/buildEither(second:)":{"url":"\/documentation\/swiftsyntaxbuilder\/differentiabilityargumentlistbuilder\/buildeither(second:)","title":"buildEither(second:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildEither"},{"kind":"text","text":"("},{"text":"second","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder\/buildEither(second:)","type":"topic","abstract":[{"text":"With buildEither(first:), enables support for ‘if-else’ and ‘switch’","type":"text"},{"type":"text","text":" "},{"text":"statements by folding conditional results into a single result.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/DifferentiabilityArgumentListBuilder/ListBuilder-Implementations":{"kind":"article","type":"topic","title":"ListBuilder Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/DifferentiabilityArgumentListBuilder\/ListBuilder-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/swiftsyntaxbuilder\/differentiabilityargumentlistbuilder\/listbuilder-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ListBuilder/Component":{"url":"\/documentation\/swiftsyntaxbuilder\/listbuilder\/component","abstract":[{"type":"text","text":"The type of a partial result, which will be carried through all of the"},{"type":"text","text":" "},{"type":"text","text":"build methods."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Component"}],"type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Component"}],"title":"ListBuilder.Component","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component"}}}