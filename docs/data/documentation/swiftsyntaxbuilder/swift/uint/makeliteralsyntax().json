{"abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/IntegerLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","kind":"typeIdentifier","text":"IntegerLiteralExprSyntax"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"text":" ","type":"text"},{"text":"be turned into syntax trees using ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","type":"reference"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Or interpolated into a Swift source code literal with the syntax","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\\(literal: <value>)"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"]}]}],"variants":[{"paths":["\/documentation\/swiftsyntaxbuilder\/swift\/uint\/makeliteralsyntax()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/UInt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/UInt\/ExpressibleByLiteralSyntax-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/UInt\/makeLiteralSyntax()"},"metadata":{"modules":[{"name":"SwiftSyntaxBuilder"}],"title":"makeLiteralSyntax()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BinaryInteger"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","kind":"typeIdentifier","text":"IntegerLiteralExprSyntax"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0PAASzRzrlE04makefB00aB007Integerf4ExprB0VyF::SYNTHESIZED::s:Su","extendedModule":"SwiftSyntaxBuilder"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/UInt/ExpressibleByLiteralSyntax-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/swiftsyntaxbuilder\/swift\/uint\/expressiblebyliteralsyntax-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/UInt\/ExpressibleByLiteralSyntax-Implementations","type":"topic","title":"ExpressibleByLiteralSyntax Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/IntegerLiteralExprSyntax":{"title":"IntegerLiteralExprSyntax","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralExprSyntax"}],"url":"\/documentation\/swiftsyntax\/integerliteralexprsyntax","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/IntegerLiteralExprSyntax","navigatorTitle":[{"text":"IntegerLiteralExprSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/UInt/makeLiteralSyntax()":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/UInt\/makeLiteralSyntax()","title":"makeLiteralSyntax()","url":"\/documentation\/swiftsyntaxbuilder\/swift\/uint\/makeliteralsyntax()","type":"topic","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"IntegerLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/UInt":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/UInt","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","kind":"symbol","title":"UInt","url":"\/documentation\/swiftsyntaxbuilder\/swift\/uint","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"UInt","kind":"identifier","preciseIdentifier":"s:Su"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"literal"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P","text":"ExpressibleByLiteralSyntax"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"type":"codeVoice","code":"Array<String>"},{"text":" will result in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an array literal containing string literals:"}],"kind":"symbol","role":"symbol","title":"init(literal:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift":{"title":"Swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","role":"collection","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swift","kind":"symbol"}}}