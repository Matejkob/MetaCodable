{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Int32","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Int32\/ExpressibleByLiteralSyntax-Implementations"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Int32\/makeLiteralSyntax()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/swift\/int32\/makeliteralsyntax()"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"IntegerLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/IntegerLiteralExprSyntax"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is usually not called directly. Instead, conforming types can","type":"text"},{"type":"text","text":" "},{"text":"be turned into syntax trees using ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","isActive":true},{"text":":","type":"text"}]},{"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"type":"text","text":" "},{"code":"\\(literal: <value>)","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"]}]}],"metadata":{"externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0PAASzRzrlE04makefB00aB007Integerf4ExprB0VyF::SYNTHESIZED::s:s5Int32V","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","text":"IntegerLiteralExprSyntax","kind":"typeIdentifier"}],"extendedModule":"SwiftSyntaxBuilder","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"SwiftSyntaxBuilder"}],"title":"makeLiteralSyntax()","symbolKind":"method","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"BinaryInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Int32/makeLiteralSyntax()":{"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/swiftsyntaxbuilder\/swift\/int32\/makeliteralsyntax()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Int32\/makeLiteralSyntax()","role":"symbol","kind":"symbol","title":"makeLiteralSyntax()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","kind":"typeIdentifier","text":"IntegerLiteralExprSyntax"}],"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"literal"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P","text":"ExpressibleByLiteralSyntax"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"type":"codeVoice","code":"Array<String>"},{"text":" will result in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an array literal containing string literals:"}],"kind":"symbol","role":"symbol","title":"init(literal:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/IntegerLiteralExprSyntax":{"title":"IntegerLiteralExprSyntax","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralExprSyntax"}],"url":"\/documentation\/swiftsyntax\/integerliteralexprsyntax","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/IntegerLiteralExprSyntax","navigatorTitle":[{"text":"IntegerLiteralExprSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift":{"title":"Swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","role":"collection","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swift","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Int32/ExpressibleByLiteralSyntax-Implementations":{"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swift\/int32\/expressiblebyliteralsyntax-implementations","kind":"article","role":"collectionGroup","title":"ExpressibleByLiteralSyntax Implementations","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Int32\/ExpressibleByLiteralSyntax-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Int32":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Int32","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"role":"symbol","title":"Int32","kind":"symbol","abstract":[],"url":"\/documentation\/swiftsyntaxbuilder\/swift\/int32","type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"}}}