{"abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"ExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","preciseIdentifier":"s:11SwiftSyntax04ExprB0V"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"This method is usually not called directly. Instead, conforming types can","type":"text"},{"type":"text","text":" "},{"text":"be turned into syntax trees using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Or interpolated into a Swift source code literal with the syntax","type":"text"},{"text":" ","type":"text"},{"code":"\\(literal: <value>)","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"]}],"kind":"content"}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Float","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Float\/ExpressibleByLiteralSyntax-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/swift\/float\/makeliteralsyntax()"]}],"metadata":{"roleHeading":"Instance Method","title":"makeLiteralSyntax()","externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0PAASFRzs25LosslessStringConvertibleRzrlE04makefB00aB004ExprB0VyF::SYNTHESIZED::s:Sf","extendedModule":"SwiftSyntaxBuilder","role":"symbol","modules":[{"name":"SwiftSyntaxBuilder"}],"symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"LosslessStringConvertible"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax","kind":"typeIdentifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Float\/makeLiteralSyntax()"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"literal"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P","text":"ExpressibleByLiteralSyntax"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"type":"codeVoice","code":"Array<String>"},{"text":" will result in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an array literal containing string literals:"}],"kind":"symbol","role":"symbol","title":"init(literal:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Float/makeLiteralSyntax()":{"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"url":"\/documentation\/swiftsyntaxbuilder\/swift\/float\/makeliteralsyntax()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","kind":"typeIdentifier","text":"ExprSyntax"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"LosslessStringConvertible"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"makeLiteralSyntax()","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Float\/makeLiteralSyntax()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Float":{"title":"Float","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Float"}],"url":"\/documentation\/swiftsyntaxbuilder\/swift\/float","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Float","type":"topic","kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float","preciseIdentifier":"s:Sf"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift":{"title":"Swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","role":"collection","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swift","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntax":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","title":"ExprSyntax","url":"\/documentation\/swiftsyntax\/exprsyntax","type":"topic","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Float/ExpressibleByLiteralSyntax-Implementations":{"role":"collectionGroup","url":"\/documentation\/swiftsyntaxbuilder\/swift\/float\/expressiblebyliteralsyntax-implementations","type":"topic","abstract":[],"title":"ExpressibleByLiteralSyntax Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Float\/ExpressibleByLiteralSyntax-Implementations","kind":"article"}}}