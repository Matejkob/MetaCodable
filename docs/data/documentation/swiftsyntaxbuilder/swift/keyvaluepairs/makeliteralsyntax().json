{"metadata":{"title":"makeLiteralSyntax()","externalID":"s:s13KeyValuePairsV18SwiftSyntaxBuilderAC020ExpressibleByLiteralE0RzAcDR_rlE04makeiE00dE0014DictionaryExprE0VyF","roleHeading":"Instance Method","role":"symbol","extendedModule":"Swift","modules":[{"name":"SwiftSyntaxBuilder","relatedModules":["Swift"]}],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"ExpressibleByLiteralSyntax","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"text":"DictionaryExprSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014DictionaryExprB0V"}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/KeyValuePairs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/KeyValuePairs\/ExpressibleByLiteralSyntax-Implementations"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/swift\/keyvaluepairs\/makeliteralsyntax()"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/KeyValuePairs\/makeLiteralSyntax()"},"abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"DictionaryExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DictionaryExprSyntax","preciseIdentifier":"s:11SwiftSyntax014DictionaryExprB0V","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"text":" ","type":"text"},{"text":"be turned into syntax trees using ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)"},{"text":":","type":"text"}]},{"syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"type":"codeListing"},{"inlineContent":[{"text":"Or interpolated into a Swift source code literal with the syntax","type":"text"},{"type":"text","text":" "},{"code":"\\(literal: <value>)","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"]}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift":{"title":"Swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","role":"collection","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swift","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/KeyValuePairs":{"url":"\/documentation\/swiftsyntaxbuilder\/swift\/keyvaluepairs","title":"KeyValuePairs","abstract":[],"kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyValuePairs"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/KeyValuePairs","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:s13KeyValuePairsV","text":"KeyValuePairs"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/KeyValuePairs/ExpressibleByLiteralSyntax-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/KeyValuePairs\/ExpressibleByLiteralSyntax-Implementations","type":"topic","title":"ExpressibleByLiteralSyntax Implementations","url":"\/documentation\/swiftsyntaxbuilder\/swift\/keyvaluepairs\/expressiblebyliteralsyntax-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"literal"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P","text":"ExpressibleByLiteralSyntax"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"type":"codeVoice","code":"Array<String>"},{"text":" will result in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an array literal containing string literals:"}],"kind":"symbol","role":"symbol","title":"init(literal:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DictionaryExprSyntax":{"kind":"symbol","title":"DictionaryExprSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DictionaryExprSyntax","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A dictionary literal"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DictionaryExprSyntax","url":"\/documentation\/swiftsyntax\/dictionaryexprsyntax","navigatorTitle":[{"kind":"identifier","text":"DictionaryExprSyntax"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/KeyValuePairs/makeLiteralSyntax()":{"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/KeyValuePairs\/makeLiteralSyntax()","title":"makeLiteralSyntax()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"ExpressibleByLiteralSyntax","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"text":"DictionaryExprSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014DictionaryExprB0V"}],"url":"\/documentation\/swiftsyntaxbuilder\/swift\/keyvaluepairs\/makeliteralsyntax()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"}}}