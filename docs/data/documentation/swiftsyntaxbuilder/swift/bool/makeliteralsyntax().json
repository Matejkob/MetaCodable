{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool\/makeLiteralSyntax()"},"kind":"symbol","abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"variants":[{"paths":["\/documentation\/swiftsyntaxbuilder\/swift\/bool\/makeliteralsyntax()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"makeLiteralSyntax()","extendedModule":"Swift","role":"symbol","externalID":"s:Sb18SwiftSyntaxBuilderE011makeLiteralB00aB007Booleane4ExprB0VyF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax018BooleanLiteralExprB0V","text":"BooleanLiteralExprSyntax","kind":"typeIdentifier"}],"modules":[{"name":"SwiftSyntaxBuilder","relatedModules":["Swift"]}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool\/ExpressibleByLiteralSyntax-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"BooleanLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018BooleanLiteralExprB0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"text":" ","type":"text"},{"type":"text","text":"be turned into syntax trees using "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","type":"reference"},{"type":"text","text":":"}]},{"syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\\(literal: <value>)"},{"type":"text","text":":"}]},{"syntax":null,"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"type":"codeListing"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift":{"title":"Swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","role":"collection","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swift","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Bool":{"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swift\/bool","navigatorTitle":[{"text":"Bool","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bool","kind":"identifier","preciseIdentifier":"s:Sb"}],"abstract":[],"kind":"symbol","role":"symbol","title":"Bool"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Bool/ExpressibleByLiteralSyntax-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool\/ExpressibleByLiteralSyntax-Implementations","abstract":[],"title":"ExpressibleByLiteralSyntax Implementations","type":"topic","kind":"article","url":"\/documentation\/swiftsyntaxbuilder\/swift\/bool\/expressiblebyliteralsyntax-implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanLiteralExprSyntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"kind":"symbol","abstract":[],"title":"BooleanLiteralExprSyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"literal"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P","text":"ExpressibleByLiteralSyntax"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"type":"codeVoice","code":"Array<String>"},{"text":" will result in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an array literal containing string literals:"}],"kind":"symbol","role":"symbol","title":"init(literal:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Bool/makeLiteralSyntax()":{"url":"\/documentation\/swiftsyntaxbuilder\/swift\/bool\/makeliteralsyntax()","type":"topic","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"title":"makeLiteralSyntax()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool\/makeLiteralSyntax()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"BooleanLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018BooleanLiteralExprB0V","kind":"typeIdentifier"}],"kind":"symbol"}}}