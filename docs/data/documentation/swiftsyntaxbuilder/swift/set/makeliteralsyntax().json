{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"method","title":"makeLiteralSyntax()","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"SwiftSyntaxBuilder"}],"roleHeading":"Instance Method","extendedModule":"Swift","externalID":"s:Sh18SwiftSyntaxBuilderAA020ExpressibleByLiteralB0RzrlE04makefB00aB009ArrayExprB0VyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax09ArrayExprB0V","text":"ArrayExprSyntax","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"ExpressibleByLiteralSyntax","type":"codeVoice"},{"type":"text","text":"."}]}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Set\/makeLiteralSyntax()"},"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ArrayExprSyntax","preciseIdentifier":"s:11SwiftSyntax09ArrayExprB0V","text":"ArrayExprSyntax","kind":"typeIdentifier"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"text":" ","type":"text"},{"type":"text","text":"be turned into syntax trees using "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","type":"reference","isActive":true},{"type":"text","text":":"}]},{"syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"text":" ","type":"text"},{"code":"\\(literal: <value>)","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Set","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Set\/ExpressibleByLiteralSyntax-Implementations"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/swiftsyntaxbuilder\/swift\/set\/makeliteralsyntax()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift":{"title":"Swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","role":"collection","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swift","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Set/makeLiteralSyntax()":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Set\/makeLiteralSyntax()","url":"\/documentation\/swiftsyntaxbuilder\/swift\/set\/makeliteralsyntax()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"ArrayExprSyntax","preciseIdentifier":"s:11SwiftSyntax09ArrayExprB0V","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"makeLiteralSyntax()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Set/ExpressibleByLiteralSyntax-Implementations":{"title":"ExpressibleByLiteralSyntax Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Set\/ExpressibleByLiteralSyntax-Implementations","abstract":[],"url":"\/documentation\/swiftsyntaxbuilder\/swift\/set\/expressiblebyliteralsyntax-implementations","kind":"article"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ArrayExprSyntax":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ArrayExprSyntax","role":"symbol","url":"\/documentation\/swiftsyntax\/arrayexprsyntax","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayExprSyntax"}],"navigatorTitle":[{"text":"ArrayExprSyntax","kind":"identifier"}],"title":"ArrayExprSyntax","abstract":[{"type":"text","text":"An array literal."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Set":{"title":"Set","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:Sh","text":"Set"}],"navigatorTitle":[{"text":"Set","kind":"identifier"}],"url":"\/documentation\/swiftsyntaxbuilder\/swift\/set","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Set","kind":"symbol","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"literal"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P","text":"ExpressibleByLiteralSyntax"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"type":"codeVoice","code":"Array<String>"},{"text":" will result in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an array literal containing string literals:"}],"kind":"symbol","role":"symbol","title":"init(literal:)"}}}