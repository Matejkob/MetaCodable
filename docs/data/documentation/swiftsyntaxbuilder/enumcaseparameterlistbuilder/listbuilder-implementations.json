{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder"]]},"kind":"article","metadata":{"role":"collectionGroup","title":"ListBuilder Implementations","modules":[{"name":"SwiftSyntaxBuilder"}],"roleHeading":"API Collection"},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/ListBuilder-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildArray(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildBlock(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildEither(first:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildEither(second:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildExpression(_:)-2fvzi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildExpression(_:)-37ff0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildExpression(_:)-3wpr3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildFinalResult(_:)-23i9s","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildFinalResult(_:)-9qiuz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildLimitedAvailability(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildOptional(_:)"],"anchor":"Type-Methods"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildEither(second:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"second"},{"text":": ","kind":"text"},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}],"title":"buildEither(second:)","kind":"symbol","abstract":[{"text":"With buildEither(first:), enables support for ‘if-else’ and ‘switch’","type":"text"},{"type":"text","text":" "},{"text":"statements by folding conditional results into a single result.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildeither(second:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildEither(second:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder":{"title":"EnumCaseParameterListBuilder","url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnumCaseParameterListBuilder"}],"role":"symbol","abstract":[],"navigatorTitle":[{"text":"EnumCaseParameterListBuilder","kind":"identifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildFinalResult(_:)-23i9s":{"title":"buildFinalResult(_:)","abstract":[{"text":"This will be called on the partial result from the outermost","type":"text"},{"type":"text","text":" "},{"type":"text","text":"block statement to produce the final returned result."}],"kind":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildfinalresult(_:)-23i9s","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"buildFinalResult","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P11FinalResultQa","text":"FinalResult","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildFinalResult(_:)-23i9s"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildExpression(_:)-2fvzi":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildExpression"},{"kind":"text","text":"("},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P10Expressiona","text":"Expression","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}],"abstract":[],"url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildexpression(_:)-2fvzi","type":"topic","title":"buildExpression(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildExpression(_:)-2fvzi","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildEither(first:)":{"title":"buildEither(first:)","kind":"symbol","abstract":[{"type":"text","text":"With buildEither(second:), enables support for ‘if-else’ and ‘switch’"},{"text":" ","type":"text"},{"type":"text","text":"statements by folding conditional results into a single result."}],"url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildeither(first:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildEither(first:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildEither"},{"kind":"text","text":"("},{"text":"first","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildBlock(_:)":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"buildBlock","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"text":"...) -> ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Required by every result builder to build combined results from"},{"text":" ","type":"text"},{"text":"statement blocks.","type":"text"}],"url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildblock(_:)","type":"topic","title":"buildBlock(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildBlock(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildArray(_:)":{"abstract":[{"text":"Enables support for ‘for..in’ loops by combining the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"results of all iterations into a single result."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildArray(_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildArray"},{"text":"([","kind":"text"},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}],"url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildarray(_:)","role":"symbol","title":"buildArray(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildExpression(_:)-3wpr3":{"url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildexpression(_:)-3wpr3","abstract":[],"kind":"symbol","type":"topic","title":"buildExpression(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildExpression(_:)-3wpr3","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buildExpression","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P11FinalResultQa","text":"FinalResult"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildExpression(_:)-37ff0":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildExpression(_:)-37ff0","url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildexpression(_:)-37ff0","kind":"symbol","type":"topic","title":"buildExpression(_:)","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildExpression"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P10Expressiona"},{"kind":"text","text":") -> "},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildLimitedAvailability(_:)":{"title":"buildLimitedAvailability(_:)","kind":"symbol","abstract":[{"text":"This will be called on the partial result of an ‘if’","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"#available’ block to allow the result builder to erase type"},{"type":"text","text":" "},{"text":"information.","type":"text"}],"url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildlimitedavailability(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildLimitedAvailability(_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildLimitedAvailability"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildFinalResult(_:)-9qiuz":{"role":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildfinalresult(_:)-9qiuz","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildFinalResult(_:)-9qiuz","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"FinalResult.Element"},{"text":" conforms to ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"This will be called on the partial result from the outermost"},{"text":" ","type":"text"},{"type":"text","text":"block statement to produce the final returned result."}],"title":"buildFinalResult(_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildFinalResult"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P11FinalResultQa","text":"FinalResult","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseParameterListBuilder/buildOptional(_:)":{"title":"buildOptional(_:)","kind":"symbol","abstract":[{"text":"Enables support for ","type":"text"},{"code":"if","type":"codeVoice"},{"type":"text","text":" statements that do not have an "},{"code":"else","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/swiftsyntaxbuilder\/enumcaseparameterlistbuilder\/buildoptional(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buildOptional","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","text":"Component"},{"text":"?) -> ","kind":"text"},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseParameterListBuilder\/buildOptional(_:)"}}}