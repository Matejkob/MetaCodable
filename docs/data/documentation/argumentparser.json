{"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"anchor":"Protocols","title":"Protocols","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/AsyncMainProtocol","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/AsyncParsableCommand","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ExpressibleByArgument","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ParsableArguments","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ParsableCommand"]},{"anchor":"Structures","title":"Structures","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Argument","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentVisibility","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CleanExit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CommandConfiguration","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CommandGroup","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CompletionKind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CompletionShell","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ExitCode","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Option","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/OptionGroup","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ValidationError"],"generated":true},{"anchor":"Extended-Modules","generated":true,"title":"Extended Modules","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Swift"]}],"kind":"symbol","metadata":{"title":"ArgumentParser","externalID":"ArgumentParser","symbolKind":"module","role":"collection","roleHeading":"Framework","modules":[{"name":"ArgumentParser"}]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/argumentparser"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentHelp":{"title":"ArgumentHelp","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentHelp","kind":"identifier"}],"url":"\/documentation\/argumentparser\/argumenthelp","abstract":[{"type":"text","text":"Help information for a command-line argument."}],"navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagExclusivity":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagExclusivity"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","role":"symbol","title":"FlagExclusivity","navigatorTitle":[{"text":"FlagExclusivity","kind":"identifier"}],"abstract":[{"type":"text","text":"The options for treating enumeration-based flags as exclusive."}],"url":"\/documentation\/argumentparser\/flagexclusivity","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Argument":{"kind":"symbol","url":"\/documentation\/argumentparser\/argument","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Argument","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Argument","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper that represents a positional command-line argument."}],"navigatorTitle":[{"kind":"identifier","text":"Argument"}],"title":"Argument"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/AsyncMainProtocol":{"deprecated":true,"type":"topic","url":"\/documentation\/argumentparser\/asyncmainprotocol","abstract":[{"type":"text","text":"A type that can designate an "},{"type":"codeVoice","code":"AsyncParsableCommand"},{"type":"text","text":" as the program’s"},{"type":"text","text":" "},{"type":"text","text":"entry point."}],"title":"AsyncMainProtocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncMainProtocol"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncMainProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/AsyncMainProtocol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ParsableArguments":{"role":"symbol","kind":"symbol","type":"topic","title":"ParsableArguments","abstract":[{"text":"A type that can be parsed from a program’s command-line arguments.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ParsableArguments","url":"\/documentation\/argumentparser\/parsablearguments","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParsableArguments","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ParsableArguments"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"abstract":[{"text":"A property wrapper that represents a command-line flag.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","title":"Flag","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flag"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CommandGroup":{"kind":"symbol","abstract":[{"type":"text","text":"A set of commands grouped together under a common name."}],"navigatorTitle":[{"kind":"identifier","text":"CommandGroup"}],"url":"\/documentation\/argumentparser\/commandgroup","role":"symbol","title":"CommandGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CommandGroup","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommandGroup"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CleanExit":{"kind":"symbol","url":"\/documentation\/argumentparser\/cleanexit","abstract":[{"type":"text","text":"An error type that represents a clean (i.e. non-error state) exit of the"},{"type":"text","text":" "},{"type":"text","text":"utility."}],"type":"topic","role":"symbol","title":"CleanExit","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CleanExit"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CleanExit","navigatorTitle":[{"text":"CleanExit","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CompletionShell":{"navigatorTitle":[{"text":"CompletionShell","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CompletionShell","abstract":[{"text":"A shell for which the parser can generate a completion script.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompletionShell"}],"url":"\/documentation\/argumentparser\/completionshell","kind":"symbol","role":"symbol","title":"CompletionShell"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagInversion":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FlagInversion","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","role":"symbol","title":"FlagInversion","navigatorTitle":[{"kind":"identifier","text":"FlagInversion"}],"abstract":[{"text":"The options for converting a Boolean flag into a ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"url":"\/documentation\/argumentparser\/flaginversion","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CompletionKind":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CompletionKind","url":"\/documentation\/argumentparser\/completionkind","abstract":[{"text":"The type of completion to use for an argument or option.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CompletionKind","kind":"identifier"}],"title":"CompletionKind","navigatorTitle":[{"text":"CompletionKind","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/OptionGroup":{"type":"topic","title":"OptionGroup","abstract":[{"text":"A wrapper that transparently includes a parsable type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/OptionGroup","url":"\/documentation\/argumentparser\/optiongroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OptionGroup","kind":"identifier"}],"navigatorTitle":[{"text":"OptionGroup","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Swift":{"title":"Swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Swift","url":"\/documentation\/argumentparser\/swift","type":"topic","abstract":[],"role":"collection","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ValidationError":{"type":"topic","url":"\/documentation\/argumentparser\/validationerror","abstract":[{"type":"text","text":"An error type that is presented to the user as an error with parsing their"},{"type":"text","text":" "},{"type":"text","text":"command-line input."}],"title":"ValidationError","kind":"symbol","navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValidationError"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ValidationError"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueParsingStrategy"}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy","abstract":[{"text":"The strategy to use when parsing a single value from ","type":"text"},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy","title":"SingleValueParsingStrategy","navigatorTitle":[{"kind":"identifier","text":"SingleValueParsingStrategy"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ExitCode":{"title":"ExitCode","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"ExitCode","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ExitCode","type":"topic","url":"\/documentation\/argumentparser\/exitcode","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExitCode","kind":"identifier"}],"abstract":[{"type":"text","text":"An error type that only includes an exit code."}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy":{"abstract":[{"text":"The strategy to use when parsing multiple values from ","type":"text"},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"type":"text","text":" "},{"type":"text","text":"array."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","url":"\/documentation\/argumentparser\/arrayparsingstrategy","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayParsingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"type":"topic","title":"ArrayParsingStrategy"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ExpressibleByArgument":{"title":"ExpressibleByArgument","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressibleByArgument"}],"abstract":[{"text":"A type that can be expressed as a command-line argument.","type":"text"}],"url":"\/documentation\/argumentparser\/expressiblebyargument","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByArgument"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ExpressibleByArgument","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentVisibility":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentVisibility","title":"ArgumentVisibility","navigatorTitle":[{"kind":"identifier","text":"ArgumentVisibility"}],"url":"\/documentation\/argumentparser\/argumentvisibility","type":"topic","abstract":[{"type":"text","text":"Visibility level of an argument’s help."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArgumentVisibility","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Option":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Option","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Option"}],"url":"\/documentation\/argumentparser\/option","abstract":[{"text":"A property wrapper that represents a command-line option.","type":"text"}],"title":"Option","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Option"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ParsableCommand":{"navigatorTitle":[{"kind":"identifier","text":"ParsableCommand"}],"abstract":[{"type":"text","text":"A type that can be executed as part of a nested tree of commands."}],"type":"topic","url":"\/documentation\/argumentparser\/parsablecommand","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ParsableCommand","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsableCommand","kind":"identifier"}],"title":"ParsableCommand","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CommandConfiguration":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandConfiguration"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CommandConfiguration","title":"CommandConfiguration","navigatorTitle":[{"text":"CommandConfiguration","kind":"identifier"}],"url":"\/documentation\/argumentparser\/commandconfiguration","role":"symbol","abstract":[{"type":"text","text":"The configuration for a command."}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"type":"topic","kind":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","navigatorTitle":[{"kind":"identifier","text":"ArgumentArrayParsingStrategy"}],"title":"ArgumentArrayParsingStrategy","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"abstract":[{"text":"The strategy to use when parsing multiple values from positional arguments","type":"text"},{"type":"text","text":" "},{"text":"into an array.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/NameSpecification":{"title":"NameSpecification","navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","role":"symbol","abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"text":" ","type":"text"},{"type":"text","text":"label."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"NameSpecification","kind":"identifier"}],"type":"topic","url":"\/documentation\/argumentparser\/namespecification","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/AsyncParsableCommand":{"navigatorTitle":[{"text":"AsyncParsableCommand","kind":"identifier"}],"title":"AsyncParsableCommand","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncParsableCommand"}],"abstract":[{"text":"A type that can be executed asynchronously, as part of a nested tree of","type":"text"},{"text":" ","type":"text"},{"text":"commands.","type":"text"}],"url":"\/documentation\/argumentparser\/asyncparsablecommand","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/AsyncParsableCommand"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/EnumerableFlag":{"abstract":[{"text":"A type that represents the different possible flags to be used by a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Flag"},{"text":" property.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumerableFlag"}],"navigatorTitle":[{"text":"EnumerableFlag","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag","type":"topic","url":"\/documentation\/argumentparser\/enumerableflag","title":"EnumerableFlag"}}}