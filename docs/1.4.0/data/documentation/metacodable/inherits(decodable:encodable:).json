{"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"generated":true,"title":"Strategies","anchor":"Strategies","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:forErrors:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"]}],"abstract":[{"text":"Indicates whether super class conforms to ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" or not."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)"},"metadata":{"roleHeading":"Macro","modules":[{"name":"MetaCodable"}],"role":"symbol","symbolKind":"macro","title":"Inherits(decodable:encodable:)","platforms":[{"deprecated":false,"introducedAt":"5.9","name":"Swift","beta":false,"unavailable":false}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Inherits","kind":"identifier"},{"kind":"text","text":"("},{"text":"decodable","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"encodable"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"externalID":"s:11MetaCodable8Inherits9decodable9encodableySb_Sbtcfm"},"kind":"symbol","variants":[{"paths":["\/documentation\/metacodable\/inherits(decodable:encodable:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inherits","kind":"identifier"},{"kind":"text","text":"("},{"text":"decodable","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"text":"encodable","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"decodable","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether super class conforms to "},{"type":"codeVoice","code":"Decodable"},{"text":".","type":"text"}]}]},{"name":"encodable","content":[{"type":"paragraph","inlineContent":[{"text":"Whether super class conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"By default, "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference"},{"type":"text","text":" assumes class inherits "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" "},{"text":"or ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" conformance if it doesn’t receive protocol needs"},{"text":" ","type":"text"},{"type":"text","text":"to be conformed from the compiler. Using this macro, it can be explicitly"},{"type":"text","text":" "},{"type":"text","text":"indicated that the class doesn’t inherit conformance in such cases."}],"type":"paragraph"},{"inlineContent":[{"text":"Following code indicates ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","isActive":true,"type":"reference"},{"text":" that ","type":"text"},{"code":"Item","type":"codeVoice"},{"type":"text","text":" class doesn’t"},{"text":" ","type":"text"},{"type":"text","text":"inherit conformance:"}],"type":"paragraph"},{"code":["@Codable","@Model","@Inherits(decodable: false, encodable: false)","final class Item {","    @CodedAt(\"timestamp\")","    var timestamp: Date? = nil","","    init() { }","}"],"type":"codeListing","syntax":"swift"},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"text":"This macro on its own only validates if attached declaration","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is a class declaration. "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"type":"text","text":" macro uses this macro"},{"type":"text","text":" "},{"text":"when generating final implementations.","type":"text"}],"type":"paragraph"}]}]}],"references":{"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"type":"topic","url":"\/documentation\/metacodable\/ignoredecoding()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from decoding."}],"title":"IgnoreDecoding()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()"},"doc://MetaCodable/documentation/MetaCodable/UnTagged()":{"type":"topic","url":"\/documentation\/metacodable\/untagged()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Indicates the cases of enum lack distinct identifier."}],"title":"UnTagged()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnTagged"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"type":"topic","url":"\/documentation\/metacodable\/default(_:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Provides a "},{"code":"default","type":"codeVoice"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"type":"text","text":"when not initialized explicitly in memberwise initializer(s)."}],"title":"Default(_:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-7toka":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"if","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka","abstract":[{"text":"Indicates the field needs to be encoded only if provided condition","type":"text"},{"type":"text","text":" "},{"text":"is not satisfied.","type":"text"}],"type":"topic","role":"symbol","title":"IgnoreEncoding(if:)","url":"\/documentation\/metacodable\/ignoreencoding(if:)-7toka","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"type":"topic","url":"\/documentation\/metacodable\/ignoreencoding()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from encoding."}],"title":"IgnoreEncoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"title":"CodedIn(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"CodedIn","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"type":"topic","role":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"text":" ","type":"text"},{"text":"container ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided with field name as final"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}]},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"type":"topic","url":"\/documentation\/metacodable\/contentat(_:_:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"type":"text","text":" "},{"text":"to be decoded\/encoded at the ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"title":"ContentAt(_:_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ContentAt","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-1iuvv":{"type":"topic","url":"\/documentation\/metacodable\/ignoreencoding(if:)-1iuvv","role":"symbol","kind":"symbol","abstract":[{"text":"Indicates the field\/case needs to be encoded only if provided condition","type":"text"},{"text":" ","type":"text"},{"text":"is not satisfied.","type":"text"}],"title":"IgnoreEncoding(if:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"<each ","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"if","kind":"externalParam"},{"kind":"text","text":": (repeat each "},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv"},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","abstract":[{"type":"text","text":"Provides values to be used for an enum-case instead of using case name or"},{"type":"text","text":" "},{"text":"additional variable ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":"s.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"...)"}],"kind":"symbol","type":"topic","title":"CodedAs(_:_:)","role":"symbol","url":"\/documentation\/metacodable\/codedas(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"type":"topic","url":"\/documentation\/metacodable\/codable()","role":"symbol","kind":"symbol","abstract":[{"text":"Generate ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"enum"},{"text":", ","type":"text"},{"code":"actor","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"protocol","type":"codeVoice"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"text":" ","type":"text"},{"type":"text","text":"declarations."}],"title":"Codable()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Codable","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}],"kind":"symbol","type":"topic","title":"CodedAt(_:)","role":"symbol","url":"\/documentation\/metacodable\/codedat(_:)"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"text":" for the field names\/associated value label will be","type":"text"},{"type":"text","text":" "},{"text":"of the provided case format.","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","title":"CodingKeys(_:)","role":"symbol","url":"\/documentation\/metacodable\/codingkeys(_:)"},"doc://MetaCodable/documentation/MetaCodable":{"url":"\/documentation\/metacodable","kind":"symbol","abstract":[{"type":"text","text":"Supercharge "},{"type":"codeVoice","code":"Swift"},{"text":"’s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations with macros."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","title":"MetaCodable","type":"topic","role":"collection"},"doc://MetaCodable/documentation/MetaCodable/Inherits(decodable:encodable:)":{"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"Inherits","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"decodable"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"encodable","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)","abstract":[{"text":"Indicates whether super class conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" or not.","type":"text"}],"type":"topic","role":"symbol","title":"Inherits(decodable:encodable:)","url":"\/documentation\/metacodable\/inherits(decodable:encodable:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"title":"CodedAs()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">()","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/metacodable\/codedas()","abstract":[{"type":"text","text":"Provides the identifier actual type for internally\/adjacently tagged enums"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCoding","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from decoding and encoding."}],"type":"topic","role":"symbol","title":"IgnoreCoding()","url":"\/documentation\/metacodable\/ignorecoding()","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Default(ifMissing:forErrors:)":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"ifMissing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"forErrors","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:forErrors:)","abstract":[{"type":"text","text":"Provides different "},{"type":"codeVoice","code":"default"},{"text":" values to be used for missing value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and decoding errors."}],"type":"topic","role":"symbol","title":"Default(ifMissing:forErrors:)","url":"\/documentation\/metacodable\/default(ifmissing:forerrors:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Default(ifMissing:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:)","abstract":[{"type":"text","text":"Provides a "},{"code":"default","type":"codeVoice"},{"type":"text","text":" value to be used when value is missing"},{"text":" ","type":"text"},{"type":"text","text":"and when not initialized explicitly in memberwise initializer(s)."}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"ifMissing","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","title":"Default(ifMissing:)","role":"symbol","url":"\/documentation\/metacodable\/default(ifmissing:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"text":" ","type":"text"},{"text":"the attached type\/enum-case will be ignored for decoding\/encoding.","type":"text"}],"type":"topic","role":"symbol","title":"IgnoreCodingInitialized()","url":"\/documentation\/metacodable\/ignorecodinginitialized()","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"type":"topic","url":"\/documentation\/metacodable\/codedby(_:)","role":"symbol","kind":"symbol","abstract":[{"text":"Indicates the field or enum\/protocol identifier needs to be decoded and","type":"text"},{"text":" ","type":"text"},{"text":"encoded by the provided ","type":"text"},{"type":"codeVoice","code":"helper"},{"text":" instance.","type":"text"}],"title":"CodedBy(_:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodedBy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)"}}}