{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext\/lexicalContext-30zha"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lexicalContext","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"kind":"text","text":"] { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lexical contexts will have many of their details stripped out to prevent"},{"text":" ","type":"text"},{"text":"macros from having visibility into unrelated code. For example, functions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and closures have their bodies removed, types and extensions have their"},{"type":"text","text":" "},{"type":"text","text":"member lists emptied, and properties and subscripts have their accessor"},{"type":"text","text":" "},{"type":"text","text":"blocks removed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first entry in the array is the innermost context. For attached"},{"type":"text","text":" "},{"text":"macros, this is often the declaration to which the macro is attached.","type":"text"},{"text":" ","type":"text"},{"text":"This array can be empty if there is no context, for example when a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"freestanding macro is used at file scope."}]}],"kind":"content"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"`MacroExpansionContext` conformance must implement `lexicalContext`"}],"type":"paragraph"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext\/lexicalContext-478jr"},"abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"text":"starting from the syntax node at which the macro expansion occurs","type":"text"},{"type":"text","text":" "},{"text":"and containing all “context” nodes including functions, closures, types,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"properties, subscripts, and extensions."}],"sections":[],"metadata":{"roleHeading":"Instance Property","title":"lexicalContext","externalID":"s:17SwiftSyntaxMacros21MacroExpansionContextPAAE07lexicalF0Say0aB00B0VGvp","extendedModule":"SwiftSyntaxMacros","role":"symbol","modules":[{"name":"SwiftSyntaxMacros"}],"symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"lexicalContext","kind":"identifier"},{"kind":"text","text":": ["},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"]"}],"platforms":[]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxmacros\/macroexpansioncontext\/lexicalcontext-478jr"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros":{"role":"collection","title":"SwiftSyntaxMacros","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxmacros","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/MacroExpansionContext/lexicalContext-478jr":{"url":"\/documentation\/swiftsyntaxmacros\/macroexpansioncontext\/lexicalcontext-478jr","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext\/lexicalContext-478jr","abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"starting from the syntax node at which the macro expansion occurs"},{"type":"text","text":" "},{"text":"and containing all “context” nodes including functions, closures, types,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"properties, subscripts, and extensions."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lexicalContext"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}],"deprecated":true,"title":"lexicalContext","kind":"symbol","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/MacroExpansionContext":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext","navigatorTitle":[{"kind":"identifier","text":"MacroExpansionContext"}],"type":"topic","kind":"symbol","title":"MacroExpansionContext","url":"\/documentation\/swiftsyntaxmacros\/macroexpansioncontext","role":"symbol","abstract":[{"type":"text","text":"Interface to extract information about the context in which a given"},{"text":" ","type":"text"},{"type":"text","text":"macro is expanded."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MacroExpansionContext","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/MacroExpansionContext/lexicalContext-30zha":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext\/lexicalContext-30zha","title":"lexicalContext","type":"topic","abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"type":"text","text":" "},{"text":"starting from the syntax node at which the macro expansion occurs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and containing all “context” nodes including functions, closures, types,"},{"type":"text","text":" "},{"type":"text","text":"properties, subscripts, and extensions."}],"required":true,"url":"\/documentation\/swiftsyntaxmacros\/macroexpansioncontext\/lexicalcontext-30zha","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lexicalContext"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"]"}],"kind":"symbol","defaultImplementations":1},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"}}}