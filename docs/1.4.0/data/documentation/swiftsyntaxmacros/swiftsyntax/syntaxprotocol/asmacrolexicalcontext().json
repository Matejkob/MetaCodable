{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax\/SyntaxProtocol"]]},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax\/SyntaxProtocol\/asMacroLexicalContext()","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" for any syntax node that isn’t a lexical context."}]}]}],"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF","title":"asMacroLexicalContext()","modules":[{"relatedModules":["SwiftSyntax"],"name":"SwiftSyntaxMacros"}],"extendedModule":"SwiftSyntax","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asMacroLexicalContext"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxmacros\/swiftsyntax\/syntaxprotocol\/asmacrolexicalcontext()"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"text":" ","type":"text"},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros":{"role":"collection","title":"SwiftSyntaxMacros","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxmacros","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/SwiftSyntax/SyntaxProtocol/asMacroLexicalContext()":{"type":"topic","title":"asMacroLexicalContext()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax\/SyntaxProtocol\/asMacroLexicalContext()","kind":"symbol","url":"\/documentation\/swiftsyntaxmacros\/swiftsyntax\/syntaxprotocol\/asmacrolexicalcontext()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"text":" ","type":"text"},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"type":"text","text":" "},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"text":"as function bodies or the members of types\/extensions.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/SwiftSyntax/SyntaxProtocol":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax\/SyntaxProtocol","url":"\/documentation\/swiftsyntaxmacros\/swiftsyntax\/syntaxprotocol","title":"SyntaxProtocol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"kind":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax","type":"topic","title":"SwiftSyntax","kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/swiftsyntaxmacros\/swiftsyntax"}}}