{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"foldAll","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"node","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":", "},{"kind":"externalParam","text":"errorHandler"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorErrorHandler","preciseIdentifier":"s:14SwiftOperators20OperatorErrorHandlera","text":"OperatorErrorHandler","kind":"typeIdentifier"},{"text":" = { throw $0 }) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation replaces all sequence expressions in the given syntax"},{"type":"text","text":" "},{"type":"text","text":"tree with structured syntax trees, by walking the tree and invoking"},{"text":" ","type":"text"},{"type":"codeVoice","code":"foldSingle"},{"text":" on each sequence expression it encounters. Use this to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provide structure to an entire tree."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Due to the inability to express the implementation of this rethrowing"},{"text":" ","type":"text"},{"type":"text","text":"function, a throwing error handler will end up being called twice with"},{"type":"text","text":" "},{"text":"the first error that causes it to be thrown. The first call will stop","type":"text"},{"text":" ","type":"text"},{"text":"the operation, then the second must also throw.","type":"text"}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/swiftoperators\/operatortable\/foldall(_:errorhandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"foldAll(_:errorHandler:)","roleHeading":"Instance Method","externalID":"s:14SwiftOperators13OperatorTableV7foldAll_12errorHandler0A6Syntax0I0Vx_yAA0C5ErrorOKXEtKAF0I8ProtocolRzlF","symbolKind":"method","role":"symbol","modules":[{"name":"SwiftOperators"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"foldAll"},{"kind":"text","text":"("},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"errorHandler"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14SwiftOperators20OperatorErrorHandlera","text":"OperatorErrorHandler","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"extendedModule":"SwiftOperators"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorTable"]]},"abstract":[{"type":"text","text":"Fold all sequence expressions within the given syntax tree into a"},{"text":" ","type":"text"},{"text":"structured syntax tree.","type":"text"}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorTable\/foldAll(_:errorHandler:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftOperators/OperatorTable":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorTable","navigatorTitle":[{"kind":"identifier","text":"OperatorTable"}],"kind":"symbol","url":"\/documentation\/swiftoperators\/operatortable","abstract":[{"text":"Maintains and validates information about all operators in a Swift program.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OperatorTable"}],"title":"OperatorTable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftOperators/OperatorErrorHandler":{"abstract":[{"text":"A function that receives an operator precedence error and may do with it","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whatever it likes."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorErrorHandler","title":"OperatorErrorHandler","navigatorTitle":[{"text":"OperatorErrorHandler","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OperatorErrorHandler"}],"url":"\/documentation\/swiftoperators\/operatorerrorhandler"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftOperators/OperatorTable/foldAll(_:errorHandler:)":{"kind":"symbol","title":"foldAll(_:errorHandler:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorTable\/foldAll(_:errorHandler:)","url":"\/documentation\/swiftoperators\/operatortable\/foldall(_:errorhandler:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"foldAll","kind":"identifier"},{"text":"(","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"errorHandler"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14SwiftOperators20OperatorErrorHandlera","text":"OperatorErrorHandler","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Fold all sequence expressions within the given syntax tree into a","type":"text"},{"type":"text","text":" "},{"text":"structured syntax tree.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftOperators":{"role":"collection","title":"SwiftOperators","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators","url":"\/documentation\/swiftoperators","abstract":[],"type":"topic"}}}