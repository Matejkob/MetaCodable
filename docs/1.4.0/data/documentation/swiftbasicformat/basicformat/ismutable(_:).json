{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isMutable","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"token","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat\/isMutable(_:)"},"kind":"symbol","metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","modules":[{"name":"SwiftBasicFormat"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isMutable","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isMutable(_:)","externalID":"s:16SwiftBasicFormat0bC0C9isMutableySb0A6Syntax05TokenF0VF"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat"]]},"sections":[],"abstract":[{"type":"text","text":"Whether the formatter should consider this token as being mutable."},{"text":" ","type":"text"},{"type":"text","text":"This allows the diagnostic generator to only assume that missing nodes"},{"text":" ","type":"text"},{"type":"text","text":"will be mutated. Thus, if two tokens need to be separated by a space, it"},{"text":" ","type":"text"},{"type":"text","text":"will not be assumed that the space is added to an immutable previous node."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftbasicformat\/basicformat\/ismutable(_:)"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftBasicFormat/BasicFormat/isMutable(_:)":{"kind":"symbol","url":"\/documentation\/swiftbasicformat\/basicformat\/ismutable(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat\/isMutable(_:)","role":"symbol","title":"isMutable(_:)","abstract":[{"type":"text","text":"Whether the formatter should consider this token as being mutable."},{"text":" ","type":"text"},{"type":"text","text":"This allows the diagnostic generator to only assume that missing nodes"},{"text":" ","type":"text"},{"text":"will be mutated. Thus, if two tokens need to be separated by a space, it","type":"text"},{"type":"text","text":" "},{"text":"will not be assumed that the space is added to an immutable previous node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isMutable"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftBasicFormat/BasicFormat":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"BasicFormat","kind":"identifier"}],"title":"BasicFormat","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicFormat"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat","abstract":[{"type":"text","text":"A rewriter that performs a “basic” format of the passed tree."}],"kind":"symbol","url":"\/documentation\/swiftbasicformat\/basicformat"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftBasicFormat":{"title":"SwiftBasicFormat","type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/swiftbasicformat","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenSyntax":{"title":"TokenSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/tokensyntax","role":"symbol","type":"topic","navigatorTitle":[{"text":"TokenSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A Syntax node representing a single token."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TokenSyntax","kind":"identifier"}]}}}