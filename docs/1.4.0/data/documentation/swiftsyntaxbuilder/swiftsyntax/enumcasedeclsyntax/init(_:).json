{"metadata":{"title":"init(_:)","roleHeading":"Initializer","externalID":"s:18SwiftSyntaxBuilder04DeclB9ParseablePAAEyxAA0B10NodeStringVKcfc::SYNTHESIZED::s:11SwiftSyntax012EnumCaseDeclB0V","symbolKind":"init","role":"symbol","modules":[{"name":"SwiftSyntaxBuilder"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"extendedModule":"SwiftSyntaxBuilder"},"abstract":[{"type":"text","text":"Create a syntax node from the given string interpolation."}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/EnumCaseDeclSyntax\/init(_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/EnumCaseDeclSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/EnumCaseDeclSyntax\/DeclSyntaxParseable-Implementations"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"stringInterpolation","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"This initializer throws if the syntax node was not able to be parsed as"},{"text":" ","type":"text"},{"text":"this type, e.g. when calling ","type":"text"},{"type":"codeVoice","code":"ClassDeclSyntax(\"actor Foo {})"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If there are syntax errors in the string, the initializer will return a","type":"text"},{"type":"text","text":" "},{"text":"node that contains errors without throwing.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/enumcasedeclsyntax\/init(_:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/EnumCaseDeclSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/EnumCaseDeclSyntax","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:11SwiftSyntax012EnumCaseDeclB0V","text":"EnumCaseDeclSyntax"}],"title":"EnumCaseDeclSyntax","abstract":[],"role":"symbol","navigatorTitle":[{"text":"EnumCaseDeclSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/enumcasedeclsyntax","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax","kind":"symbol","title":"SwiftSyntax","role":"collection","abstract":[],"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/EnumCaseDeclSyntax/DeclSyntaxParseable-Implementations":{"title":"DeclSyntaxParseable Implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/EnumCaseDeclSyntax\/DeclSyntaxParseable-Implementations","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/enumcasedeclsyntax\/declsyntaxparseable-implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SyntaxNodeString":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString","type":"topic","kind":"symbol","abstract":[{"text":"A type that is expressible by string interpolation the same way that syntax","type":"text"},{"text":" ","type":"text"},{"text":"nodes are, but instead of producing a node, it stores the string interpolation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"role":"symbol","title":"SyntaxNodeString","url":"\/documentation\/swiftsyntaxbuilder\/syntaxnodestring"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/EnumCaseDeclSyntax/init(_:)":{"title":"init(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Create a syntax node from the given string interpolation."}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier","text":"SyntaxNodeString"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/enumcasedeclsyntax\/init(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/EnumCaseDeclSyntax\/init(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"}}}