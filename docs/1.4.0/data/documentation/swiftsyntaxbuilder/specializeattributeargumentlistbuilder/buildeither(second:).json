{"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildEither"},{"text":"(","kind":"text"},{"text":"second","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"component","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"},{"kind":"text","text":") -> "},{"text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component"}],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"text":"With buildEither(first:), enables support for ‘if-else’ and ‘switch’","type":"text"},{"type":"text","text":" "},{"type":"text","text":"statements by folding conditional results into a single result."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SpecializeAttributeArgumentListBuilder\/buildEither(second:)"},"metadata":{"extendedModule":"SwiftSyntaxBuilder","roleHeading":"Type Method","modules":[{"name":"SwiftSyntaxBuilder"}],"externalID":"s:18SwiftSyntaxBuilder04ListC0PAAE11buildEither6secondSay11FinalResult_7ElementQZGAI_tFZ::SYNTHESIZED::s:18SwiftSyntaxBuilder031SpecializeAttributeArgumentListC0V","role":"symbol","title":"buildEither(second:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"second"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"text":") -> ","kind":"text"},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SpecializeAttributeArgumentListBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SpecializeAttributeArgumentListBuilder\/ListBuilder-Implementations"]]},"variants":[{"paths":["\/documentation\/swiftsyntaxbuilder\/specializeattributeargumentlistbuilder\/buildeither(second:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ListBuilder/Component":{"url":"\/documentation\/swiftsyntaxbuilder\/listbuilder\/component","abstract":[{"type":"text","text":"The type of a partial result, which will be carried through all of the"},{"type":"text","text":" "},{"type":"text","text":"build methods."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Component"}],"type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Component"}],"title":"ListBuilder.Component","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SpecializeAttributeArgumentListBuilder":{"title":"SpecializeAttributeArgumentListBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/specializeattributeargumentlistbuilder","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SpecializeAttributeArgumentListBuilder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SpecializeAttributeArgumentListBuilder","kind":"identifier"}],"abstract":[],"role":"symbol","navigatorTitle":[{"text":"SpecializeAttributeArgumentListBuilder","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SpecializeAttributeArgumentListBuilder/ListBuilder-Implementations":{"title":"ListBuilder Implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SpecializeAttributeArgumentListBuilder\/ListBuilder-Implementations","url":"\/documentation\/swiftsyntaxbuilder\/specializeattributeargumentlistbuilder\/listbuilder-implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"title":"SwiftSyntaxBuilder","type":"topic","url":"\/documentation\/swiftsyntaxbuilder","abstract":[],"role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SpecializeAttributeArgumentListBuilder/buildEither(second:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildEither"},{"kind":"text","text":"("},{"text":"second","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"title":"buildEither(second:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"With buildEither(first:), enables support for ‘if-else’ and ‘switch’"},{"text":" ","type":"text"},{"type":"text","text":"statements by folding conditional results into a single result."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SpecializeAttributeArgumentListBuilder\/buildEither(second:)","url":"\/documentation\/swiftsyntaxbuilder\/specializeattributeargumentlistbuilder\/buildeither(second:)"}}}