{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy\/unconditionalSingleValue","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Type Property","modules":[{"name":"ArgumentParser"}],"role":"symbol","title":"unconditionalSingleValue","externalID":"s:14ArgumentParser20ArrayParsingStrategyV24unconditionalSingleValueACvpZ","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unconditionalSingleValue"},{"text":": ","kind":"text"},{"text":"ArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV"}],"symbolKind":"property"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/arrayparsingstrategy\/unconditionalsinglevalue"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"unconditionalSingleValue","kind":"identifier"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","text":"ArrayParsingStrategy"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is identical to "},{"code":".singleValue","type":"codeVoice"},{"text":" except that the value will be read","type":"text"},{"text":" ","type":"text"},{"text":"from the input immediately after the option, even if it could be interpreted as an option.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example, for a parsable type with a property defined as"},{"type":"text","text":" "},{"code":"@Option(parsing: .unconditionalSingleValue) var read: [String]","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"the input ","type":"text"},{"type":"codeVoice","code":"--read foo --read bar"},{"text":" would result in the array","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"[\"foo\", \"bar\"]"},{"text":" â€“ just as it would have been the case for ","type":"text"},{"type":"codeVoice","code":".singleValue"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"text":"However, the input ","type":"text"},{"type":"codeVoice","code":"--read --name Foo Bar --read baz"},{"text":" would result in","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"read"},{"text":" being set to the array ","type":"text"},{"code":"[\"--name\", \"baz\"]","type":"codeVoice"},{"type":"text","text":". This is usually "},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"text":" what users","type":"text"},{"type":"text","text":" "},{"type":"text","text":"would expect. Use with caution."}],"type":"paragraph"}]}]}],"sections":[],"abstract":[{"text":"Parse the value immediately after the option while allowing repeating options, joining multiple into an array.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy/unconditionalSingleValue":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unconditionalSingleValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","text":"ArrayParsingStrategy","kind":"typeIdentifier"}],"url":"\/documentation\/argumentparser\/arrayparsingstrategy\/unconditionalsinglevalue","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy\/unconditionalSingleValue","title":"unconditionalSingleValue","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Parse the value immediately after the option while allowing repeating options, joining multiple into an array.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy":{"abstract":[{"text":"The strategy to use when parsing multiple values from ","type":"text"},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"type":"text","text":" "},{"type":"text","text":"array."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","url":"\/documentation\/argumentparser\/arrayparsingstrategy","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayParsingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"type":"topic","title":"ArrayParsingStrategy"}}}