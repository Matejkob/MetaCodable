{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","text":"NameSpecification","kind":"typeIdentifier"},{"kind":"text","text":" = .long, "},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"text":"FlagInversion","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity"},{"text":" = .chooseLast, ","kind":"text"},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"? = nil)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"name","content":[{"inlineContent":[{"text":"A specification for what names are allowed for this flag.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method for converting this flags name into an on\/off"},{"type":"text","text":" "},{"text":"pair.","type":"text"}]}],"name":"inversion"},{"name":"exclusivity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior to use when an on\/off pair of flags is"},{"text":" ","type":"text"},{"type":"text","text":"specified."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Information about how to use this flag.","type":"text"}]}],"name":"help"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this initializer to create an optional Boolean flag with an on\/off","type":"text"},{"type":"text","text":" "},{"text":"pair. With the following declaration, for example, the user can specify","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"either "},{"type":"codeVoice","code":"--use-https"},{"type":"text","text":" or "},{"code":"--no-use-https","type":"codeVoice"},{"type":"text","text":" to set the "},{"code":"useHTTPS","type":"codeVoice"},{"text":" flag to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":" or "},{"code":"false","type":"codeVoice"},{"text":", respectively. If neither is specified, the resulting","type":"text"},{"type":"text","text":" "},{"text":"flag value would be ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":null,"code":["@Flag(inversion: .prefixedNo)","var useHTTPS: Bool?"]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"extendedModule":"ArgumentParser","modules":[{"name":"ArgumentParser"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool?"},{"text":".","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier","text":"FlagInversion"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"title":"init(name:inversion:exclusivity:help:)","externalID":"s:14ArgumentParser4FlagVAASbSgRszlE4name9inversion11exclusivity4helpACyADGAA17NameSpecificationV_AA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc","symbolKind":"init","role":"symbol","roleHeading":"Initializer"},"abstract":[{"type":"text","text":"Creates a Boolean property that reads its value from the presence of"},{"type":"text","text":" "},{"text":"one or more inverted flags.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagInversion":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FlagInversion","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","role":"symbol","title":"FlagInversion","navigatorTitle":[{"kind":"identifier","text":"FlagInversion"}],"abstract":[{"text":"The options for converting a Boolean flag into a ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"url":"\/documentation\/argumentparser\/flaginversion","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentHelp":{"title":"ArgumentHelp","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentHelp","kind":"identifier"}],"url":"\/documentation\/argumentparser\/argumenthelp","abstract":[{"type":"text","text":"Help information for a command-line argument."}],"navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"abstract":[{"text":"A property wrapper that represents a command-line flag.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","title":"Flag","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flag"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/NameSpecification":{"title":"NameSpecification","navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","role":"symbol","abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"text":" ","type":"text"},{"type":"text","text":"label."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"NameSpecification","kind":"identifier"}],"type":"topic","url":"\/documentation\/argumentparser\/namespecification","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool?"},{"text":".","type":"text"}]},"type":"topic","abstract":[{"text":"Creates a Boolean property that reads its value from the presence of","type":"text"},{"text":" ","type":"text"},{"text":"one or more inverted flags.","type":"text"}],"url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","role":"symbol","kind":"symbol","title":"init(name:inversion:exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagExclusivity":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagExclusivity"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","role":"symbol","title":"FlagExclusivity","navigatorTitle":[{"text":"FlagExclusivity","kind":"identifier"}],"abstract":[{"type":"text","text":"The options for treating enumeration-based flags as exclusive."}],"url":"\/documentation\/argumentparser\/flagexclusivity","type":"topic"}}}