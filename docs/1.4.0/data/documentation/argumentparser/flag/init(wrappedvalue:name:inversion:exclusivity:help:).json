{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag"]]},"abstract":[{"text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification"},{"text":" = .long, ","kind":"text"},{"kind":"externalParam","text":"inversion"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier","text":"FlagInversion","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","kind":"typeIdentifier"},{"kind":"text","text":" = .chooseLast, "},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp"},{"kind":"text","text":"? = nil)"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"wrappedValue","content":[{"inlineContent":[{"type":"text","text":"A default value to use for this property, provided implicitly by the compiler during property wrapper initialization."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A specification for what names are allowed for this flag."}]}],"name":"name"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The method for converting this flagâ€™s name into an on\/off pair.","type":"text"}]}],"name":"inversion"},{"name":"exclusivity","content":[{"inlineContent":[{"text":"The behavior to use when an on\/off pair of flags is specified.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Information about how to use this flag.","type":"text"}],"type":"paragraph"}],"name":"help"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Use this initializer to create a Boolean flag with an on\/off pair.","type":"text"},{"text":" ","type":"text"},{"text":"With the following declaration, for example, the user can specify either ","type":"text"},{"type":"codeVoice","code":"--use-https"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"--no-use-https"},{"text":" to set the ","type":"text"},{"code":"useHTTPS","type":"codeVoice"},{"type":"text","text":" flag to "},{"code":"true","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":", respectively."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Flag(inversion: .prefixedNo)","var useHTTPS: Bool = true"]}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)"},"metadata":{"extendedModule":"ArgumentParser","title":"init(wrappedValue:name:inversion:exclusivity:help:)","modules":[{"name":"ArgumentParser"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier","text":"FlagInversion"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"text":", ","kind":"text"},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"kind":"text","text":"?)"}],"externalID":"s:14ArgumentParser4FlagVAASbRszlE12wrappedValue4name9inversion11exclusivity4helpACySbGSb_AA17NameSpecificationVAA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc","roleHeading":"Initializer"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)"]}],"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagExclusivity":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagExclusivity"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","role":"symbol","title":"FlagExclusivity","navigatorTitle":[{"text":"FlagExclusivity","kind":"identifier"}],"abstract":[{"type":"text","text":"The options for treating enumeration-based flags as exclusive."}],"url":"\/documentation\/argumentparser\/flagexclusivity","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"text":"?)","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[{"type":"text","text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags."}],"url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","role":"symbol","kind":"symbol","title":"init(wrappedValue:name:inversion:exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagInversion":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FlagInversion","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","role":"symbol","title":"FlagInversion","navigatorTitle":[{"kind":"identifier","text":"FlagInversion"}],"abstract":[{"text":"The options for converting a Boolean flag into a ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"url":"\/documentation\/argumentparser\/flaginversion","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/NameSpecification":{"title":"NameSpecification","navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","role":"symbol","abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"text":" ","type":"text"},{"type":"text","text":"label."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"NameSpecification","kind":"identifier"}],"type":"topic","url":"\/documentation\/argumentparser\/namespecification","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentHelp":{"title":"ArgumentHelp","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentHelp","kind":"identifier"}],"url":"\/documentation\/argumentparser\/argumenthelp","abstract":[{"type":"text","text":"Help information for a command-line argument."}],"navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"abstract":[{"text":"A property wrapper that represents a command-line flag.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","title":"Flag","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flag"}}}