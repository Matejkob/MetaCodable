{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueParsingStrategy","kind":"identifier"}],"platforms":["macOS"]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy"}]}],"name":"See Also","style":"note","type":"aside"}],"kind":"content"}],"sections":[],"topicSections":[{"title":"Type Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/next","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/scanningForValue","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/unconditional"],"generated":true,"anchor":"Type-Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/Equatable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser"]]},"abstract":[{"type":"text","text":"The strategy to use when parsing a single value from "},{"code":"@Option","type":"codeVoice"},{"type":"text","text":" arguments."}],"metadata":{"symbolKind":"struct","modules":[{"name":"ArgumentParser"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SingleValueParsingStrategy","kind":"identifier"}],"role":"symbol","title":"SingleValueParsingStrategy","externalID":"s:14ArgumentParser26SingleValueParsingStrategyV","navigatorTitle":[{"text":"SingleValueParsingStrategy","kind":"identifier"}],"roleHeading":"Structure"},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"]}],"variants":[{"paths":["\/documentation\/argumentparser\/singlevalueparsingstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy/scanningForValue":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"scanningForValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","kind":"typeIdentifier","text":"SingleValueParsingStrategy"}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/scanningforvalue","abstract":[{"type":"text","text":"Parse the next input, as long as that input canâ€™t be interpreted as"},{"type":"text","text":" "},{"text":"an option or flag.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/scanningForValue","title":"scanningForValue","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy":{"abstract":[{"text":"The strategy to use when parsing multiple values from ","type":"text"},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"type":"text","text":" "},{"type":"text","text":"array."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","url":"\/documentation\/argumentparser\/arrayparsingstrategy","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayParsingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"type":"topic","title":"ArrayParsingStrategy"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy/Equatable-Implementations":{"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/equatable-implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/Equatable-Implementations","title":"Equatable Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/SH":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"title":"ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","abstract":[],"role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueParsingStrategy"}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy","abstract":[{"text":"The strategy to use when parsing a single value from ","type":"text"},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy","title":"SingleValueParsingStrategy","navigatorTitle":[{"kind":"identifier","text":"SingleValueParsingStrategy"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy/unconditional":{"abstract":[{"type":"text","text":"Parse the next input, even if it could be interpreted as an option or"},{"type":"text","text":" "},{"type":"text","text":"flag."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/unconditional","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/unconditional","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unconditional"},{"text":": ","kind":"text"},{"text":"SingleValueParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV"}],"type":"topic","title":"unconditional"},"doc://com.SwiftyLab.HelperCoders/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy/next":{"abstract":[{"text":"Parse the input after the option. Expect it to be a value.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/next","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/next","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy"}],"type":"topic","title":"next"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"}}}