{"kind":"article","topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/init(_:)-1gmiv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/init(_:)-8gvt9"]},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmedLength"]},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/as(_:)-1ks22","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/as(_:)-1yfkc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/as(_:)-6jeyo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-17sh2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-1y2cr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-26nav","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-3urdz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-479l4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-4lv9r","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-6pnsh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-6ua1r","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-6wjgr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-9ayxc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-9brja","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-9h0ll","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-n0t3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-pewb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/cast(_:)-1cpqz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/cast(_:)-5ly3x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/cast(_:)-90jqa","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/is(_:)-4mf3e","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/is(_:)-76yot","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/is(_:)-9fc58","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-1lfx4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-21mc2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-32b7k","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-4pkxs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-4wkmq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-5ckrh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-76v7j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-7gkwc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-7vgjk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-7y9zg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-8cgg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-944pi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-9na2h","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-wj9k","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/write(to:)"],"anchor":"Instance-Methods"},{"title":"Type Properties","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/structure"],"anchor":"Type-Properties"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"SwiftSyntax"}],"title":"SyntaxProtocol Implementations","roleHeading":"API Collection","role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax"]]},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/root":{"role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/root","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"title":"root","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/root","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/id":{"title":"id","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/id","type":"topic","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/id"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/firstToken(viewMode:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/firsttoken(viewmode:)","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"title":"firstToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/firstToken(viewMode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-6pnsh":{"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-6pnsh","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-6pnsh"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceRange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/init(_:)-8gvt9":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Children","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp","text":"Children"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/init(_:)-8gvt9","title":"init(_:)","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/init(_:)-8gvt9"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/cast(_:)-5ly3x":{"abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"kind":"symbol","role":"symbol","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/cast(_:)-5ly3x","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/cast(_:)-5ly3x"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-3urdz":{"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-3urdz","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-3urdz"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/token(at:)":{"title":"token(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/token(at:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"token","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/token(at:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/lastToken(viewMode:)":{"title":"lastToken(viewMode:)","kind":"symbol","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/lasttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/lastToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/nextToken":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/nexttoken","title":"nextToken","abstract":[],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/nextToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/hasError":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasError"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/haserror","type":"topic","title":"hasError","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasError","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-4pkxs":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-4pkxs","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-4pkxs","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/totalLength":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/totalLength","kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/totallength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"title":"totalLength","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/keyPathInParent":{"title":"keyPathInParent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/keyPathInParent","abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/keypathinparent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/detach()":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/detach()","abstract":[],"deprecated":true,"title":"detach()","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/detach()","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/hasParent":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/hasparent","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasParent","title":"hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/position":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/position","title":"position","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"text":"trivia.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-9na2h":{"title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-9na2h","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-9na2h"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-32b7k":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-32b7k","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-32b7k"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/hasMaximumNestingLevelOverflow":{"type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/hasmaximumnestingleveloverflow","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasMaximumNestingLevelOverflow","title":"hasMaximumNestingLevelOverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-944pi":{"title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-944pi","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-944pi"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isImplicit":{"deprecated":true,"abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isimplicit","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isImplicit"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isImplicit","kind":"symbol","title":"isImplicit"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/firstToken":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/firsttoken","title":"firstToken","abstract":[],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/firstToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-wj9k":{"role":"symbol","title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-wj9k","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-wj9k","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/trailingTrivia":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trailingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trailingTrivia","title":"trailingTrivia","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/trailingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/trimmedLength":{"kind":"symbol","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"text":"leading or trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/trimmedlength","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmedLength","type":"topic","title":"trimmedLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-479l4":{"role":"symbol","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-479l4","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-479l4","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax":{"title":"EnumCaseParameterListSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumCaseParameterListSyntax"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"EnumCaseParameterListSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/trimmedDescription":{"kind":"symbol","title":"trimmedDescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmedDescription","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/trimmeddescription","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"type":"topic","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-5ckrh":{"role":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-5ckrh","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-5ckrh","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-26nav":{"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-26nav","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-26nav"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-4wkmq":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-4wkmq","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-4wkmq"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-7vgjk":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-7vgjk","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-7vgjk","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/description":{"title":"description","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/description","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/trimmed":{"kind":"symbol","title":"trimmed","type":"topic","abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmed","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/trimmed","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/init(_:)-1gmiv":{"role":"symbol","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/init(_:)-1gmiv","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/init(_:)-1gmiv","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"text":"?)","kind":"text"}],"kind":"symbol","title":"init(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/trimmedDescription(matching:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/trimmeddescription(matching:)","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"text":" removed","type":"text"},{"text":" ","type":"text"},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"kind":"symbol","title":"trimmedDescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-1lfx4":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-1lfx4","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-1lfx4"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/totalByteRange":{"title":"totalByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/totalByteRange","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/totalbyterange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/endPosition":{"title":"endPosition","type":"topic","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/endPosition","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/endposition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/with(_:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":">, ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/with(_:_:)","title":"with(_:_:)","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/byteRange":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/byterange","title":"byteRange","kind":"symbol","type":"topic","abstract":[],"deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/byteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/leadingTrivia":{"title":"leadingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/leadingTrivia","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/leadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/byteSize":{"deprecated":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSize"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/bytesize","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/byteSize","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"title":"byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-4lv9r":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-4lv9r","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-4lv9r","title":"asProtocol(_:)","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/structure":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/structure","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/structure","role":"symbol","type":"topic","title":"structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-1y2cr":{"title":"asProtocol(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-1y2cr","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-1y2cr","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-n0t3":{"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-n0t3","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-n0t3"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/lastToken":{"deprecated":true,"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/lasttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/lastToken","abstract":[],"title":"lastToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/node(at:)":{"title":"node(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"text":"identifier.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/as(_:)-1yfkc":{"deprecated":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/as(_:)-1yfkc","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/as(_:)-1yfkc","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/previousToken(viewMode:)":{"title":"previousToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/previousToken(viewMode:)","abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this node."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/previoustoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-8cgg":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-8cgg","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-8cgg","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/trimmed(matching:)":{"title":"trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmed(matching:)","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/trailingTriviaLength":{"title":"trailingTriviaLength","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/trailingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trailingTriviaLength","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-6ua1r":{"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-6ua1r","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-6ua1r","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-6wjgr":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-6wjgr","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-6wjgr","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/is(_:)-9fc58":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/is(_:)-9fc58","title":"is(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/is(_:)-9fc58","deprecated":true,"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-9ayxc":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-9ayxc","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-9ayxc","role":"symbol","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/syntaxNodeType":{"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/syntaxnodetype","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/syntaxNodeType","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"title":"syntaxNodeType","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":".Type"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-pewb":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-pewb","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-pewb","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/is(_:)-76yot":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/is(_:)-76yot","type":"topic","title":"is(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/is(_:)-76yot","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/hasSequenceExpr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasSequenceExpr","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/hassequenceexpr","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","title":"hasSequenceExpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-9brja":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-9brja","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-9brja","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-7gkwc":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-7gkwc","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-7gkwc","type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/contentLength":{"title":"contentLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/contentLength","abstract":[],"type":"topic","role":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/contentlength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-21mc2":{"type":"topic","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-21mc2","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-21mc2"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/cast(_:)-90jqa":{"deprecated":true,"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/cast(_:)-90jqa","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/cast(_:)-90jqa","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-9h0ll":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-9h0ll","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-9h0ll","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/detached":{"title":"detached","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/detached","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/nextToken(viewMode:)":{"title":"nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/nextToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/nexttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/endPositionBeforeTrailingTrivia":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/endPositionBeforeTrailingTrivia","type":"topic","title":"endPositionBeforeTrailingTrivia","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/endpositionbeforetrailingtrivia","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/startLocation(converter:afterLeadingTrivia:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/startlocation(converter:afterleadingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/startLocation(converter:afterLeadingTrivia:)","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"title":"startLocation(converter:afterLeadingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/syntaxTextBytes":{"title":"syntaxTextBytes","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/syntaxTextBytes","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/syntaxtextbytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/debugDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/debugDescription","title":"debugDescription","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/debugdescription","kind":"symbol","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/index":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"abstract":[{"text":"The index of this node in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"text":" collection.","type":"text"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/index","type":"topic","title":"index","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/index","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-76v7j":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-76v7j","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-76v7j","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/kind":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/kind","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/kind","title":"kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"text":".","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/hasWarning":{"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/haswarning","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"reference"},{"type":"text","text":" of severity "},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/hasWarning","title":"hasWarning","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/previousToken":{"kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/previousToken","title":"previousToken","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/previoustoken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/endLocation(converter:afterTrailingTrivia:)":{"kind":"symbol","type":"topic","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/endLocation(converter:afterTrailingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"title":"endLocation(converter:afterTrailingTrivia:)","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/endlocation(converter:aftertrailingtrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/byteSizeAfterTrimmingTrivia":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/bytesizeaftertrimmingtrivia","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/byteSizeAfterTrimmingTrivia","title":"byteSizeAfterTrimmingTrivia","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/asProtocol(_:)-17sh2":{"title":"asProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/asprotocol(_:)-17sh2","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/asProtocol(_:)-17sh2","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/as(_:)-1ks22":{"title":"as(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/as(_:)-1ks22","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/as(_:)-1ks22","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/cast(_:)-1cpqz":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/cast(_:)-1cpqz","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/cast(_:)-1cpqz","type":"topic","title":"cast(_:)","deprecated":true,"abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node..","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/as(_:)-6jeyo":{"title":"as(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/as(_:)-6jeyo","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/as(_:)-6jeyo"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/children(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"SyntaxChildren","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","kind":"typeIdentifier"}],"title":"children(viewMode:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/children(viewMode:)","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/children(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/parent":{"title":"parent","kind":"symbol","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/parent","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/is(_:)-4mf3e":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/is(_:)-4mf3e","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/is(_:)-4mf3e","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"indentString"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/positionAfterSkippingLeadingTrivia":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/positionAfterSkippingLeadingTrivia","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/positionafterskippingleadingtrivia","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"text":" ","type":"text"},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"title":"positionAfterSkippingLeadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/trimmedByteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/trimmedByteRange","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/trimmedbyterange","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"title":"trimmedByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/write(to:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/write(to:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/write(to:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Target","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/leadingTriviaLength":{"title":"leadingTriviaLength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/leadingTriviaLength","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/leadingtrivialength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/isProtocol(_:)-7y9zg":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/isprotocol(_:)-7y9zg","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/isProtocol(_:)-7y9zg","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterListSyntax/tokens(viewMode:)":{"role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterlistsyntax\/tokens(viewmode:)","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterListSyntax\/tokens(viewMode:)","title":"tokens(viewMode:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}]}}}