{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax\/Element","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax\/Element\/SyntaxChildChoices-Implementations"]]},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"SwiftSyntax"}],"platforms":[],"title":"is(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"externalID":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF::SYNTHESIZED::s:11SwiftSyntax014SwitchCaseListB0V7ElementO","extendedModule":"SwiftSyntax","role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"This cast will always fail"}],"type":"paragraph"}],"variants":[{"paths":["\/documentation\/swiftsyntax\/switchcaselistsyntax\/element\/is(_:)-6zdt6"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the node can be cast, "},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"aside","name":"Note","content":[{"inlineContent":[{"text":"This method is marked as deprecated because it is advised not to use it for unrelated casts.","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Checks if the current "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices"},{"text":" instance can be cast to a given specialized syntax type.","type":"text"}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax\/Element\/is(_:)-6zdt6","interfaceLanguage":"swift"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SwitchCaseListSyntax/Element/is(_:)-6zdt6":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/switchcaselistsyntax\/element\/is(_:)-6zdt6","type":"topic","kind":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Checks if the current "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","isActive":true,"type":"reference"},{"type":"text","text":" instance can be cast to a given specialized syntax type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax\/Element\/is(_:)-6zdt6","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildChoices":{"url":"\/documentation\/swiftsyntax\/syntaxchildchoices","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxChildChoices","kind":"identifier"}],"type":"topic","title":"SyntaxChildChoices","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxChildChoices"}],"abstract":[{"type":"text","text":"Protocol for the enums nested inside "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" nodes that enumerate all the"},{"type":"text","text":" "},{"type":"text","text":"possible types a child node might have."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SwitchCaseListSyntax/Element/SyntaxChildChoices-Implementations":{"kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax\/Element\/SyntaxChildChoices-Implementations","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/switchcaselistsyntax\/element\/syntaxchildchoices-implementations","title":"SyntaxChildChoices Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SwitchCaseListSyntax":{"kind":"symbol","title":"SwitchCaseListSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchCaseListSyntax"}],"type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/switchcaselistsyntax","role":"symbol","navigatorTitle":[{"text":"SwitchCaseListSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SwitchCaseListSyntax/Element":{"kind":"symbol","title":"SwitchCaseListSyntax.Element","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax\/Element","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Element"}],"type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/switchcaselistsyntax\/element","role":"symbol","navigatorTitle":[{"text":"Element","kind":"identifier"}]}}}