{"kind":"symbol","relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax"},"variants":[{"paths":["\/documentation\/swiftsyntax\/stringsegmentsyntax"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"metadata":{"title":"StringSegmentSyntax","modules":[{"name":"SwiftSyntax"}],"navigatorTitle":[{"text":"StringSegmentSyntax","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","role":"symbol","externalID":"s:11SwiftSyntax013StringSegmentB0V","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringSegmentSyntax"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StringSegmentSyntax"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"name":"See Also","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax","type":"reference"}]}],"style":"note","type":"aside"},{"anchor":"Children","level":3,"text":"Children","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"content"},{"text":": ","type":"text"},{"type":"codeVoice","code":"<stringSegment>"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","level":3,"text":"Contained in","anchor":"Contained-in"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax","type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax","isActive":true,"type":"reference"}],"type":"paragraph"}]}]}],"kind":"content"}],"abstract":[{"text":"A literal segment inside a string segment.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/init(_:)-9wrfx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/init(leadingTrivia:_:content:_:trailingTrivia:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/content","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/unexpectedAfterContent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/unexpectedBeforeContent"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/structure"],"anchor":"Type-Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/SyntaxProtocol-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/CustomReflectable-Implementations":{"type":"topic","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/customreflectable-implementations","title":"CustomReflectable Implementations","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/CustomReflectable-Implementations"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/structure":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO"}],"type":"topic","abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"title":"structure","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/structure","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/structure"},"doc://com.SwiftyLab.HelperCoders/SH":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/SQ":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax":{"url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"title":"SimpleStringLiteralSegmentListSyntax","navigatorTitle":[{"text":"SimpleStringLiteralSegmentListSyntax","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxHashable"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxhashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","role":"symbol","title":"SyntaxHashable","abstract":[{"text":"Protocol that provides a common Hashable implementation for all syntax nodes","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax","title":"StringLiteralSegmentListSyntax","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/SyntaxProtocol-Implementations","kind":"article","title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/syntaxprotocol-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/unexpectedBeforeContent":{"url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/unexpectedbeforecontent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBeforeContent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/unexpectedBeforeContent","role":"symbol","kind":"symbol","title":"unexpectedBeforeContent","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/init(leadingTrivia:_:content:_:trailingTrivia:)":{"type":"topic","title":"init(leadingTrivia:_:content:_:trailingTrivia:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"leadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"content","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?, "},{"text":"trailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"kind":"text","text":"?)"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/init(leadingtrivia:_:content:_:trailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/init(leadingTrivia:_:content:_:trailingTrivia:)","kind":"symbol","abstract":[]},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/content":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/content","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"content"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"}],"abstract":[],"kind":"symbol","title":"content","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/content","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/unexpectedAfterContent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/unexpectedAfterContent","type":"topic","kind":"symbol","title":"unexpectedAfterContent","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedAfterContent"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/unexpectedaftercontent"},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","title":"Swift.TextOutputStreamable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","title":"Swift.CustomReflectable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/Hashable-Implementations":{"title":"Hashable Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/hashable-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/Hashable-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/Equatable-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/equatable-implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/Equatable-Implementations","title":"Equatable Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/init(_:)-9wrfx":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/init(_:)-9wrfx","title":"init(_:)","type":"topic","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/init(_:)-9wrfx","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax":{"navigatorTitle":[{"kind":"identifier","text":"StringSegmentSyntax"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax","abstract":[{"type":"text","text":"A literal segment inside a string segment."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringSegmentSyntax"}],"kind":"symbol","title":"StringSegmentSyntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax":{"title":"ExpressionSegmentSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressionSegmentSyntax"}],"abstract":[{"text":"An interpolated expression inside a string literal.","type":"text"}],"navigatorTitle":[{"text":"ExpressionSegmentSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax"}}}