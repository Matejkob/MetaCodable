{"metadata":{"roleHeading":"Instance Property","symbolKind":"property","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"keyPathInParent","externalID":"s:11SwiftSyntax0B8ProtocolPAAE15keyPathInParents06AnyKeyE0CSgvp::SYNTHESIZED::s:11SwiftSyntax028PrecedenceGroupAssociativityB0V","modules":[{"name":"SwiftSyntax"}],"extendedModule":"SwiftSyntax"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyPathInParent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath"},{"kind":"text","text":"? { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/swiftsyntax\/precedencegroupassociativitysyntax\/keypathinparent"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax\/SyntaxProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax\/keyPathInParent","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"SyntaxProtocol.keyPathInParent","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PrecedenceGroupAssociativitySyntax/keyPathInParent":{"role":"symbol","title":"keyPathInParent","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/precedencegroupassociativitysyntax\/keypathinparent","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax\/keyPathInParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PrecedenceGroupAssociativitySyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/swiftsyntax\/precedencegroupassociativitysyntax\/syntaxprotocol-implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PrecedenceGroupAssociativitySyntax":{"title":"PrecedenceGroupAssociativitySyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax","url":"\/documentation\/swiftsyntax\/precedencegroupassociativitysyntax","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrecedenceGroupAssociativitySyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PrecedenceGroupAssociativitySyntax","kind":"identifier"}],"abstract":[{"text":"Specifies how a sequence of operators with the same precedence level are grouped together in the absence of grouping parentheses.","type":"text"}]}}}