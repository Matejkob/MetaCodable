{"abstract":[{"text":"Returns a new ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection"},{"type":"text","text":" that just contains the elements"},{"text":" ","type":"text"},{"text":"satisfying the given predicate.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/filter(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/SyntaxCollection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"filter"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"isIncluded","kind":"internalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:SK7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an element of the","type":"text"},{"text":" ","type":"text"},{"text":"collection as its argument and returns a Boolean value indicating","type":"text"},{"type":"text","text":" "},{"text":"whether the element should be included in the returned collection.","type":"text"}]}],"name":"isIncluded"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","isActive":true,"type":"reference"},{"type":"text","text":" of the elements that "},{"type":"codeVoice","code":"isIncluded"},{"type":"text","text":" allowed."}],"type":"paragraph"}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This creates a new "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","isActive":true},{"type":"text","text":" node. If the resulting node"},{"text":" ","type":"text"},{"text":"is not needed (e.g. because itâ€™s only being iterated), convert the","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","isActive":true},{"type":"text","text":" to an array first or use the "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clause in"},{"text":" ","type":"text"},{"type":"text","text":"a "},{"code":"for","type":"codeVoice"},{"text":" statement.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/filter(_:)"]}],"sections":[],"metadata":{"modules":[{"name":"SwiftSyntax"}],"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:SK7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:11SwiftSyntax0B10CollectionPAAE6filteryxSb7ElementQzKXEKF::SYNTHESIZED::s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","extendedModule":"SwiftSyntax","role":"symbol","title":"filter(_:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax":{"url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"title":"SimpleStringLiteralSegmentListSyntax","navigatorTitle":[{"text":"SimpleStringLiteralSegmentListSyntax","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxCollection":{"url":"\/documentation\/swiftsyntax\/syntaxcollection","navigatorTitle":[{"text":"SyntaxCollection","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","type":"topic","title":"SyntaxCollection","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxCollection","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax/filter(_:)":{"abstract":[{"text":"Returns a new ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","type":"reference","isActive":true},{"type":"text","text":" that just contains the elements"},{"type":"text","text":" "},{"text":"satisfying the given predicate.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/filter(_:)","title":"filter(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"filter"},{"text":"((","kind":"text"},{"text":"Element","preciseIdentifier":"s:SK7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/filter(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax/SyntaxCollection-Implementations":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/SyntaxCollection-Implementations","kind":"article","url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/syntaxcollection-implementations","type":"topic","role":"collectionGroup","title":"SyntaxCollection Implementations"}}}