{"variants":[{"paths":["\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/index(of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/SyntaxCollection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"node","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildrenIndex"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"node"},{"text":" is not part of this collection, returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is functionally equivalent to the one that takes"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","isActive":true,"type":"reference"},{"text":". It is provided because otherwise ","type":"text"},{"type":"codeVoice","code":"Collection.index(of:)"},{"type":"text","text":" "},{"type":"text","text":"is chosen, which is marked as deprecated and renamed to "},{"code":"firstIndex(of:)","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"Note","type":"aside","style":"note"}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/index(of:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"SwiftSyntax"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Element","preciseIdentifier":"s:SK7ElementQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex"},{"kind":"text","text":"?"}],"extendedModule":"SwiftSyntax","roleHeading":"Instance Method","externalID":"s:11SwiftSyntax0B10CollectionPAAE5index2ofAA0B13ChildrenIndexVSg7ElementQz_tF::SYNTHESIZED::s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","symbolKind":"method","title":"index(of:)"},"kind":"symbol","abstract":[{"text":"Return the index of ","type":"text"},{"type":"codeVoice","code":"node"},{"type":"text","text":" within this collection."}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax/index(of:)":{"title":"index(of:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SK7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/index(of:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the index of "},{"type":"codeVoice","code":"node"},{"text":" within this collection.","type":"text"}],"url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/index(of:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax/SyntaxCollection-Implementations":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/SyntaxCollection-Implementations","kind":"article","url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/syntaxcollection-implementations","type":"topic","role":"collectionGroup","title":"SyntaxCollection Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildrenIndex":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"An index in a syntax children collection."}],"url":"\/documentation\/swiftsyntax\/syntaxchildrenindex","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildrenIndex","type":"topic","navigatorTitle":[{"text":"SyntaxChildrenIndex","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildrenIndex"}],"title":"SyntaxChildrenIndex"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax":{"url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"title":"SimpleStringLiteralSegmentListSyntax","navigatorTitle":[{"text":"SimpleStringLiteralSegmentListSyntax","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}]}}}