{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2asyqd__Sgqd__mAA0B8ProtocolRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2asyqd__Sgqd__mAA0B8ProtocolRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"? ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An instance of the specialized syntax type, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the cast fails.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"This method is marked as deprecated because it is advised not to use it for unrelated casts."}],"type":"paragraph"}],"name":"Note"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices\/as(_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"platforms":[],"title":"as(_:)","modules":[{"name":"SwiftSyntax"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:11SwiftSyntax0B12ChildChoicesPAAE2asyqd__Sgqd__mAA0B8ProtocolRd__lF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2asyqd__Sgqd__mAA0B8ProtocolRd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2asyqd__Sgqd__mAA0B8ProtocolRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"extendedModule":"SwiftSyntax"},"deprecationSummary":[{"inlineContent":[{"text":"This cast will always fail","type":"text"}],"type":"paragraph"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/syntaxchildchoices\/as(_:)"]}],"abstract":[{"text":"Attempts to cast the current ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","isActive":true},{"type":"text","text":" instance to a given specialized syntax type."}],"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildChoices":{"url":"\/documentation\/swiftsyntax\/syntaxchildchoices","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxChildChoices","kind":"identifier"}],"type":"topic","title":"SyntaxChildChoices","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxChildChoices"}],"abstract":[{"type":"text","text":"Protocol for the enums nested inside "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" nodes that enumerate all the"},{"type":"text","text":" "},{"type":"text","text":"possible types a child node might have."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildChoices/as(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2asyqd__Sgqd__mAA0B8ProtocolRd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2asyqd__Sgqd__mAA0B8ProtocolRd__lF1SL_qd__mfp"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices\/as(_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxchildchoices\/as(_:)","title":"as(_:)","deprecated":true,"abstract":[{"type":"text","text":"Attempts to cast the current "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","isActive":true},{"text":" instance to a given specialized syntax type.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]}}}