{"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"SwiftSyntax","title":"as(_:)","platforms":[],"role":"symbol","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE2asyxSgxmF::SYNTHESIZED::s:11SwiftSyntax028DerivativeAttributeArgumentsB0V","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The current syntax node."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"as","type":"codeVoice"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always succeed."}]}],"style":"note","type":"aside"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/as(_:)-1wvgo","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax\/as(_:)-1wvgo"]}],"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DerivativeAttributeArgumentsSyntax/as(_:)-1wvgo":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/as(_:)-1wvgo","type":"topic","url":"\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax\/as(_:)-1wvgo","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DerivativeAttributeArgumentsSyntax":{"title":"DerivativeAttributeArgumentsSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DerivativeAttributeArgumentsSyntax"}],"abstract":[{"text":"The arguments for the ‘@derivative(of:)’ and ‘@transpose(of:)’ attributes: the ‘of:’ label, the original declaration name, and an optional differentiability parameter list.","type":"text"}],"navigatorTitle":[{"text":"DerivativeAttributeArgumentsSyntax","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DerivativeAttributeArgumentsSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/SyntaxProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax\/syntaxprotocol-implementations"}}}