{"metadata":{"role":"symbol","title":"asProtocol(_:)","extendedModule":"SwiftSyntax","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":"?"}],"symbolKind":"method","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA017WithTrailingCommaB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax028DerivativeAttributeArgumentsB0V","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/asProtocol(_:)-2elvm"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithTrailingCommaSyntax","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax\/asprotocol(_:)-2elvm"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DerivativeAttributeArgumentsSyntax":{"title":"DerivativeAttributeArgumentsSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DerivativeAttributeArgumentsSyntax"}],"abstract":[{"text":"The arguments for the ‘@derivative(of:)’ and ‘@transpose(of:)’ attributes: the ‘of:’ label, the original declaration name, and an optional differentiability parameter list.","type":"text"}],"navigatorTitle":[{"text":"DerivativeAttributeArgumentsSyntax","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DerivativeAttributeArgumentsSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/SyntaxProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax\/syntaxprotocol-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DerivativeAttributeArgumentsSyntax/asProtocol(_:)-2elvm":{"url":"\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax\/asprotocol(_:)-2elvm","title":"asProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/asProtocol(_:)-2elvm","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/WithTrailingCommaSyntax":{"abstract":[],"role":"symbol","type":"topic","title":"WithTrailingCommaSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithTrailingCommaSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/withtrailingcommasyntax","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"WithTrailingCommaSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"WithTrailingCommaSyntax","kind":"identifier"}]}}}