{"metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"is(_:)","extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF::SYNTHESIZED::s:11SwiftSyntax016DeclModifierListB0V","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"modules":[{"name":"SwiftSyntax"}]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierListSyntax\/is(_:)-5ky0j"},"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"variants":[{"paths":["\/documentation\/swiftsyntax\/declmodifierlistsyntax\/is(_:)-5ky0j"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the node can be cast, "},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierListSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclModifierListSyntax/is(_:)-5ky0j":{"title":"is(_:)","type":"topic","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierListSyntax\/is(_:)-5ky0j","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/declmodifierlistsyntax\/is(_:)-5ky0j"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclModifierListSyntax/SyntaxProtocol-Implementations":{"type":"topic","title":"SyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/declmodifierlistsyntax\/syntaxprotocol-implementations","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierListSyntax\/SyntaxProtocol-Implementations","abstract":[],"kind":"article"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclModifierListSyntax":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclModifierListSyntax","kind":"identifier"}],"title":"DeclModifierListSyntax","navigatorTitle":[{"text":"DeclModifierListSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/declmodifierlistsyntax","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierListSyntax","abstract":[],"kind":"symbol"}}}