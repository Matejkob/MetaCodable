{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/SyntaxProtocol-Implementations"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","metadata":{"title":"SyntaxProtocol Implementations","modules":[{"name":"SwiftSyntax"}],"roleHeading":"API Collection","role":"collectionGroup"},"sections":[],"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/init(_:)-2feov"]},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmedLength"],"title":"Instance Properties","anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/as(_:)-4jycg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/as(_:)-7uons","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/as(_:)-8ta7i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-15s4f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1gc0x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1kjx1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1kohr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1xhg9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1y0jt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-28yl9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-2dah0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-2gray","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-5hec2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-5qqss","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-8iokd","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-93wqq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-c3hm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/cast(_:)-31ec7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/cast(_:)-813d7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/cast(_:)-8gv6e","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/is(_:)-2woc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/is(_:)-6x64r","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/is(_:)-7p1zz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-1by3t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-1r6ez","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-29pmg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-2c750","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-2f0d5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-2nmvi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-3jgmm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-3tknm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-4n2xh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-5sg6n","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-6ip2x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-6ml6h","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-7rfzg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-7rvd0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/with(_:_:)-4pksr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/write(to:)"],"generated":true,"anchor":"Instance-Methods"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/totalLength":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/totalLength","title":"totalLength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/totallength","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/is(_:)-6x64r":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/is(_:)-6x64r","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"is(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/is(_:)-6x64r"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/positionAfterSkippingLeadingTrivia":{"abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"role":"symbol","title":"positionAfterSkippingLeadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/positionAfterSkippingLeadingTrivia","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/positionafterskippingleadingtrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-93wqq":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-93wqq","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-93wqq","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/as(_:)-8ta7i":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":"?","kind":"text"}],"title":"as(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/as(_:)-8ta7i","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/as(_:)-8ta7i","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-1by3t":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-1by3t","title":"isProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-1by3t","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/totalByteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/totalByteRange","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"kind":"symbol","role":"symbol","title":"totalByteRange","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/totalbyterange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/root":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"text":": ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"title":"root","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/root","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/root","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/hasParent":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/hasparent","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasParent"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasParent","title":"hasParent","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-28yl9":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-28yl9","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-28yl9","kind":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/trimmed(matching:)":{"abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/trimmed(matching:)","title":"trimmed(matching:)","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-5qqss":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-5qqss","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-5qqss","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"text":"SourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"kind":"symbol","role":"symbol","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/syntaxTextBytes":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":"]"}],"title":"syntaxTextBytes","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/syntaxtextbytes","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/syntaxTextBytes","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/nextToken(viewMode:)":{"title":"nextToken(viewMode:)","role":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"type":"text","text":"after this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/nexttoken(viewmode:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/leadingTrivia":{"title":"leadingTrivia","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/leadingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/leadingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"kind":"symbol","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/parent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/parent","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","title":"parent","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-1gc0x":{"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-1gc0x","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1gc0x","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/is(_:)-7p1zz":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/is(_:)-7p1zz","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/is(_:)-7p1zz","kind":"symbol","role":"symbol","title":"is(_:)","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-3jgmm":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-3jgmm","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-3jgmm","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/as(_:)-4jycg":{"type":"topic","deprecated":true,"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/as(_:)-4jycg","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/as(_:)-4jycg","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/nextToken":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/nexttoken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"role":"symbol","deprecated":true,"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/nextToken","title":"nextToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/kind":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"kind"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"title":"kind","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/kind","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"text":"(","kind":"text"},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":"?, "},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"kind":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/tokens(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/tokens(viewMode:)","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier","text":"TokenSequence"}],"kind":"symbol","role":"symbol","title":"tokens(viewMode:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/tokens(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/write(to:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Target","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"write(to:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/write(to:)","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/write(to:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/byteSizeAfterTrimmingTrivia":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/byteSizeAfterTrimmingTrivia","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/bytesizeaftertrimmingtrivia","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"kind":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"deprecated":true,"role":"symbol","title":"byteSizeAfterTrimmingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/children(viewMode:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"children"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A sequence over the children of this node."}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/children(viewmode:)","title":"children(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/children(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/byteSize":{"type":"topic","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/byteSize","title":"byteSize","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/bytesize","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/trimmed":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmed","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/trimmed","title":"trimmed","abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/keyPathInParent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/keyPathInParent","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/keypathinparent","abstract":[],"role":"symbol","title":"keyPathInParent","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-6ip2x":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-6ip2x","title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-6ip2x"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-2f0d5":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-2f0d5","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-2f0d5","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/previousToken(viewMode:)":{"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/previoustoken(viewmode:)","type":"topic","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"type":"text","text":"this node."}],"title":"previousToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/previousToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-1xhg9":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1xhg9","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-1xhg9","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isImplicit":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isimplicit","title":"isImplicit","deprecated":true,"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isImplicit","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/is(_:)-2woc":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/is(_:)-2woc","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","deprecated":true,"role":"symbol","title":"is(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/is(_:)-2woc"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/contentLength":{"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/contentlength","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/contentLength","abstract":[],"deprecated":true,"kind":"symbol","title":"contentLength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/trimmedByteRange":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"title":"trimmedByteRange","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/trimmedbyterange","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmedByteRange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/lastToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/lastToken(viewMode:)","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","title":"lastToken(viewMode:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/lasttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/cast(_:)-813d7":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/cast(_:)-813d7","type":"topic","role":"symbol","deprecated":true,"title":"cast(_:)","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/cast(_:)-813d7","kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/hasError":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"hasError","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/haserror","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasError","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-8iokd":{"kind":"symbol","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-8iokd","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-8iokd"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/as(_:)-7uons":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/as(_:)-7uons","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":"?"}],"kind":"symbol","deprecated":true,"role":"symbol","title":"as(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/as(_:)-7uons"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-5hec2":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-5hec2","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-5hec2","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/previousToken":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/previoustoken","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/previousToken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"previousToken","deprecated":true,"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-6ml6h":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-6ml6h","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-6ml6h"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/firstToken(viewMode:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"title":"firstToken(viewMode:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/firsttoken(viewmode:)","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/firstToken(viewMode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-7rvd0":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-7rvd0","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-7rvd0"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-29pmg":{"title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-29pmg","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-29pmg","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/lastToken":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"deprecated":true,"title":"lastToken","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/lasttoken","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/lastToken","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/startLocation(converter:afterLeadingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/startLocation(converter:afterLeadingTrivia:)","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"kind":"symbol","role":"symbol","title":"startLocation(converter:afterLeadingTrivia:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/startlocation(converter:afterleadingtrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-2dah0":{"type":"topic","role":"symbol","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-2dah0","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-2dah0"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/firstToken":{"title":"firstToken","deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/firsttoken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/firstToken","role":"symbol","abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/trimmedLength":{"title":"trimmedLength","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/trimmedlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmedLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/syntaxNodeType":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/syntaxNodeType","type":"topic","kind":"symbol","title":"syntaxNodeType","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/syntaxnodetype","role":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":".Type"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/position":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"title":"position","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/position","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"text":"trivia.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/position","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/endPosition":{"title":"endPosition","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/endposition","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/endPosition","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/id":{"title":"id","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/id","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/id","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"}],"abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-3tknm":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-3tknm","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-3tknm"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/init(_:)-2feov":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/init(_:)-2feov","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":"?)","kind":"text"}],"kind":"symbol","role":"symbol","title":"init(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/init(_:)-2feov"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-1kohr":{"title":"asProtocol(_:)","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-1kohr","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1kohr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/hasMaximumNestingLevelOverflow":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasMaximumNestingLevelOverflow","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","type":"topic","title":"hasMaximumNestingLevelOverflow","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/hasmaximumnestingleveloverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-1kjx1":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-1kjx1","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1kjx1","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-1r6ez":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-1r6ez","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-1r6ez"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-2nmvi":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-2nmvi","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-2nmvi","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/with(_:_:)-4pksr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/with(_:_:)-4pksr","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"with"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","role":"symbol","title":"with(_:_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/with(_:_:)-4pksr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/endLocation(converter:afterTrailingTrivia:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"title":"endLocation(converter:afterTrailingTrivia:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/endlocation(converter:aftertrailingtrivia:)","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/endLocation(converter:afterTrailingTrivia:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/endPositionBeforeTrailingTrivia","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"kind":"symbol","role":"symbol","title":"endPositionBeforeTrailingTrivia","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/endpositionbeforetrailingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-c3hm":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-c3hm","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","title":"asProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-c3hm"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-15s4f":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-15s4f","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-15s4f","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-7rfzg":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-7rfzg","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-7rfzg"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-4n2xh":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-4n2xh","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-4n2xh"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/detached":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/detached","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"detached"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","role":"symbol","title":"detached","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/trimmedDescription":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"title":"trimmedDescription","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/trimmeddescription","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmedDescription","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-1y0jt":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-1y0jt","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","title":"asProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-1y0jt"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/description":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"description","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/description","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/description","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/cast(_:)-31ec7":{"title":"cast(_:)","kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/cast(_:)-31ec7","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/cast(_:)-31ec7"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"GenericArgumentSyntax","kind":"identifier"}],"title":"GenericArgumentSyntax","url":"\/documentation\/swiftsyntax\/genericargumentsyntax","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax","type":"topic","abstract":[],"navigatorTitle":[{"text":"GenericArgumentSyntax","kind":"identifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/detach()":{"title":"detach()","type":"topic","kind":"symbol","role":"symbol","abstract":[],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/detach()","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/detach()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/hasWarning":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasWarning","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"reference","isActive":true},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasWarning"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","role":"symbol","title":"hasWarning","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/haswarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/cast(_:)-8gv6e":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"deprecated":true,"title":"cast(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/cast(_:)-8gv6e","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node.."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/cast(_:)-8gv6e","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-5sg6n":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-5sg6n","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-5sg6n"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/trailingTriviaLength":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"title":"trailingTriviaLength","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/trailingtrivialength","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trailingTriviaLength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/hasSequenceExpr":{"type":"topic","kind":"symbol","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/hasSequenceExpr","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/hassequenceexpr","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasSequenceExpr"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"hasSequenceExpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/trailingTrivia":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"}],"abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/trailingtrivia","type":"topic","title":"trailingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trailingTrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/leadingTriviaLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"kind":"symbol","role":"symbol","title":"leadingTriviaLength","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/leadingtrivialength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/trimmedDescription(matching:)":{"abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"type":"topic","kind":"symbol","title":"trimmedDescription(matching:)","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/trimmeddescription(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/token(at:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/token(at:)","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"syntax node or any of its children."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/token(at:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"title":"token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/byteRange":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/byteRange","deprecated":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"title":"byteRange","abstract":[],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/byterange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/index":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/index","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/index","role":"symbol","type":"topic","title":"index","deprecated":true,"abstract":[{"text":"The index of this node in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","isActive":true},{"type":"text","text":" collection."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/asProtocol(_:)-2gray":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/asProtocol(_:)-2gray","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/asprotocol(_:)-2gray","kind":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/debugDescription":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"debugDescription","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/debugdescription","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/debugDescription","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/isProtocol(_:)-2c750":{"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/isprotocol(_:)-2c750","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/isProtocol(_:)-2c750"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/node(at:)":{"type":"topic","kind":"symbol","abstract":[{"text":"If the node with the given ","type":"text"},{"code":"syntaxIdentifier","type":"codeVoice"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/node(at:)","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/node(at:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier","text":"SyntaxIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":"?","kind":"text"}],"title":"node(at:)"}}}