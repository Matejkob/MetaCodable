{"metadata":{"modules":[{"name":"SwiftSyntax"}],"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":"?","kind":"text"}],"role":"symbol","symbolKind":"method","extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA026FreestandingMacroExpansionB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax016FunctionCallExprB0V","roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/swiftsyntax\/functioncallexprsyntax\/asprotocol(_:)-f0fq"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionCallExprSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionCallExprSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionCallExprSyntax\/asProtocol(_:)-f0fq"},"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FreestandingMacroExpansionSyntax","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/FunctionCallExprSyntax":{"title":"FunctionCallExprSyntax","type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FunctionCallExprSyntax","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"FunctionCallExprSyntax"}],"url":"\/documentation\/swiftsyntax\/functioncallexprsyntax","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionCallExprSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/FunctionCallExprSyntax/asProtocol(_:)-f0fq":{"url":"\/documentation\/swiftsyntax\/functioncallexprsyntax\/asprotocol(_:)-f0fq","title":"asProtocol(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionCallExprSyntax\/asProtocol(_:)-f0fq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/FunctionCallExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionCallExprSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/swiftsyntax\/functioncallexprsyntax\/syntaxprotocol-implementations","role":"collectionGroup","kind":"article","abstract":[],"title":"SyntaxProtocol Implementations","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/FreestandingMacroExpansionSyntax":{"navigatorTitle":[{"kind":"identifier","text":"FreestandingMacroExpansionSyntax"}],"abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/freestandingmacroexpansionsyntax","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FreestandingMacroExpansionSyntax","kind":"identifier"}],"type":"topic","title":"FreestandingMacroExpansionSyntax","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FreestandingMacroExpansionSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"}}}