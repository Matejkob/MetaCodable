{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"SwiftSyntax","roleHeading":"Instance Property","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE13leadingTriviaAA0E0Vvp::SYNTHESIZED::s:11SwiftSyntax018GenericWhereClauseB0V","role":"symbol","title":"leadingTrivia","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Trivia"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"kind":"keyword","text":"set"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Trivia is always attached to tokens, not to layout nodes. This will return the leading trivia of the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"within the subtree. If no such token exists, this returns empty trivia."}],"type":"paragraph"},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Trivia"},{"type":"text","text":" is not able to represent invalid UTF-8 sequences. To get"},{"text":" ","type":"text"},{"text":"the leading trivia text including all invalid UTF-8 sequences, use","type":"text"}],"type":"paragraph"}]},{"type":"codeListing","syntax":null,"code":["node.syntaxTextBytes.prefix(self.leadingTriviaLength.utf8Length)"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax\/leadingTrivia"},"variants":[{"paths":["\/documentation\/swiftsyntax\/genericwhereclausesyntax\/leadingtrivia"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericWhereClauseSyntax/SyntaxProtocol-Implementations":{"kind":"article","title":"SyntaxProtocol Implementations","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/swiftsyntax\/genericwhereclausesyntax\/syntaxprotocol-implementations","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericWhereClauseSyntax/leadingTrivia":{"type":"topic","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax\/leadingTrivia","url":"\/documentation\/swiftsyntax\/genericwhereclausesyntax\/leadingtrivia","title":"leadingTrivia","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericWhereClauseSyntax":{"title":"GenericWhereClauseSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GenericWhereClauseSyntax"}],"url":"\/documentation\/swiftsyntax\/genericwhereclausesyntax","abstract":[{"type":"text","text":"A "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clause that places additional constraints on generic parameters like "},{"type":"codeVoice","code":"where Element: Hashable"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"GenericWhereClauseSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Trivia":{"url":"\/documentation\/swiftsyntax\/trivia","title":"Trivia","abstract":[{"type":"text","text":"Trivia represent pieces of the source code that are not relevant to represent"},{"type":"text","text":" "},{"text":"its semantic structure.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Trivia"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Trivia","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Trivia","kind":"symbol"}}}