{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntaxProtocol\/is(_:)-z71x"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntaxProtocol"]]},"kind":"symbol","deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Type argument should be part of the 'DeclSyntaxProtocol' hierarchy","type":"text"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax04DeclB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","text":"SyntaxProtocol"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the node can be cast, "},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"In most cases, this is comparing a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntaxProtocol"},{"type":"text","text":" to a node that is not a"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntaxProtocol"},{"type":"text","text":", which will always fail. If the "},{"code":"syntaxType","type":"codeVoice"},{"text":" argument is a generic type,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constrain it to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntaxProtocol","isActive":true,"type":"reference"},{"text":" instead of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","isActive":true},{"text":".","type":"text"}]}]}]}],"metadata":{"extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax04DeclB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF","symbolKind":"method","title":"is(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04DeclB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Instance Method","platforms":[]},"sections":[],"abstract":[{"text":"Checks if the current syntax node can be cast to a given node type from a base node protocol hierarchy other","type":"text"},{"type":"text","text":" "},{"type":"text","text":"than "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntaxProtocol","isActive":true},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/declsyntaxprotocol\/is(_:)-z71x"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclSyntaxProtocol/is(_:)-z71x":{"deprecated":true,"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntaxProtocol\/is(_:)-z71x","url":"\/documentation\/swiftsyntax\/declsyntaxprotocol\/is(_:)-z71x","kind":"symbol","title":"is(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax04DeclB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given node type from a base node protocol hierarchy other"},{"text":" ","type":"text"},{"type":"text","text":"than "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntaxProtocol"},{"text":".","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclSyntax":{"abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declsyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DeclSyntax"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntax","title":"DeclSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclSyntaxProtocol":{"url":"\/documentation\/swiftsyntax\/declsyntaxprotocol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclSyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"DeclSyntaxProtocol","kind":"identifier"}],"title":"DeclSyntaxProtocol","abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntax","isActive":true},{"text":" nodes conform.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclSyntaxProtocol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]}}}