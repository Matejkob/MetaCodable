{"metadata":{"symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":")"}],"externalID":"s:11SwiftSyntax011MissingStmtB0VyACSgxhcAA0B8ProtocolRzlufc","role":"symbol","title":"init(_:)","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Initializer"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingStmtSyntax"]]},"variants":[{"paths":["\/documentation\/swiftsyntax\/missingstmtsyntax\/init(_:)-8yv7l"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"text":"conversion is not possible.","type":"text"}],"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingStmtSyntax\/init(_:)-8yv7l","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"?("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"node"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MissingStmtSyntax/init(_:)-8yv7l":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/swiftsyntax\/missingstmtsyntax\/init(_:)-8yv7l","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingStmtSyntax\/init(_:)-8yv7l","title":"init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"text":" if the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MissingStmtSyntax":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/missingstmtsyntax","title":"MissingStmtSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingStmtSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MissingStmtSyntax","kind":"identifier"}],"abstract":[{"text":"In case the source code is missing a statement, this node stands in place of the missing statement.","type":"text"}],"navigatorTitle":[{"text":"MissingStmtSyntax","kind":"identifier"}]}}}