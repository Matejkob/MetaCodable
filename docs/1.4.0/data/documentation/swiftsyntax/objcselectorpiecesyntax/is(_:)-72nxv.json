{"abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"text":" since the node is already of its own type.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"is"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"text":"informing the user that the cast will always succeed.","type":"text"}]}]}],"kind":"content"}],"metadata":{"platforms":[],"role":"symbol","extendedModule":"SwiftSyntax","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"modules":[{"name":"SwiftSyntax"}],"title":"is(_:)","roleHeading":"Instance Method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbxmF::SYNTHESIZED::s:11SwiftSyntax017ObjCSelectorPieceB0V"},"sections":[],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"This cast will always succeed"}],"type":"paragraph"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ObjCSelectorPieceSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ObjCSelectorPieceSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"paths":["\/documentation\/swiftsyntax\/objcselectorpiecesyntax\/is(_:)-72nxv"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ObjCSelectorPieceSyntax\/is(_:)-72nxv","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ObjCSelectorPieceSyntax":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ObjCSelectorPieceSyntax","url":"\/documentation\/swiftsyntax\/objcselectorpiecesyntax","abstract":[{"text":"A piece of an Objective-C selector. Either consisting of just an identifier for a nullary selector, an identifier and a colon for a labeled argument or just a colon for an unlabeled argument","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ObjCSelectorPieceSyntax","kind":"identifier"}],"title":"ObjCSelectorPieceSyntax","navigatorTitle":[{"kind":"identifier","text":"ObjCSelectorPieceSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ObjCSelectorPieceSyntax/is(_:)-72nxv":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/objcselectorpiecesyntax\/is(_:)-72nxv","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ObjCSelectorPieceSyntax\/is(_:)-72nxv","type":"topic","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ObjCSelectorPieceSyntax/SyntaxProtocol-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ObjCSelectorPieceSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/swiftsyntax\/objcselectorpiecesyntax\/syntaxprotocol-implementations","abstract":[],"title":"SyntaxProtocol Implementations"}}}