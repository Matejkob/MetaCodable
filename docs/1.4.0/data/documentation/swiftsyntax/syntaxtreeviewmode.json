{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxTreeViewMode","kind":"identifier"}],"languages":["swift"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"title":"SyntaxTreeViewMode","symbolKind":"enum","roleHeading":"Enumeration","role":"symbol","modules":[{"name":"SwiftSyntax"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"identifier"}],"externalID":"s:11SwiftSyntax0B12TreeViewModeO","navigatorTitle":[{"kind":"identifier","text":"SyntaxTreeViewMode"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"abstract":[{"type":"text","text":"Specifies how missing and unexpected nodes should be handled when traversing"},{"type":"text","text":" "},{"text":"a syntax tree.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"],"type":"conformsTo"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/syntaxtreeviewmode"]}],"topicSections":[{"generated":true,"title":"Enumeration Cases","anchor":"Enumeration-Cases","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode\/all","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode\/fixedUp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode\/sourceAccurate"]},{"generated":true,"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode\/Equatable-Implementations"]}],"references":{"doc://com.SwiftyLab.HelperCoders/SH":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","title":"Swift.Hashable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxTreeViewMode":{"abstract":[{"text":"Specifies how missing and unexpected nodes should be handled when traversing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a syntax tree."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxTreeViewMode"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode","url":"\/documentation\/swiftsyntax\/syntaxtreeviewmode","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxTreeViewMode"}],"title":"SyntaxTreeViewMode"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxTreeViewMode/fixedUp":{"role":"symbol","title":"SyntaxTreeViewMode.fixedUp","url":"\/documentation\/swiftsyntax\/syntaxtreeviewmode\/fixedup","abstract":[{"type":"text","text":"Views the syntax tree with fixes applied, that is missing nodes will be"},{"type":"text","text":" "},{"type":"text","text":"visited but unexpected nodes will be skipped."},{"text":" ","type":"text"},{"text":"This views the tree in a way thatâ€™s closer to being syntactical correct","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and should be used for structural analysis of the syntax tree."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode\/fixedUp","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"fixedUp","kind":"identifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxTreeViewMode/all":{"role":"symbol","title":"SyntaxTreeViewMode.all","url":"\/documentation\/swiftsyntax\/syntaxtreeviewmode\/all","abstract":[{"text":"Both missing and unexpected nodes will be traversed.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode\/all","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"all"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxTreeViewMode/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","url":"\/documentation\/swiftsyntax\/syntaxtreeviewmode\/equatable-implementations","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode\/Equatable-Implementations","kind":"article","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxTreeViewMode/sourceAccurate":{"title":"SyntaxTreeViewMode.sourceAccurate","role":"symbol","abstract":[{"type":"text","text":"Visit the tree in a way that reproduces the original source code."},{"text":" ","type":"text"},{"type":"text","text":"Missing nodes will not be visited, unexpected nodes will be visited."},{"text":" ","type":"text"},{"type":"text","text":"This mode is useful for source code transformations like a formatter."}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxtreeviewmode\/sourceaccurate","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode\/sourceAccurate","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceAccurate"}]}}}