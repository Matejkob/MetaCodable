{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/init(_:)-90eba","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/init(leadingTrivia:_:wrappedType:_:exclamationMark:_:trailingTrivia:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/exclamationMark","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/unexpectedAfterExclamationMark","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/unexpectedBeforeWrappedType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/unexpectedBetweenWrappedTypeAndExclamationMark","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/wrappedType"]},{"anchor":"Type-Properties","generated":true,"title":"Type Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/structure"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/SyntaxProtocol-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/TypeSyntaxProtocol-Implementations"],"anchor":"Default-Implementations"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}]}]},{"content":[{"anchor":"Children","type":"heading","text":"Children","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"wrappedType"},{"type":"text","text":": "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"exclamationMark","type":"codeVoice"},{"text":": ","type":"text"},{"type":"codeVoice","code":"!"}]}]}]}],"kind":"content"}],"sections":[],"metadata":{"externalID":"s:11SwiftSyntax031ImplicitlyUnwrappedOptionalTypeB0V","title":"ImplicitlyUnwrappedOptionalTypeSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImplicitlyUnwrappedOptionalTypeSyntax"}],"navigatorTitle":[{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}],"role":"symbol","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Structure","symbolKind":"struct"},"variants":[{"paths":["\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/exclamationMark":{"abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"exclamationMark"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"}],"role":"symbol","title":"exclamationMark","kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/exclamationmark","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/exclamationMark"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol","title":"ImplicitlyUnwrappedOptionalTypeSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/structure":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"structure","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","kind":"typeIdentifier"}],"kind":"symbol","title":"structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/structure","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/structure","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/unexpectedAfterExclamationMark":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/unexpectedAfterExclamationMark","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/unexpectedafterexclamationmark","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedAfterExclamationMark","kind":"identifier"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[],"role":"symbol","title":"unexpectedAfterExclamationMark"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/Equatable-Implementations":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/equatable-implementations","kind":"article"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/SyntaxProtocol-Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeSyntaxProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"TypeSyntaxProtocol"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/typesyntaxprotocol","title":"TypeSyntaxProtocol","abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","isActive":true},{"text":" nodes conform.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/wrappedType":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/wrappedType","role":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/wrappedtype","title":"wrappedType","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedType","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/TypeSyntaxProtocol-Implementations":{"role":"collectionGroup","title":"TypeSyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/typesyntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/TypeSyntaxProtocol-Implementations","kind":"article","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/SH":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","title":"Swift.Hashable"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","title":"Swift.Sendable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntax":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/typesyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeSyntax"}],"title":"TypeSyntax","navigatorTitle":[{"text":"TypeSyntax","kind":"identifier"}],"role":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxHashable"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxhashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","role":"symbol","title":"SyntaxHashable","abstract":[{"text":"Protocol that provides a common Hashable implementation for all syntax nodes","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/init(_:)-90eba":{"title":"init(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/init(_:)-90eba","kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/init(_:)-90eba","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")"}],"abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"text":" ","type":"text"},{"text":"conversion is not possible.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/unexpectedBeforeWrappedType":{"kind":"symbol","title":"unexpectedBeforeWrappedType","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBeforeWrappedType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/unexpectedBeforeWrappedType","abstract":[],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/unexpectedbeforewrappedtype","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/Hashable-Implementations":{"role":"collectionGroup","kind":"article","title":"Hashable Implementations","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/hashable-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/Hashable-Implementations","abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/SQ":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","title":"Swift.Equatable"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","type":"unresolvable","title":"Swift.TextOutputStreamable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/CustomReflectable-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/customreflectable-implementations","role":"collectionGroup","title":"CustomReflectable Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/CustomReflectable-Implementations","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/unexpectedBetweenWrappedTypeAndExclamationMark":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/unexpectedBetweenWrappedTypeAndExclamationMark","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/unexpectedbetweenwrappedtypeandexclamationmark","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"unexpectedBetweenWrappedTypeAndExclamationMark","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"unexpectedBetweenWrappedTypeAndExclamationMark","abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","type":"unresolvable","title":"Swift.CustomReflectable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/init(leadingTrivia:_:wrappedType:_:exclamationMark:_:trailingTrivia:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/init(leadingtrivia:_:wrappedtype:_:exclamationmark:_:trailingtrivia:)","role":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/init(leadingTrivia:_:wrappedType:_:exclamationMark:_:trailingTrivia:)","title":"init(leadingTrivia:_:wrappedType:_:exclamationMark:_:trailingTrivia:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"leadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"wrappedType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"TypeSyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolP"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"exclamationMark"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?, "},{"text":"trailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"text":"?)","kind":"text"}],"type":"topic"}}}