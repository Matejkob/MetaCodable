{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This cast will always succeed","type":"text"}]}],"sections":[],"variants":[{"paths":["\/documentation\/swiftsyntax\/regexliteralexprsyntax\/is(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Checks if the current syntax node can be upcast to its base node type (","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","type":"reference","isActive":true},{"type":"text","text":")."}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/ExprSyntaxProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/is(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ExprSyntax","preciseIdentifier":"s:11SwiftSyntax04ExprB0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" since the node can always be upcast to its base node."}]}]}],"metadata":{"modules":[{"name":"SwiftSyntax"}],"platforms":[],"externalID":"s:11SwiftSyntax04ExprB8ProtocolPAAE2isySbAA0cB0VmF::SYNTHESIZED::s:11SwiftSyntax016RegexLiteralExprB0V","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ExprSyntax","preciseIdentifier":"s:11SwiftSyntax04ExprB0V"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","title":"is(_:)","symbolKind":"method","extendedModule":"SwiftSyntax"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/ExprSyntaxProtocol-Implementations":{"type":"topic","title":"ExprSyntaxProtocol Implementations","kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/ExprSyntaxProtocol-Implementations","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/exprsyntaxprotocol-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntax":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","title":"ExprSyntax","url":"\/documentation\/swiftsyntax\/exprsyntax","type":"topic","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax":{"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax","type":"topic","abstract":[],"title":"RegexLiteralExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegexLiteralExprSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"RegexLiteralExprSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/is(_:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/is(_:)","kind":"symbol","role":"symbol","title":"is(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","kind":"typeIdentifier","text":"ExprSyntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/is(_:)","abstract":[{"text":"Checks if the current syntax node can be upcast to its base node type (","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","isActive":true},{"type":"text","text":")."}],"type":"topic","deprecated":true}}}