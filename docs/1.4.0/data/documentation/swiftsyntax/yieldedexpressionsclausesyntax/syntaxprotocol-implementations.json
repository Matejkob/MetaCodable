{"metadata":{"roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"SwiftSyntax"}],"title":"SyntaxProtocol Implementations"},"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/init(_:)-2qk67"],"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedLength"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-2873w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-5v2ud","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-63e04","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-180d7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-3q9rn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-4eimb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-4j403","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-5xzoj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-7sb9c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-87c2o","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-8t5fs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-98yxu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-9atuo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-bfce","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-ingm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-osf5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-xgrs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-15tbx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-1qk6h","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-3vjln","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-405rb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-8wni1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-92thi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1emiv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1fcai","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1xf2g","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-2lnn1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-38ped","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3elmq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3m7yd","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3nc7p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-4i0om","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-6ad0a","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-6hk3e","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-7vzo8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-9pdhg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-o2cy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/write(to:)"],"generated":true,"anchor":"Instance-Methods"}],"sections":[],"kind":"article","identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/firstToken":{"role":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/firsttoken","type":"topic","abstract":[],"title":"firstToken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/firstToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/init(_:)-2qk67":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/init(_:)-2qk67","title":"init(_:)","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/init(_:)-2qk67","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/previousToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/previousToken","role":"symbol","kind":"symbol","abstract":[],"title":"previousToken","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/previoustoken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasError":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"hasError","kind":"symbol","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/haserror","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasError"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","role":"symbol","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-bfce":{"type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-bfce","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-bfce","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmedByteRange":{"title":"trimmedByteRange","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmedbyterange","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedByteRange","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/kind":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"kind"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind"}],"title":"kind","kind":"symbol","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/kind","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/endPosition":{"type":"topic","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/endposition","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endPosition","title":"endPosition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-9pdhg":{"type":"topic","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-9pdhg","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-9pdhg","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/write(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Target"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"write(to:)","kind":"symbol","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/write(to:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/leadingTrivia":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/leadingtrivia","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"title":"leadingTrivia","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmed":{"title":"trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmed","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmed"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isImplicit":{"role":"symbol","title":"isImplicit","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isimplicit","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isImplicit","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"deprecated":true,"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasParent":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/hasparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasParent","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"hasParent","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-6hk3e":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-6hk3e","type":"topic","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-6hk3e"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasSequenceExpr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasSequenceExpr","title":"hasSequenceExpr","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/hassequenceexpr","type":"topic","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmedLength":{"type":"topic","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"type":"text","text":" "},{"text":"leading or trailing trivia.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmedlength","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedLength","title":"trimmedLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-9atuo":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-9atuo","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-9atuo","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/node(at:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"title":"node(at:)","kind":"symbol","abstract":[{"text":"If the node with the given ","type":"text"},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/node(at:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trailingTriviaLength":{"type":"topic","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trailingtrivialength","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trailingTriviaLength","title":"trailingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/as(_:)-63e04":{"title":"as(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"abstract":[{"text":"Attempts to upcast the current syntax node to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference"},{"type":"text","text":" node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/as(_:)-63e04","deprecated":true,"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-63e04"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmedDescription(matching:)":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmeddescription(matching:)","title":"trimmedDescription(matching:)","abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"text":" removed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-6ad0a":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-6ad0a","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-6ad0a"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/tokens(viewMode:)":{"title":"tokens(viewMode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tokens"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/tokens(viewmode:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-osf5":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-osf5","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-osf5","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/byteSize":{"deprecated":true,"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/bytesize","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteSize","kind":"symbol","title":"byteSize","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/is(_:)-92thi":{"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-92thi","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/is(_:)-92thi","title":"is(_:)","type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-1fcai":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-1fcai","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1fcai","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-7sb9c":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-7sb9c","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-7sb9c","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/index":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/index","title":"index","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/index","kind":"symbol","abstract":[{"text":"The index of this node in a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference"},{"type":"text","text":" collection."}],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-98yxu":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-98yxu","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-98yxu","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax","type":"topic","abstract":[],"title":"YieldedExpressionsClauseSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YieldedExpressionsClauseSyntax"}],"kind":"symbol","navigatorTitle":[{"text":"YieldedExpressionsClauseSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-xgrs":{"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-xgrs","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-xgrs","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-o2cy":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-o2cy","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-o2cy"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-2lnn1":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-2lnn1","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-2lnn1","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/id":{"kind":"symbol","title":"id","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/id","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/id"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasWarning":{"type":"topic","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic"},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/haswarning","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasWarning"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasWarning","title":"hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasMaximumNestingLevelOverflow":{"title":"hasMaximumNestingLevelOverflow","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/hasmaximumnestingleveloverflow","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasMaximumNestingLevelOverflow","kind":"symbol","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/root":{"type":"topic","kind":"symbol","title":"root","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/root","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/root","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-8t5fs":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-8t5fs","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-8t5fs","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/cast(_:)-1qk6h":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"cast(_:)","kind":"symbol","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/cast(_:)-1qk6h","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-1qk6h","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/detached":{"title":"detached","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"type":"text","text":"from its parent."}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/detached","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/detached","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmedDescription":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedDescription","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmeddescription","kind":"symbol","type":"topic","title":"trimmedDescription","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"text":" ","type":"text"},{"type":"text","text":"and trailing whitespace of the last token removed."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/lastToken(viewMode:)":{"type":"topic","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/lasttoken(viewmode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/lastToken(viewMode:)","title":"lastToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/is(_:)-405rb":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"is(_:)","kind":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/is(_:)-405rb","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-405rb","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/previousToken(viewMode:)":{"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/previoustoken(viewmode:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/previousToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"text":"this node.","type":"text"}],"kind":"symbol","title":"previousToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/nextToken(viewMode:)":{"type":"topic","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"type":"text","text":"after this node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/nexttoken(viewmode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/nextToken(viewMode:)","title":"nextToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/nextToken":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"nextToken","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/nexttoken","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/nextToken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/parent":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/parent","title":"parent","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trailingTrivia":{"type":"topic","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trailingtrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trailingTrivia"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trailingTrivia","title":"trailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/keyPathInParent":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyPathInParent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath"},{"text":"?","kind":"text"}],"title":"keyPathInParent","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/keypathinparent","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/keyPathInParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-38ped":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-38ped","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-38ped","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-3elmq":{"type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-3elmq","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3elmq","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/syntaxTextBytes":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"title":"syntaxTextBytes","kind":"symbol","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/syntaxtextbytes","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/syntaxTextBytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/totalByteRange":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/totalbyterange","title":"totalByteRange","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/totalByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/cast(_:)-15tbx":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/cast(_:)-15tbx","kind":"symbol","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"title":"cast(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-15tbx","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/as(_:)-5v2ud":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/as(_:)-5v2ud","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-5v2ud","type":"topic","title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/children(viewMode:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SyntaxChildren","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/children(viewmode:)","type":"topic","title":"children(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/children(viewMode:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-3nc7p":{"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-3nc7p","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3nc7p","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/description":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/description","title":"description","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/description","type":"topic","abstract":[{"text":"A source-accurate description of this node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-5xzoj":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-5xzoj","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-5xzoj","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/leadingTriviaLength":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"title":"leadingTriviaLength","kind":"symbol","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/leadingtrivialength","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/totalLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalLength"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/totallength","kind":"symbol","title":"totalLength","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/totalLength","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmed(matching:)":{"type":"topic","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmed(matching:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmed(matching:)","title":"trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-3m7yd":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3m7yd","type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-3m7yd","title":"isProtocol(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/firstToken(viewMode:)":{"title":"firstToken(viewMode:)","type":"topic","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/firstToken(viewMode:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/firsttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/with(_:_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/with(_:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"with"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"with(_:_:)","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/contentLength":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"title":"contentLength","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/contentlength","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/contentLength","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"type":"topic","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":"("},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","title":"debugDescription(includeTrivia:converter:mark:indentString:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/token(at:)":{"role":"symbol","title":"token(at:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/token(at:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/token(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-87c2o":{"title":"asProtocol(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-87c2o","type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-87c2o","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/byteSizeAfterTrimmingTrivia":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/bytesizeaftertrimmingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteSizeAfterTrimmingTrivia","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"kind":"symbol","role":"symbol","deprecated":true,"title":"byteSizeAfterTrimmingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-4i0om":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-4i0om","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-4i0om"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/endPositionBeforeTrailingTrivia":{"type":"topic","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/endpositionbeforetrailingtrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endPositionBeforeTrailingTrivia","title":"endPositionBeforeTrailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/detach()":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/detach()","title":"detach()","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/detach()","kind":"symbol","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-4j403":{"kind":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-4j403","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-4j403","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/as(_:)-2873w":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-2873w","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/as(_:)-2873w","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":"?"}],"type":"topic","title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/cast(_:)-3vjln":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"title":"cast(_:)","kind":"symbol","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node..","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/cast(_:)-3vjln","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-3vjln","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/is(_:)-8wni1":{"deprecated":true,"type":"topic","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/is(_:)-8wni1","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-8wni1","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/byteRange":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/byterange","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteRange","role":"symbol","title":"byteRange","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange","kind":"typeIdentifier"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-1emiv":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1emiv","role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-1emiv"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/position":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/position","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/position","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"role":"symbol","title":"position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/startLocation(converter:afterLeadingTrivia:)":{"title":"startLocation(converter:afterLeadingTrivia:)","kind":"symbol","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/startlocation(converter:afterleadingtrivia:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/positionAfterSkippingLeadingTrivia":{"title":"positionAfterSkippingLeadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/positionAfterSkippingLeadingTrivia","role":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia attached to the first token syntax."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/positionafterskippingleadingtrivia","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-180d7":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-180d7","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-180d7"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/lastToken":{"deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/lastToken","title":"lastToken","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/lasttoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/debugDescription":{"type":"topic","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/debugdescription","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/debugDescription","title":"debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-7vzo8":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-7vzo8","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-7vzo8","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/syntaxNodeType":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/syntaxnodetype","title":"syntaxNodeType","kind":"symbol","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/syntaxNodeType","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"kind":"text","text":".Type"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/endLocation(converter:afterTrailingTrivia:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"title":"endLocation(converter:afterTrailingTrivia:)","kind":"symbol","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/endlocation(converter:aftertrailingtrivia:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endLocation(converter:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-ingm":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-ingm","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":"?","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-ingm","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-1xf2g":{"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-1xf2g","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1xf2g","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-3q9rn":{"title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-3q9rn","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-3q9rn","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-4eimb":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-4eimb","type":"topic","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-4eimb"}}}