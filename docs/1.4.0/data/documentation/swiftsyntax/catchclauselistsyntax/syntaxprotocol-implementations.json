{"kind":"article","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/init(_:)-4jj5k","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/init(_:)-l3ak"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedLength"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-446kb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-7ohbs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-c2pg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-18hna","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-1el1m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-2a106","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-4hecw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-55ksr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-5c4mx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-5tlwx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-609wq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-62w2p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-7fexg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-7orfh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-8clbc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-8nrys","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-9kva8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-3aap6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-6b9d5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-9skvt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-3knua","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-5cujp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-9lzw8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-29k7t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-2avdn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-2u66v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-62xdc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-6jacv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-6vz4u","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-717lg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-720j3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-7xwf1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-7z3dw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-8dc4b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-8vm2z","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-9beie","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-ceks","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/write(to:)"],"generated":true},{"title":"Type Properties","anchor":"Type-Properties","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/structure"]}],"metadata":{"title":"SyntaxProtocol Implementations","roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"SwiftSyntax"}]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/firstToken":{"kind":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/firsttoken","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/firstToken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"firstToken","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/firstToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/firstToken(viewMode:)","title":"firstToken(viewMode:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/firsttoken(viewmode:)","kind":"symbol","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/cast(_:)-6b9d5":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-6b9d5","title":"cast(_:)","kind":"symbol","type":"topic","role":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/cast(_:)-6b9d5","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-9kva8":{"title":"asProtocol(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-9kva8","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-9kva8","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-2avdn":{"type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-2avdn","role":"symbol","kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-2avdn","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isImplicit":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isImplicit","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isimplicit","role":"symbol","title":"isImplicit","type":"topic","deprecated":true,"abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/cast(_:)-3aap6":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-3aap6","title":"cast(_:)","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/cast(_:)-3aap6","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}],"abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/keyPathInParent":{"title":"keyPathInParent","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/keypathinparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/keyPathInParent","abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmed":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmed","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmed","role":"symbol","title":"trimmed","kind":"symbol","type":"topic","abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"text":" ","type":"text"},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/kind":{"abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","type":"reference","isActive":true},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"kind"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","kind":"typeIdentifier","text":"SyntaxKind"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/kind","title":"kind","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/kind","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-6jacv":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-6jacv","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-6jacv","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-2a106":{"type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-2a106","role":"symbol","kind":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-2a106","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-720j3":{"title":"isProtocol(_:)","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-720j3","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-720j3"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/lastToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/lastToken(viewMode:)","title":"lastToken(viewMode:)","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/lasttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/endLocation(converter:afterTrailingTrivia:)":{"type":"topic","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/endlocation(converter:aftertrailingtrivia:)","role":"symbol","kind":"symbol","title":"endLocation(converter:afterTrailingTrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endLocation(converter:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/detached":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/detached","title":"detached","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/detached","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-8dc4b":{"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-8dc4b","role":"symbol","kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-8dc4b","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasWarning":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasWarning","title":"hasWarning","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/haswarning","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"reference","isActive":true},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/init(_:)-l3ak":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Children","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Children","preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp"},{"text":")","kind":"text"}],"title":"init(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/init(_:)-l3ak","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"text":" if the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/init(_:)-l3ak"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-4hecw":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-4hecw","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-4hecw","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-5tlwx":{"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-5tlwx","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-5tlwx","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/with(_:_:)":{"title":"with(_:_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/with(_:_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T"},{"text":">, ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"text":" ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/with(_:_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/children(viewMode:)":{"abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/children(viewMode:)","title":"children(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","text":"SyntaxChildren"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/children(viewmode:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/structure":{"title":"structure","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure"}],"abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/structure","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/structure","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-18hna":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-18hna","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-18hna","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/totalByteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/totalByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"title":"totalByteRange","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/totalbyterange","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/debugDescription":{"abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/debugdescription","title":"debugDescription","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/description":{"type":"topic","title":"description","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/description","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/description","kind":"symbol","abstract":[{"type":"text","text":"A source-accurate description of this node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasSequenceExpr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasSequenceExpr","kind":"symbol","role":"symbol","title":"hasSequenceExpr","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/hassequenceexpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-9beie":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-9beie","type":"topic","kind":"symbol","title":"isProtocol(_:)","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-9beie","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-29k7t":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-29k7t","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-29k7t","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","title":"isProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/as(_:)-446kb":{"type":"topic","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/as(_:)-446kb","role":"symbol","deprecated":true,"kind":"symbol","title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-446kb","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/root":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/root","type":"topic","title":"root","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/root","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/syntaxNodeType":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/syntaxNodeType","title":"syntaxNodeType","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/syntaxnodetype","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":".Type"}],"abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmedByteRange":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedByteRange","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange","kind":"typeIdentifier"}],"abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmedbyterange","title":"trimmedByteRange","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-717lg":{"kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-717lg","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-717lg"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/lastToken":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"title":"lastToken","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/lastToken","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/lasttoken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-8nrys":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-8nrys","role":"symbol","kind":"symbol","title":"asProtocol(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-8nrys","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-62xdc":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-62xdc","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-62xdc","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-7z3dw":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-7z3dw","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-7z3dw"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/nextToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/nextToken(viewMode:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"role":"symbol","title":"nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/nexttoken(viewmode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"type":"text","text":"after this node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/previousToken(viewMode:)":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/previoustoken(viewmode:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/previousToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"type":"topic","title":"previousToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/node(at:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/node(at:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/node(at:)","role":"symbol","abstract":[{"text":"If the node with the given ","type":"text"},{"code":"syntaxIdentifier","type":"codeVoice"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"text":"identifier.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier","text":"SyntaxIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/detach()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/detach()","title":"detach()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[],"deprecated":true,"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/detach()","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/is(_:)-9lzw8":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"is(_:)","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-9lzw8","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/is(_:)-9lzw8"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/is(_:)-5cujp":{"role":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/is(_:)-5cujp","type":"topic","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"title":"is(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-5cujp"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-55ksr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-55ksr","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-55ksr","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/previousToken":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"previousToken","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/previousToken","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/previoustoken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/index":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/index","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/index","role":"symbol","deprecated":true,"abstract":[{"text":"The index of this node in a ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference","isActive":true},{"text":" collection.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex"}],"title":"index"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/endPositionBeforeTrailingTrivia":{"abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"title":"endPositionBeforeTrailingTrivia","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/endpositionbeforetrailingtrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endPositionBeforeTrailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/token(at:)":{"title":"token(at:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"type":"text","text":"syntax node or any of its children."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/token(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmedLength":{"role":"symbol","title":"trimmedLength","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmedlength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedLength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-ceks":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-ceks","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-ceks","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/nextToken":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"nextToken","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/nextToken","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/nexttoken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-2u66v":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-2u66v","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-2u66v","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/syntaxTextBytes":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/syntaxTextBytes","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/syntaxtextbytes","role":"symbol","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"text":" ","type":"text"},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"title":"syntaxTextBytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/byteSize":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteSize","title":"byteSize","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/bytesize","deprecated":true,"type":"topic","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmedDescription(matching:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedDescription(matching:)","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmeddescription(matching:)","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"title":"trimmedDescription(matching:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-7xwf1":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-7xwf1","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-7xwf1","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/byteSizeAfterTrimmingTrivia":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"byteSizeAfterTrimmingTrivia","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteSizeAfterTrimmingTrivia","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/bytesizeaftertrimmingtrivia","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/id":{"role":"symbol","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/id","title":"id","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/id","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/byteRange":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteRange","kind":"symbol","deprecated":true,"role":"symbol","abstract":[],"title":"byteRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/byterange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/init(_:)-4jj5k":{"abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"title":"init(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/init(_:)-4jj5k","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/init(_:)-4jj5k","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-7fexg":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-7fexg","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-7fexg","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/startLocation(converter:afterLeadingTrivia:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/startLocation(converter:afterLeadingTrivia:)","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/startlocation(converter:afterleadingtrivia:)","title":"startLocation(converter:afterLeadingTrivia:)","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-8vm2z":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-8vm2z","type":"topic","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-8vm2z"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/write(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target"},{"text":")","kind":"text"}],"title":"write(to:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/write(to:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/write(to:)","kind":"symbol","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/positionAfterSkippingLeadingTrivia":{"abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/positionAfterSkippingLeadingTrivia","title":"positionAfterSkippingLeadingTrivia","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/positionafterskippingleadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasParent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasParent","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","role":"symbol","title":"hasParent","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/hasparent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-8clbc":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-8clbc","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-8clbc","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-62w2p":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-62w2p","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","title":"asProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-62w2p"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/leadingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/leadingTrivia","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/leadingtrivia","title":"leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trailingTrivia":{"abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"title":"trailingTrivia","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trailingtrivia","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trailingTrivia","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-5c4mx":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-5c4mx","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-5c4mx","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trailingTriviaLength":{"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trailingtrivialength","title":"trailingTriviaLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trailingTriviaLength","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/cast(_:)-9skvt":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-9skvt","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/cast(_:)-9skvt","title":"cast(_:)","deprecated":true,"abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"text":" node..","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-6vz4u":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-6vz4u","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-6vz4u"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/as(_:)-7ohbs":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-7ohbs","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/as(_:)-7ohbs","title":"as(_:)","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/parent":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/parent","title":"parent","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasMaximumNestingLevelOverflow":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasMaximumNestingLevelOverflow","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"hasMaximumNestingLevelOverflow","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/hasmaximumnestingleveloverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/is(_:)-3knua":{"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"text":" node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/is(_:)-3knua","kind":"symbol","title":"is(_:)","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-3knua","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax":{"title":"CatchClauseListSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CatchClauseListSyntax","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"CatchClauseListSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/totalLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/totalLength","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/totallength","title":"totalLength","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/endPosition":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/endposition","kind":"symbol","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"title":"endPosition","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endPosition","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasError":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasError","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"hasError","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/haserror"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/tokens(viewMode:)":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/tokens(viewMode:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"title":"tokens(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"TokenSequence","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/tokens(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-609wq":{"role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-609wq","title":"asProtocol(_:)","type":"topic","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-609wq","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmed(matching:)":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmed(matching:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"trimmed(matching:)","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmed(matching:)","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/position":{"title":"position","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/position","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceRange"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","kind":"typeIdentifier","text":"SourceRange"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/as(_:)-c2pg":{"title":"as(_:)","role":"symbol","deprecated":true,"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/as(_:)-c2pg","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-c2pg","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" node."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","kind":"symbol","role":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"includeTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-7orfh":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-7orfh","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-7orfh","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-1el1m":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-1el1m","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","title":"asProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-1el1m"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmedDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedDescription","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmeddescription","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","title":"trimmedDescription","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/contentLength":{"title":"contentLength","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/contentlength","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/contentLength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/leadingTriviaLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/leadingTriviaLength","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/leadingtrivialength","title":"leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"kind":"symbol"}}}