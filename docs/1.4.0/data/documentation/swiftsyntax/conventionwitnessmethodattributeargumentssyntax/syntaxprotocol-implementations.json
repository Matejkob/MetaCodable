{"metadata":{"role":"collectionGroup","title":"SyntaxProtocol Implementations","modules":[{"name":"SwiftSyntax"}],"roleHeading":"API Collection"},"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax"]]},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/init(_:)-4kqva"],"anchor":"Initializers","title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmedLength"],"generated":true,"anchor":"Instance-Properties"},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/as(_:)-19813","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/as(_:)-5jlvn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/as(_:)-8ues9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-18zrh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-1a9gi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-1p9rm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-1xpku","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-2u0zx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-3ogpm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-3znre","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-4mdxu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-7nqu3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-7xtkz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9fo5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9g4b3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9j8h4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9sbc9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/cast(_:)-11wgo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/cast(_:)-1ilnp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/cast(_:)-c9nd","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/is(_:)-1rlp7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/is(_:)-65kq1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/is(_:)-7uyac","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-26cul","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-2rdn1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-35oa8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-3vfnv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-4dw6t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-4dwn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-57y0j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-67fa0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-6oq5o","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-81wrf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-8gefr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-8s5jz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-9623f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-9yn7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/write(to:)"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/cast(_:)-c9nd":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/cast(_:)-c9nd","deprecated":true,"kind":"symbol","role":"symbol","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"cast(_:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/cast(_:)-c9nd"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ConventionWitnessMethodAttributeArgumentsSyntax","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax","abstract":[{"text":"The arguments for the ‘@convention(witness_method: …)’.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ConventionWitnessMethodAttributeArgumentsSyntax"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax","title":"ConventionWitnessMethodAttributeArgumentsSyntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-9g4b3":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9g4b3","role":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-9g4b3","type":"topic","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-35oa8":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-35oa8","title":"isProtocol(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-35oa8","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/index":{"title":"index","role":"symbol","deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/index","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/index","abstract":[{"type":"text","text":"The index of this node in a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference","isActive":true},{"text":" collection.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier","text":"SyntaxChildrenIndex"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-67fa0":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-67fa0","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-67fa0","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-7nqu3":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-7nqu3","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-7nqu3","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/cast(_:)-1ilnp":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/cast(_:)-1ilnp","kind":"symbol","title":"cast(_:)","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/cast(_:)-1ilnp","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/contentLength":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/contentlength","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/contentLength","title":"contentLength","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"deprecated":true,"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/cast(_:)-11wgo":{"abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node..","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/cast(_:)-11wgo","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/cast(_:)-11wgo","title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/startLocation(converter:afterLeadingTrivia:)":{"title":"startLocation(converter:afterLeadingTrivia:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/startlocation(converter:afterleadingtrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/is(_:)-65kq1":{"type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/is(_:)-65kq1","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/is(_:)-65kq1","role":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"title":"is(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/previousToken(viewMode:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"type":"topic","title":"previousToken(viewMode:)","role":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/previousToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/previoustoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/hasMaximumNestingLevelOverflow":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"hasMaximumNestingLevelOverflow","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/hasmaximumnestingleveloverflow","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasMaximumNestingLevelOverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/keyPathInParent":{"title":"keyPathInParent","abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/keypathinparent","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/keyPathInParent","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier","text":"AnyKeyPath"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-9yn7":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-9yn7","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-9yn7","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-1a9gi":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-1a9gi","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-1a9gi","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/firstToken":{"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/firstToken","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/firsttoken","title":"firstToken","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/endPositionBeforeTrailingTrivia","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/endpositionbeforetrailingtrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"title":"endPositionBeforeTrailingTrivia","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/trailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trailingTrivia","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/trailingtrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}],"title":"trailingTrivia","kind":"symbol","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/trimmed":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmed","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/trimmed","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/totalLength":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"kind":"symbol","role":"symbol","title":"totalLength","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/totallength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/totalLength","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/nextToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/nextToken(viewMode:)","kind":"symbol","role":"symbol","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"text":" ","type":"text"},{"text":"after this node.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"title":"nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/nexttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-8gefr":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-8gefr","kind":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-8gefr","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/byteSize":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"deprecated":true,"title":"byteSize","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/bytesize","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/byteSize","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/write(to:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/write(to:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/write(to:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Target"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target"},{"kind":"text","text":")"}],"role":"symbol","title":"write(to:)","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/trimmed(matching:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmed(matching:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/trimmed(matching:)","title":"trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-9623f":{"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-9623f","role":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-9623f","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-1p9rm":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-1p9rm","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-1p9rm"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-3vfnv":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-3vfnv","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-3vfnv","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/byteRange":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/byterange","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"title":"byteRange","abstract":[],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/byteRange","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-8s5jz":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-8s5jz","type":"topic","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-8s5jz"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-2rdn1":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-2rdn1","type":"topic","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-2rdn1","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/as(_:)-5jlvn":{"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/as(_:)-5jlvn","role":"symbol","kind":"symbol","title":"as(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/as(_:)-5jlvn","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-6oq5o":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-6oq5o","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-6oq5o","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/totalByteRange":{"title":"totalByteRange","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/totalByteRange","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/totalbyterange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/position":{"type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/position","title":"position","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/position","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"text":"trivia.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/trailingTriviaLength":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"title":"trailingTriviaLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trailingTriviaLength","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/trailingtrivialength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/nextToken":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/nexttoken","title":"nextToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/nextToken","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[],"type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-9fo5":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-9fo5","kind":"symbol","title":"asProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9fo5","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-26cul":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-26cul","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-26cul","title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/trimmedByteRange":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmedByteRange","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"title":"trimmedByteRange","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/trimmedbyterange","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/endLocation(converter:afterTrailingTrivia:)":{"title":"endLocation(converter:afterTrailingTrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/endLocation(converter:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/endlocation(converter:aftertrailingtrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/trimmedDescription":{"type":"topic","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol","title":"trimmedDescription","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/trimmeddescription","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmedDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-9sbc9":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9sbc9","role":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-9sbc9","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/previousToken":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/previousToken","title":"previousToken","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/previoustoken","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/syntaxTextBytes":{"type":"topic","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"title":"syntaxTextBytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/syntaxTextBytes","role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/syntaxtextbytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/is(_:)-7uyac":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/is(_:)-7uyac","role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference"},{"text":" node.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/is(_:)-7uyac","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-4dwn":{"title":"isProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-4dwn","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-4dwn"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-4mdxu":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-4mdxu","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-4mdxu"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/parent":{"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/parent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/parent","type":"topic","title":"parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/as(_:)-8ues9":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/as(_:)-8ues9","role":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/as(_:)-8ues9","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":"?"}],"title":"as(_:)","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/positionAfterSkippingLeadingTrivia":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/positionAfterSkippingLeadingTrivia","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia attached to the first token syntax."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"title":"positionAfterSkippingLeadingTrivia","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/positionafterskippingleadingtrivia","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-1xpku":{"title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-1xpku","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-1xpku","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/leadingTriviaLength":{"type":"topic","role":"symbol","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"leadingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/leadingtrivialength","kind":"symbol","title":"leadingTriviaLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/detached":{"kind":"symbol","title":"detached","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/detached","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"type":"text","text":"from its parent."}],"type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-57y0j":{"kind":"symbol","role":"symbol","type":"topic","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-57y0j","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-57y0j"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-7xtkz":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-7xtkz","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-7xtkz","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/leadingTrivia":{"title":"leadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/leadingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/leadingtrivia","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/hasParent":{"type":"topic","title":"hasParent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasParent","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/hasparent","kind":"symbol","abstract":[{"type":"text","text":"Whether or not this node has a parent."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/lastToken(viewMode:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/lastToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/lasttoken(viewmode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"lastToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/hasError":{"title":"hasError","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasError","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/haserror"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-9j8h4":{"title":"asProtocol(_:)","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-9j8h4","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9j8h4","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/trimmedLength":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmedLength","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"text":"leading or trailing trivia.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"title":"trimmedLength","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/trimmedlength","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/endPosition":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/endPosition","role":"symbol","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/endposition","type":"topic","title":"endPosition","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/id":{"title":"id","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/id","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/id","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/hasWarning":{"kind":"symbol","title":"hasWarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true,"type":"reference"},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasWarning","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/haswarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"debugDescription(includeTrivia:converter:mark:indentString:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/byteSizeAfterTrimmingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/byteSizeAfterTrimmingTrivia","role":"symbol","deprecated":true,"abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/bytesizeaftertrimmingtrivia","title":"byteSizeAfterTrimmingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/lastToken":{"role":"symbol","title":"lastToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/lastToken","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/lasttoken","abstract":[],"deprecated":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/description":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/description","kind":"symbol","type":"topic","title":"description","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/description","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"abstract":[{"text":"A source-accurate description of this node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-18zrh":{"title":"asProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-18zrh","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-18zrh"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/trimmedDescription(matching:)":{"role":"symbol","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","title":"trimmedDescription(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/trimmedDescription(matching:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/trimmeddescription(matching:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/root":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/root","kind":"symbol","role":"symbol","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"title":"root","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/debugDescription":{"type":"topic","role":"symbol","title":"debugDescription","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/debugDescription","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/debugdescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-2u0zx":{"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-2u0zx","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-2u0zx","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isImplicit":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isImplicit","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"title":"isImplicit","deprecated":true,"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isimplicit"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/syntaxNodeType":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/syntaxNodeType","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"title":"syntaxNodeType","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":".Type","kind":"text"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/syntaxnodetype"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/hasSequenceExpr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/hasSequenceExpr","role":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/hassequenceexpr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"kind":"symbol","type":"topic","title":"hasSequenceExpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/token(at:)":{"title":"token(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/token(at:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"token","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"text":"syntax node or any of its children.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/token(at:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/init(_:)-4kqva":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/init(_:)-4kqva","type":"topic","title":"init(_:)","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/init(_:)-4kqva","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/tokens(viewMode:)":{"title":"tokens(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/tokens(viewMode:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"tokens","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/tokens(viewmode:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/firstToken(viewMode:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/firstToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/firsttoken(viewmode:)","kind":"symbol","type":"topic","title":"firstToken(viewMode:)","abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/is(_:)-1rlp7":{"abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"title":"is(_:)","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/is(_:)-1rlp7","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/is(_:)-1rlp7","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/node(at:)":{"role":"symbol","type":"topic","title":"node(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/node(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"kind":"text","text":") -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"identifier."}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/with(_:_:)":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/with(_:_:)","role":"symbol","title":"with(_:_:)","type":"topic","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"text":" ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/with(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T"},{"text":">, ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-81wrf":{"role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-81wrf","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-81wrf","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/detach()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/detach()","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/detach()","type":"topic","title":"detach()","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-3ogpm":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-3ogpm","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-3ogpm","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/as(_:)-19813":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/as(_:)-19813","title":"as(_:)","deprecated":true,"abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/as(_:)-19813","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/kind":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind"}],"title":"kind","role":"symbol","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/kind","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/kind","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/isProtocol(_:)-4dw6t":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/isprotocol(_:)-4dw6t","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/isProtocol(_:)-4dw6t"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-3znre":{"title":"asProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-3znre","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-3znre","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/children(viewMode:)":{"role":"symbol","title":"children(viewMode:)","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/children(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/children(viewMode:)","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SyntaxChildren","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"type":"topic"}}}