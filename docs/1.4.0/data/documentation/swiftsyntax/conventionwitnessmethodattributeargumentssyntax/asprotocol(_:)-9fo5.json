{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-9fo5"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9fo5"},"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA06BracedB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax041ConventionWitnessMethodAttributeArgumentsB0V","modules":[{"name":"SwiftSyntax"}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":"?","kind":"text"}],"symbolKind":"method","extendedModule":"SwiftSyntax","title":"asProtocol(_:)"},"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":": "},{"text":"BracedSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BracedSyntax"},{"text":"?","kind":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BracedSyntax":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BracedSyntax","type":"topic","title":"BracedSyntax","abstract":[{"text":"\/ Automatically generated by generate-swift-syntax","type":"text"},{"text":" ","type":"text"},{"text":"\/ Do not edit directly!","type":"text"}],"url":"\/documentation\/swiftsyntax\/bracedsyntax","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BracedSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"BracedSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/asProtocol(_:)-9fo5":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/asprotocol(_:)-9fo5","kind":"symbol","title":"asProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/asProtocol(_:)-9fo5","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax\/syntaxprotocol-implementations","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax\/SyntaxProtocol-Implementations","type":"topic","kind":"article","abstract":[],"title":"SyntaxProtocol Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConventionWitnessMethodAttributeArgumentsSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ConventionWitnessMethodAttributeArgumentsSyntax","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConventionWitnessMethodAttributeArgumentsSyntax","abstract":[{"text":"The arguments for the ‘@convention(witness_method: …)’.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ConventionWitnessMethodAttributeArgumentsSyntax"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conventionwitnessmethodattributeargumentssyntax","title":"ConventionWitnessMethodAttributeArgumentsSyntax","role":"symbol"}}}