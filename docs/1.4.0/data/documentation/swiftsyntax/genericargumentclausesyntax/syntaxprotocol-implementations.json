{"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax"]]},"sections":[],"metadata":{"title":"SyntaxProtocol Implementations","roleHeading":"API Collection","modules":[{"name":"SwiftSyntax"}],"role":"collectionGroup"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/SyntaxProtocol-Implementations"},"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/init(_:)-3qosc"]},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedLength"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-1lmjk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-39ent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-5ppgy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-2dstq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-2odfr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3dk5m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3l8s8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3r6yp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-5mev2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-6broe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-6fivv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-85ioj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-8jj7y","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-8tz1e","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9419u","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9hav3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9l192","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-27wl0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-3tjzf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-5ephz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-1h58t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-7yvpo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-8ar7j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-1ixir","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-1osu2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-24l4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3c12h","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3d9c1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3tzyl","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-4zds","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-5gav7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-6be2x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-7ncpw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-8lroa","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-8rboe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-9phum","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-9rvwg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/write(to:)"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-24l4":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-24l4","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-24l4","type":"topic","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-3dk5m":{"title":"asProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3dk5m","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-3dk5m","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/is(_:)-7yvpo":{"role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-7yvpo","title":"is(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/is(_:)-7yvpo","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-8lroa":{"kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-8lroa","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-8lroa","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/with(_:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/with(_:_:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/with(_:_:)","title":"with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/position":{"title":"position","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/position","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/position","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"type":"text","text":"trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-3l8s8":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3l8s8","kind":"symbol","role":"symbol","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-3l8s8","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/firstToken":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/firsttoken","type":"topic","kind":"symbol","deprecated":true,"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/firstToken","title":"firstToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-2odfr":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-2odfr","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-2odfr","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":"?"}],"type":"topic","title":"asProtocol(_:)","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/node(at:)":{"title":"node(at:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/node(at:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"type":"text","text":"identifier."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/positionAfterSkippingLeadingTrivia":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/positionafterskippingleadingtrivia","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/positionAfterSkippingLeadingTrivia","title":"positionAfterSkippingLeadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/firstToken(viewMode:)":{"role":"symbol","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"title":"firstToken(viewMode:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/firsttoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/firstToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasMaximumNestingLevelOverflow":{"title":"hasMaximumNestingLevelOverflow","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasMaximumNestingLevelOverflow","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/hasmaximumnestingleveloverflow","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/endLocation(converter:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endLocation(converter:afterTrailingTrivia:)","role":"symbol","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"kind":"symbol","title":"endLocation(converter:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"endLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/endlocation(converter:aftertrailingtrivia:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-1osu2":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-1osu2","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-1osu2","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-8jj7y":{"title":"asProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-8jj7y","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-8jj7y","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/syntaxNodeType":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/syntaxNodeType","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"kind":"text","text":".Type"}],"title":"syntaxNodeType","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/syntaxnodetype"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/as(_:)-1lmjk":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-1lmjk","kind":"symbol","role":"symbol","title":"as(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/as(_:)-1lmjk","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/token(at:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/token(at:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/token(at:)","title":"token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasWarning":{"title":"hasWarning","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasWarning","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/haswarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmedDescription(matching:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedDescription(matching:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmeddescription(matching:)","kind":"symbol","role":"symbol","title":"trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedDescription"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"text":"last token.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/byteRange":{"kind":"symbol","title":"byteRange","abstract":[],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteRange","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/byterange","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-1ixir":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-1ixir","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-1ixir","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/nextToken(viewMode:)":{"title":"nextToken(viewMode:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/nexttoken(viewmode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"type":"text","text":"after this node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/as(_:)-39ent":{"kind":"symbol","type":"topic","title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-39ent","role":"symbol","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node."}],"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/as(_:)-39ent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/lastToken(viewMode:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/lastToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/lasttoken(viewmode:)","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"title":"lastToken(viewMode:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-85ioj":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-85ioj","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-85ioj","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/id":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/id","role":"symbol","title":"id","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/id","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/index":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/index","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/index","title":"index","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier","text":"SyntaxChildrenIndex"}],"kind":"symbol","deprecated":true,"abstract":[{"text":"The index of this node in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","isActive":true},{"type":"text","text":" collection."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/contentLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/contentLength","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/contentlength","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"deprecated":true,"role":"symbol","type":"topic","title":"contentLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-6be2x":{"title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-6be2x","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-6be2x","kind":"symbol","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/write(to:)":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/write(to:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/write(to:)","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"title":"write(to:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/nextToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/nextToken","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/nexttoken","role":"symbol","abstract":[],"title":"nextToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/is(_:)-1h58t":{"deprecated":true,"title":"is(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-1h58t","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/is(_:)-1h58t","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/parent":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/parent","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/parent","title":"parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmed(matching:)":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"trimmed(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmed(matching:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trailingTriviaLength":{"title":"trailingTriviaLength","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trailingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trailingtrivialength","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/is(_:)-8ar7j":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/is(_:)-8ar7j","kind":"symbol","title":"is(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-8ar7j","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/keyPathInParent":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/keypathinparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/keyPathInParent","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"kind":"text","text":": "},{"text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"keyPathInParent","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmed":{"abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"role":"symbol","title":"trimmed","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmed","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmed","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasError":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/haserror","type":"topic","kind":"symbol","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasError","title":"hasError"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isImplicit":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isimplicit","kind":"symbol","title":"isImplicit","type":"topic","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isImplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/endPositionBeforeTrailingTrivia":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/endpositionbeforetrailingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endPositionBeforeTrailingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"title":"endPositionBeforeTrailingTrivia","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasSequenceExpr":{"title":"hasSequenceExpr","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasSequenceExpr","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/hassequenceexpr","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/root":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/root","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/root","kind":"symbol","type":"topic","title":"root","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-9phum":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-9phum","type":"topic","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-9phum","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-6fivv":{"title":"asProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-6fivv","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-6fivv","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/totalByteRange":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/totalbyterange","title":"totalByteRange","type":"topic","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/totalByteRange","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/startLocation(converter:afterLeadingTrivia:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/startlocation(converter:afterleadingtrivia:)","type":"topic","kind":"symbol","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","title":"startLocation(converter:afterLeadingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasParent":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"hasParent","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/hasparent","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-7ncpw":{"title":"isProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-7ncpw","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-7ncpw","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/tokens(viewMode:)":{"title":"tokens(viewMode:)","role":"symbol","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/tokens(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/tokens(viewMode:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-8tz1e":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-8tz1e","type":"topic","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-8tz1e","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/previousToken":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","title":"previousToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/previousToken","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/previoustoken","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/kind":{"kind":"symbol","title":"kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/kind","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-8rboe":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-8rboe","type":"topic","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-8rboe","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/byteSizeAfterTrimmingTrivia":{"deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/bytesizeaftertrimmingtrivia","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"kind":"symbol","title":"byteSizeAfterTrimmingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteSizeAfterTrimmingTrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/description":{"title":"description","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/description","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/description","abstract":[{"type":"text","text":"A source-accurate description of this node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/children(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/children(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/children(viewmode:)","role":"symbol","kind":"symbol","title":"children(viewMode:)","type":"topic","abstract":[{"text":"A sequence over the children of this node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/cast(_:)-27wl0":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/cast(_:)-27wl0","type":"topic","kind":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-27wl0","title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-5gav7":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-5gav7","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-5gav7","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/syntaxTextBytes":{"title":"syntaxTextBytes","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/syntaxTextBytes","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"kind":"text","text":"]"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/syntaxtextbytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/totalLength":{"role":"symbol","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/totallength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/totalLength","kind":"symbol","title":"totalLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-6broe":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-6broe","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-6broe","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-4zds":{"title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-4zds","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-4zds"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-9l192":{"title":"asProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9l192","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-9l192","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericArgumentClauseSyntax"}],"title":"GenericArgumentClauseSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"GenericArgumentClauseSyntax","kind":"identifier"}],"abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/cast(_:)-5ephz":{"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/cast(_:)-5ephz","title":"cast(_:)","type":"topic","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-5ephz","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/lastToken":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/lasttoken","type":"topic","kind":"symbol","deprecated":true,"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/lastToken","title":"lastToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-9rvwg":{"type":"topic","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-9rvwg","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-9rvwg","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmedLength":{"title":"trimmedLength","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmedlength","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"text":"leading or trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/cast(_:)-3tjzf":{"abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"text":" node..","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-3tjzf","title":"cast(_:)","deprecated":true,"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/cast(_:)-3tjzf"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-3c12h":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3c12h","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-3c12h","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-2dstq":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-2dstq","type":"topic","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-2dstq","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/detach()":{"deprecated":true,"title":"detach()","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/detach()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/detach()","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmedByteRange":{"abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmedbyterange","role":"symbol","kind":"symbol","title":"trimmedByteRange","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-9hav3":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-9hav3","type":"topic","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9hav3","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trailingTrivia":{"title":"trailingTrivia","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trailingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trailingtrivia","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/leadingTriviaLength":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/leadingTriviaLength","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/leadingtrivialength","role":"symbol","type":"topic","title":"leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","title":"debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":"?, "},{"text":"mark","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-5mev2":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-5mev2","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-5mev2","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-9419u":{"title":"asProtocol(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9419u","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-9419u","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/byteSize":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteSize","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"kind":"symbol","deprecated":true,"title":"byteSize","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/bytesize","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/previousToken(viewMode:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/previoustoken(viewmode:)","type":"topic","kind":"symbol","abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"type":"text","text":" "},{"text":"this node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/previousToken(viewMode:)","title":"previousToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/init(_:)-3qosc":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/init(_:)-3qosc","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/init(_:)-3qosc","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"kind":"text","text":"?)"}],"title":"init(_:)","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/endPosition":{"kind":"symbol","role":"symbol","type":"topic","title":"endPosition","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/endposition","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endPosition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","kind":"symbol","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmedDescription":{"title":"trimmedDescription","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedDescription","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmeddescription","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/detached":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/detached","type":"topic","kind":"symbol","abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/detached","title":"detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-3r6yp":{"title":"asProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3r6yp","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-3r6yp","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-3d9c1":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-3d9c1","type":"topic","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3d9c1","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/as(_:)-5ppgy":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-5ppgy","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/as(_:)-5ppgy","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/debugDescription":{"abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/debugdescription","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/debugDescription","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/leadingTrivia":{"abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/leadingtrivia","title":"leadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/leadingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}],"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-3tzyl":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3tzyl","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-3tzyl","kind":"symbol","type":"topic"}}}