{"kind":"symbol","abstract":[{"text":"Override point to choose custom visitation dispatch instead of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specialized "},{"type":"codeVoice","code":"visit(_:)"},{"text":" methods. Use this instead of those methods if","type":"text"},{"text":" ","type":"text"},{"text":"you intend to dynamically dispatch rewriting behavior.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"visitAny"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"node","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"If this method returns a non-nil result, the specialized"},{"type":"text","text":" "},{"code":"visit(_:)","type":"codeVoice"},{"type":"text","text":" methods will not be called for this node and the"},{"text":" ","type":"text"},{"text":"visited node will be replaced by the returned node in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"rewritten tree."}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter\/visitAny(_:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SwiftSyntax"}],"title":"visitAny(_:)","roleHeading":"Instance Method","role":"symbol","externalID":"s:11SwiftSyntax0B8RewriterC8visitAnyyAA0B0VSgAFF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"visitAny"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/syntaxrewriter\/visitany(_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxRewriter":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxRewriter"}],"url":"\/documentation\/swiftsyntax\/syntaxrewriter","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter","title":"SyntaxRewriter","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxRewriter","kind":"identifier"}],"abstract":[{"text":"\/ Automatically generated by generate-swift-syntax","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"\/ Do not edit directly!"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxRewriter/visitAny(_:)":{"kind":"symbol","type":"topic","title":"visitAny(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"visitAny","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxrewriter\/visitany(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter\/visitAny(_:)","abstract":[{"type":"text","text":"Override point to choose custom visitation dispatch instead of the"},{"type":"text","text":" "},{"text":"specialized ","type":"text"},{"type":"codeVoice","code":"visit(_:)"},{"type":"text","text":" methods. Use this instead of those methods if"},{"text":" ","type":"text"},{"type":"text","text":"you intend to dynamically dispatch rewriting behavior."}]}}}