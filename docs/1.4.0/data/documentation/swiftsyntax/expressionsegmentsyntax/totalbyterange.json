{"metadata":{"extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax0B8ProtocolPAAE14totalByteRangeAA0e6SourceF0Vvp::SYNTHESIZED::s:11SwiftSyntax017ExpressionSegmentB0V","symbolKind":"property","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Instance Property","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"title":"totalByteRange"},"kind":"symbol","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ByteSourceRange"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/expressionsegmentsyntax\/totalbyterange"]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/totalByteRange","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ByteSourceRange":{"navigatorTitle":[{"kind":"identifier","text":"ByteSourceRange"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ByteSourceRange","type":"topic","url":"\/documentation\/swiftsyntax\/bytesourcerange","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ByteSourceRange"}],"title":"ByteSourceRange","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","kind":"article","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/syntaxprotocol-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/SyntaxProtocol-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/totalByteRange":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"kind":"symbol","role":"symbol","title":"totalByteRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/totalByteRange","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/totalbyterange","type":"topic","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax":{"title":"ExpressionSegmentSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressionSegmentSyntax"}],"abstract":[{"text":"An interpolated expression inside a string literal.","type":"text"}],"navigatorTitle":[{"text":"ExpressionSegmentSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax"}}}