{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/is(_:)"},"variants":[{"paths":["\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/is(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"externalID":"s:11SwiftSyntax04TypeB8ProtocolPAAE2isySbAA0cB0VmF::SYNTHESIZED::s:11SwiftSyntax031ImplicitlyUnwrappedOptionalTypeB0V","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"TypeSyntax","preciseIdentifier":"s:11SwiftSyntax04TypeB0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","title":"is(_:)","roleHeading":"Instance Method","platforms":[],"modules":[{"name":"SwiftSyntax"}],"extendedModule":"SwiftSyntax","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","text":"TypeSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" since the node can always be upcast to its base node.","type":"text"}]}]}],"deprecationSummary":[{"inlineContent":[{"text":"This cast will always succeed","type":"text"}],"type":"paragraph"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to its base node type ("},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","isActive":true},{"text":").","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/TypeSyntaxProtocol-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/TypeSyntaxProtocol-Implementations":{"role":"collectionGroup","title":"TypeSyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/typesyntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/TypeSyntaxProtocol-Implementations","kind":"article","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntax":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/typesyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeSyntax"}],"title":"TypeSyntax","navigatorTitle":[{"text":"TypeSyntax","kind":"identifier"}],"role":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/is(_:)":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to its base node type ("},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","type":"reference"},{"text":").","type":"text"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/is(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"text":"TypeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB0V"},{"kind":"text","text":".Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/is(_:)","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax":{"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol","title":"ImplicitlyUnwrappedOptionalTypeSyntax"}}}