{"abstract":[{"type":"text","text":"Force-casts the current syntax node to the type conforming to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol"},{"type":"text","text":" protocol."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/cast(_:)-3ptr8"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016ConditionElementB0V0C0O4castyxxmAA04ExprB8ProtocolRzlF1SL_xmfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016ConditionElementB0V0C0O4castyxxmAA04ExprB8ProtocolRzlF1SL_xmfp","text":"S"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax04ExprB8ProtocolP","text":"ExprSyntaxProtocol","kind":"typeIdentifier"}]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"An instance of the specialized type.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"style":"warning","type":"aside","content":[{"inlineContent":[{"text":"This function will crash if the cast is not possible. Use ","type":"text"},{"type":"codeVoice","code":"as"},{"type":"text","text":" to safely attempt a cast."}],"type":"paragraph"}],"name":"Warning"}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-3ptr8","interfaceLanguage":"swift"},"metadata":{"title":"cast(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016ConditionElementB0V0C0O4castyxxmAA04ExprB8ProtocolRzlF1SL_xmfp"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016ConditionElementB0V0C0O4castyxxmAA04ExprB8ProtocolRzlF1SL_xmfp"}],"externalID":"s:11SwiftSyntax016ConditionElementB0V0C0O4castyxxmAA04ExprB8ProtocolRzlF","symbolKind":"method","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum"]]},"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax","type":"topic","abstract":[],"title":"ConditionElementSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ConditionElementSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConditionElementSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/cast(_:)-3ptr8":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-3ptr8","abstract":[{"text":"Force-casts the current syntax node to the type conforming to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","type":"reference"},{"text":" protocol.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/cast(_:)-3ptr8","kind":"symbol","type":"topic","role":"symbol","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016ConditionElementB0V0C0O4castyxxmAA04ExprB8ProtocolRzlF1SL_xmfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax016ConditionElementB0V0C0O4castyxxmAA04ExprB8ProtocolRzlF1SL_xmfp"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum","type":"topic","abstract":[],"title":"ConditionElementSyntax.Condition","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Condition","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Condition","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntaxProtocol":{"navigatorTitle":[{"kind":"identifier","text":"ExprSyntaxProtocol"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","kind":"symbol","url":"\/documentation\/swiftsyntax\/exprsyntaxprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","isActive":true},{"type":"text","text":" nodes conform."}],"type":"topic","title":"ExprSyntaxProtocol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntax":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","title":"ExprSyntax","url":"\/documentation\/swiftsyntax\/exprsyntax","type":"topic","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"abstract":[],"role":"symbol"}}}