{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum"]]},"sections":[],"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/init(_:)-2aat"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedLength"],"generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-39sbx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-3h167","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-5igid","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-1w6kq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-2hre1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-370ps","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-3hjo3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-3px04","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-4iarp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-53228","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-5y3j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6k6u9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6tf4y","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6y9r","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-7e1vv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-7ti1m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-9mysk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-2idhb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-9n866","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-auk4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-3997i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-78vf9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-9lxa4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-1lu55","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-2vdbe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-3e0to","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-4s56j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-4tqu1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-5uqxz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-65mmt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6m140","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6oyxs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6pi2d","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-88ezp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-8k1sp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-9b65h","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-k84t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/write(to:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"metadata":{"role":"collectionGroup","title":"SyntaxProtocol Implementations","modules":[{"name":"SwiftSyntax"}],"roleHeading":"API Collection"},"kind":"article","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/syntaxNodeType":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":".Type"}],"abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/syntaxNodeType","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/syntaxnodetype","role":"symbol","title":"syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-8k1sp":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-8k1sp","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-8k1sp","role":"symbol","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-88ezp":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-88ezp","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"isProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-88ezp","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/endPosition":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endPosition","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/endposition","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"type":"topic","kind":"symbol","title":"endPosition","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/byteSizeAfterTrimmingTrivia":{"deprecated":true,"title":"byteSizeAfterTrimmingTrivia","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/bytesizeaftertrimmingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteSizeAfterTrimmingTrivia","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-6k6u9":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6k6u9","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","title":"asProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-6k6u9"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-k84t":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-k84t","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-k84t","title":"isProtocol(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/lastToken":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/lasttoken","kind":"symbol","title":"lastToken","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/lastToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-53228":{"kind":"symbol","title":"asProtocol(_:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-53228","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-53228","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-3e0to":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-3e0to","title":"isProtocol(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-3e0to","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/write(to:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/write(to:)","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Target","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/write(to:)","kind":"symbol","role":"symbol","title":"write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/byteSize":{"deprecated":true,"role":"symbol","type":"topic","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteSize","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/bytesize","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"title":"byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/firstToken":{"abstract":[],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/firstToken","title":"firstToken","deprecated":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/firsttoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/detach()":{"role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/detach()","title":"detach()","deprecated":true,"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/detach()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-5y3j":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-5y3j","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-5y3j","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasWarning":{"title":"hasWarning","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/haswarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic"},{"type":"text","text":" of severity "},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasParent":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasParent","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/hasparent","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasParent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/totalLength":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"title":"totalLength","kind":"symbol","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/totallength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/totalLength","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/tokens(viewMode:)":{"title":"tokens(viewMode:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/tokens(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-4iarp":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-4iarp","type":"topic","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-4iarp","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/contentLength":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"title":"contentLength","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/contentLength","abstract":[],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/contentlength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/byteRange":{"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/byterange","deprecated":true,"abstract":[],"title":"byteRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/as(_:)-39sbx":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-39sbx","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/as(_:)-39sbx","role":"symbol","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"title":"as(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/with(_:_:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"text":" ","type":"text"},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/with(_:_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/with(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/detached":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/detached","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/detached","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"detached","role":"symbol","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/root":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/root","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"root"},{"text":": ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/root","title":"root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/lastToken(viewMode:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/lastToken(viewMode:)","kind":"symbol","title":"lastToken(viewMode:)","type":"topic","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/lasttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmedDescription(matching:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","role":"symbol","abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedDescription(matching:)","type":"topic","title":"trimmedDescription(matching:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmeddescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-65mmt":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-65mmt","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-65mmt","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trailingTrivia":{"title":"trailingTrivia","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trailingtrivia","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trailingTrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/init(_:)-2aat":{"title":"init(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/init(_:)-2aat","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/init(_:)-2aat","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":"?)","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-1lu55":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-1lu55","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-1lu55","type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-7ti1m":{"title":"asProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-7ti1m","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-7ti1m"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/children(viewMode:)":{"title":"children(viewMode:)","role":"symbol","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/children(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/children(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-2vdbe":{"type":"topic","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-2vdbe","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-2vdbe","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-4tqu1":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-4tqu1","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-4tqu1","title":"isProtocol(_:)","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"BracedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasError":{"kind":"symbol","role":"symbol","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasError","title":"hasError","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/haserror","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-7e1vv":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-7e1vv","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-7e1vv","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-6y9r":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6y9r","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-6y9r"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/as(_:)-3h167":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-3h167","title":"as(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"text":"?","kind":"text"}],"abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/as(_:)-3h167","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/description":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/description","title":"description","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/description","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"abstract":[{"type":"text","text":"A source-accurate description of this node."}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax","type":"topic","abstract":[],"title":"ConditionElementSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ConditionElementSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConditionElementSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/previousToken":{"role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/previoustoken","deprecated":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/previousToken","abstract":[],"type":"topic","title":"previousToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/previousToken(viewMode:)":{"abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"type":"text","text":" "},{"text":"this node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/previoustoken(viewmode:)","role":"symbol","kind":"symbol","title":"previousToken(viewMode:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/previousToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/positionAfterSkippingLeadingTrivia":{"abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/positionAfterSkippingLeadingTrivia","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/positionafterskippingleadingtrivia","kind":"symbol","title":"positionAfterSkippingLeadingTrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/cast(_:)-2idhb":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-2idhb","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/cast(_:)-2idhb","kind":"symbol","deprecated":true,"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-2hre1":{"role":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-2hre1","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-2hre1","kind":"symbol","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/endLocation(converter:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endLocation(converter:afterTrailingTrivia:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/endlocation(converter:aftertrailingtrivia:)","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}],"role":"symbol","title":"endLocation(converter:afterTrailingTrivia:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/kind":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","title":"kind","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-9b65h":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-9b65h","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-9b65h"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/as(_:)-5igid":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-5igid","role":"symbol","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"text":" node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/as(_:)-5igid"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-1w6kq":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-1w6kq","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-1w6kq","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-3px04":{"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-3px04","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":"?"}],"role":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-3px04"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-4s56j":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-4s56j","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-4s56j","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/leadingTriviaLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/leadingTriviaLength","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/leadingtrivialength","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","title":"leadingTriviaLength","role":"symbol","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-6pi2d":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-6pi2d","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6pi2d","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/parent":{"title":"parent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/parent","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-6m140":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6m140","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-6m140","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasMaximumNestingLevelOverflow":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/hasmaximumnestingleveloverflow","title":"hasMaximumNestingLevelOverflow","abstract":[],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasMaximumNestingLevelOverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/cast(_:)-9n866":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-9n866","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"text":" node..","type":"text"}],"type":"topic","title":"cast(_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/cast(_:)-9n866","deprecated":true,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmed(matching:)":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmed(matching:)","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmed(matching:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"title":"trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmed":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmed","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","type":"topic","title":"trimmed"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/index":{"type":"topic","kind":"symbol","deprecated":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex"}],"abstract":[{"type":"text","text":"The index of this node in a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","isActive":true,"type":"reference"},{"text":" collection.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/index","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/index","title":"index"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/leadingTrivia":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/leadingtrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"}],"title":"leadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/leadingTrivia","role":"symbol","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/id":{"type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"title":"id","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/id","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/id","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trailingTriviaLength":{"abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trailingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trailingtrivialength","title":"trailingTriviaLength","type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/keyPathInParent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/keyPathInParent","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/keypathinparent","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC"},{"text":"?","kind":"text"}],"role":"symbol","title":"keyPathInParent","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/nextToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/nextToken(viewMode:)","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"after this node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/nexttoken(viewmode:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"nextToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-9mysk":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-9mysk","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-9mysk","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-6oyxs":{"type":"topic","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-6oyxs","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6oyxs","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/is(_:)-3997i":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-3997i","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","deprecated":true,"role":"symbol","title":"is(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/is(_:)-3997i"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/nextToken":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/nextToken","abstract":[],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/nexttoken","deprecated":true,"role":"symbol","type":"topic","title":"nextToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum","type":"topic","abstract":[],"title":"ConditionElementSyntax.Condition","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Condition","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Condition","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-370ps":{"title":"asProtocol(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-370ps","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-370ps","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/debugDescription":{"kind":"symbol","role":"symbol","type":"topic","title":"debugDescription","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/debugdescription","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/debugDescription(includeTrivia:converter:mark:indentString:)":{"title":"debugDescription(includeTrivia:converter:mark:indentString:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/debugdescription(includetrivia:converter:mark:indentstring:)","role":"symbol","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":"(","kind":"text"},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"kind":"text","text":"?, "},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/position":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/position","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"type":"text","text":" "},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"text":" ","type":"text"},{"text":"trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/position","title":"position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/is(_:)-78vf9":{"deprecated":true,"kind":"symbol","title":"is(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-78vf9","type":"topic","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/is(_:)-78vf9","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/endPositionBeforeTrailingTrivia":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/endpositionbeforetrailingtrivia","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"title":"endPositionBeforeTrailingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endPositionBeforeTrailingTrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isImplicit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isImplicit","role":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isimplicit","title":"isImplicit","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/node(at:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/node(at:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"title":"node(at:)","abstract":[{"text":"If the node with the given ","type":"text"},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"text":"identifier.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-3hjo3":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":"?"}],"kind":"symbol","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-3hjo3","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-3hjo3","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/firstToken(viewMode:)":{"title":"firstToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/firsttoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/firstToken(viewMode:)","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/is(_:)-9lxa4":{"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"title":"is(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-9lxa4","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/is(_:)-9lxa4","role":"symbol","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmedLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedLength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"type":"text","text":" "},{"text":"leading or trailing trivia.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmedlength","title":"trimmedLength","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/totalByteRange":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"title":"totalByteRange","role":"symbol","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/totalByteRange","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/totalbyterange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-5uqxz":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-5uqxz","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-5uqxz","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmedDescription":{"kind":"symbol","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}],"type":"topic","title":"trimmedDescription","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedDescription","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmeddescription","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-6tf4y":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6tf4y","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-6tf4y","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/startLocation(converter:afterLeadingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/startLocation(converter:afterLeadingTrivia:)","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"type":"topic","title":"startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/startlocation(converter:afterleadingtrivia:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasSequenceExpr":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","title":"hasSequenceExpr","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/hassequenceexpr","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasSequenceExpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/token(at:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"token"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/token(at:)","role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/token(at:)","title":"token(at:)","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"type":"text","text":"syntax node or any of its children."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmedByteRange":{"abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmedbyterange","title":"trimmedByteRange","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedByteRange","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/syntaxTextBytes":{"title":"syntaxTextBytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/syntaxTextBytes","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/syntaxtextbytes","type":"topic","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/cast(_:)-auk4":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/cast(_:)-auk4","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-auk4","title":"cast(_:)"}}}