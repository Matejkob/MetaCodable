{"metadata":{"role":"collectionGroup","roleHeading":"API Collection","title":"SyntaxProtocol Implementations","modules":[{"name":"SwiftSyntax"}]},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax"]]},"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/init(_:)-8cpj3"],"generated":true},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmedLength"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/as(_:)-10jtj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/as(_:)-7lcul","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/as(_:)-8k7vb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-1hxur","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-299ar","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-3b3rk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-3ldst","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-4htij","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-533w2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-597k5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-5ez89","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-5mr8b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-5v2ps","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-84vzi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-8hjll","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-9vqjy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-i3fd","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/cast(_:)-2zslv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/cast(_:)-6luzs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/cast(_:)-8bk71","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/is(_:)-46aea","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/is(_:)-7lc7c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/is(_:)-7lote","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-2gc9z","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-2pell","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-3p91f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-3ws3b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-4xwe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-4zuf9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-5qbe0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-6frw4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-8tksc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-975gx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-999f6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-9r12j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-9zdqv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-psvd","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/write(to:)"],"title":"Instance Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/SyntaxProtocol-Implementations"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-3ws3b":{"title":"isProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-3ws3b","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-3ws3b"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/is(_:)-46aea":{"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/is(_:)-46aea","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"title":"is(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/is(_:)-46aea","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/description":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/description","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/description","title":"description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"functionDecl","kind":"identifier"}],"title":"SyntaxKind.functionDecl","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/contentLength":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/contentLength","title":"contentLength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"abstract":[],"deprecated":true,"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/contentlength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/hasWarning":{"kind":"symbol","title":"hasWarning","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasWarning"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasWarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic"},{"type":"text","text":" of severity "},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/haswarning","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-3b3rk":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-3b3rk","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-3b3rk","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/detach()":{"kind":"symbol","title":"detach()","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/detach()","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true,"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/detach()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/lastToken(viewMode:)":{"kind":"symbol","title":"lastToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/lastToken(viewMode:)","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/lasttoken(viewmode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/trimmedDescription(matching:)":{"abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmedDescription(matching:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedDescription"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/trimmeddescription(matching:)","title":"trimmedDescription(matching:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/children(viewMode:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","kind":"typeIdentifier","text":"SyntaxChildren"}],"role":"symbol","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/children(viewMode:)","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/children(viewmode:)","title":"children(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/trimmedByteRange":{"kind":"symbol","title":"trimmedByteRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmedByteRange","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/trimmedbyterange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-5v2ps":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-5v2ps","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-5v2ps","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/nextToken(viewMode:)":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/nexttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"type":"text","text":"after this node."}],"title":"nextToken(viewMode:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/nextToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/totalByteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/totalByteRange","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/totalbyterange","title":"totalByteRange","role":"symbol","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-4xwe":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-4xwe","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-4xwe","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/as(_:)-7lcul":{"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/as(_:)-7lcul","title":"as(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/as(_:)-7lcul"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/detached":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/detached","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"detached"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"text":"from its parent.","type":"text"}],"title":"detached","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/lastToken":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/lastToken","role":"symbol","kind":"symbol","title":"lastToken","deprecated":true,"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/lasttoken","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/kind":{"title":"kind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/kind","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true,"type":"reference"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/kind","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/as(_:)-8k7vb":{"deprecated":true,"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/as(_:)-8k7vb","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"title":"as(_:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/as(_:)-8k7vb"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"role":"symbol","abstract":[{"text":"A Syntax node represents a tree of nodes with tokens at the leaves.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"Syntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Syntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","title":"Syntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/cast(_:)-6luzs":{"abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"title":"cast(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/cast(_:)-6luzs","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/cast(_:)-6luzs","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/hasMaximumNestingLevelOverflow":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/hasmaximumnestingleveloverflow","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[],"title":"hasMaximumNestingLevelOverflow","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasMaximumNestingLevelOverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/leadingTriviaLength":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"type":"topic","title":"leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/leadingTriviaLength","role":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/leadingtrivialength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-533w2":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-533w2","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-533w2","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/root":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/root","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"title":"root","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/index":{"abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"type":"text","text":" collection."}],"title":"index","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/index","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/index","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-8tksc":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-8tksc","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-8tksc"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/leadingTrivia":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/leadingTrivia","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/leadingtrivia","type":"topic","role":"symbol","title":"leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/endPositionBeforeTrailingTrivia":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/endpositionbeforetrailingtrivia","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"title":"endPositionBeforeTrailingTrivia","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/endPositionBeforeTrailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/endLocation(converter:afterTrailingTrivia:)":{"abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"title":"endLocation(converter:afterTrailingTrivia:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/endLocation(converter:afterTrailingTrivia:)","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/endlocation(converter:aftertrailingtrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/byteRange":{"deprecated":true,"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/byterange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"abstract":[],"title":"byteRange","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/byteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-9vqjy":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-9vqjy","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-9vqjy","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/cast(_:)-2zslv":{"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"title":"cast(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/cast(_:)-2zslv","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/cast(_:)-2zslv","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-4htij":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-4htij","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-4htij"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/hasError":{"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"title":"hasError","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasError","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/haserror","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"SourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-999f6":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-999f6","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-999f6","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/trailingTriviaLength":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/trailingtrivialength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"title":"trailingTriviaLength","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trailingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-299ar":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-299ar","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-299ar","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/debugDescription":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/debugdescription","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"title":"debugDescription","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/write(to:)":{"abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"title":"write(to:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/write(to:)","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/write(to:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Target"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/is(_:)-7lc7c":{"deprecated":true,"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/is(_:)-7lc7c","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference"},{"text":" node.","type":"text"}],"title":"is(_:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/is(_:)-7lc7c"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/trimmed(matching:)":{"abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"title":"trimmed(matching:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmed(matching:)","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/trimmed(matching:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-5ez89":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-5ez89","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-5ez89"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/hasSequenceExpr":{"abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"title":"hasSequenceExpr","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasSequenceExpr","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/hassequenceexpr","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/startLocation(converter:afterLeadingTrivia:)":{"abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"title":"startLocation(converter:afterLeadingTrivia:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/startlocation(converter:afterleadingtrivia:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-psvd":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-psvd","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-psvd"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/trimmedLength":{"abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"title":"trimmedLength","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmedLength","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/trimmedlength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-4zuf9":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-4zuf9","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-4zuf9","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-8hjll":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-8hjll","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-8hjll","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isImplicit":{"deprecated":true,"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isimplicit","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"title":"isImplicit","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isImplicit"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-5mr8b":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-5mr8b","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-5mr8b","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"abstract":[{"type":"text","text":"Collection that contains the present child "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" nodes of the given node."}],"kind":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","url":"\/documentation\/swiftsyntax\/syntaxchildren","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/init(_:)-8cpj3":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/init(_:)-8cpj3","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"text":"?)","kind":"text"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/init(_:)-8cpj3","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/endPosition":{"abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"title":"endPosition","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/endPosition","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/endposition","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/position":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/position","title":"position","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/position","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/cast(_:)-8bk71":{"abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"text":" node..","type":"text"}],"title":"cast(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/cast(_:)-8bk71","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/cast(_:)-8bk71","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-9r12j":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-9r12j","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-9r12j","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax":{"title":"AvailabilityConditionSyntax","navigatorTitle":[{"text":"AvailabilityConditionSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax","role":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AvailabilityConditionSyntax","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/previousToken":{"abstract":[],"title":"previousToken","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/previousToken","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/previoustoken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-3p91f":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-3p91f","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-3p91f","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-9zdqv":{"role":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-9zdqv","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-9zdqv","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/firstToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/firstToken","title":"firstToken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/firsttoken","abstract":[],"deprecated":true,"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/byteSizeAfterTrimmingTrivia":{"abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"title":"byteSizeAfterTrimmingTrivia","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/byteSizeAfterTrimmingTrivia","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/bytesizeaftertrimmingtrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-84vzi":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-84vzi","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-84vzi","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/keyPathInParent":{"abstract":[],"title":"keyPathInParent","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/keyPathInParent","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/keypathinparent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-975gx":{"title":"isProtocol(_:)","role":"symbol","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-975gx","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-975gx"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-5qbe0":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-5qbe0","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-5qbe0","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-3ldst":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-3ldst","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-3ldst","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/trimmedDescription":{"abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"title":"trimmedDescription","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmedDescription","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/trimmeddescription","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/positionAfterSkippingLeadingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/positionAfterSkippingLeadingTrivia","title":"positionAfterSkippingLeadingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/positionafterskippingleadingtrivia","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"text":" ","type":"text"},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/trimmed":{"abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"title":"trimmed","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trimmed","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/trimmed","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/byteSize":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/byteSize","title":"byteSize","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/bytesize","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"deprecated":true,"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-6frw4":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-6frw4","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-6frw4","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/id":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/id","title":"id","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/id","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/syntaxTextBytes":{"abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"title":"syntaxTextBytes","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/syntaxTextBytes","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/syntaxtextbytes","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/trailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/trailingTrivia","title":"trailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/trailingtrivia","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-1hxur":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-1hxur","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-1hxur","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/parent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/parent","title":"parent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/parent","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/firstToken(viewMode:)":{"abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/firstToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/firsttoken(viewmode:)","title":"firstToken(viewMode:)","type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/syntaxNodeType":{"abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"title":"syntaxNodeType","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/syntaxNodeType","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/syntaxnodetype","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":".Type","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/tokens(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/tokens(viewMode:)","title":"tokens(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"tokens","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"text":"TokenSequence","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/tokens(viewmode:)","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/token(at:)":{"abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"title":"token(at:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/token(at:)","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/token(at:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"token"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-2gc9z":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-2gc9z","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-2gc9z","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/as(_:)-10jtj":{"abstract":[{"text":"Attempts to upcast the current syntax node to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node."}],"title":"as(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/as(_:)-10jtj","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/as(_:)-10jtj","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/node(at:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/node(at:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/node(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"kind":"text","text":") -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"identifier."}],"title":"node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-597k5":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-597k5","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-597k5","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/is(_:)-7lote":{"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"title":"is(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/is(_:)-7lote","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/is(_:)-7lote","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/previousToken(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/previoustoken(viewmode:)","kind":"symbol","title":"previousToken(viewMode:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/previousToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"text":"this node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/totalLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/totalLength","title":"totalLength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/totallength","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/nextToken":{"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/nexttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/nextToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"deprecated":true,"type":"topic","abstract":[],"kind":"symbol","role":"symbol","title":"nextToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","title":"debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a summarized dump of this node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/asProtocol(_:)-i3fd":{"title":"asProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/asProtocol(_:)-i3fd","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/asprotocol(_:)-i3fd"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"type":"codeVoice","code":"byteOffset"},{"text":" specifies at which offset the error occurred.","type":"text"}],"title":"TokenDiagnostic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokendiagnostic","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/isProtocol(_:)-2pell":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/isProtocol(_:)-2pell","role":"symbol","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/isprotocol(_:)-2pell","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/hasParent":{"title":"hasParent","type":"topic","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/hasParent","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasParent"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/hasparent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AvailabilityConditionSyntax/with(_:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"with(_:_:)","type":"topic","url":"\/documentation\/swiftsyntax\/availabilityconditionsyntax\/with(_:_:)","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AvailabilityConditionSyntax\/with(_:_:)"}}}