{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AwaitExprSyntax\/unexpectedBetweenAwaitKeywordAndExpression"},"metadata":{"externalID":"s:11SwiftSyntax09AwaitExprB0V017unexpectedBetweenC20KeywordAndExpressionAA015UnexpectedNodesB0VSgvp","symbolKind":"property","modules":[{"name":"SwiftSyntax"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenAwaitKeywordAndExpression","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"title":"unexpectedBetweenAwaitKeywordAndExpression","role":"symbol","roleHeading":"Instance Property"},"variants":[{"paths":["\/documentation\/swiftsyntax\/awaitexprsyntax\/unexpectedbetweenawaitkeywordandexpression"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpectedBetweenAwaitKeywordAndExpression"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AwaitExprSyntax"]]},"sections":[],"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AwaitExprSyntax/unexpectedBetweenAwaitKeywordAndExpression":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpectedBetweenAwaitKeywordAndExpression"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AwaitExprSyntax\/unexpectedBetweenAwaitKeywordAndExpression","abstract":[],"title":"unexpectedBetweenAwaitKeywordAndExpression","role":"symbol","url":"\/documentation\/swiftsyntax\/awaitexprsyntax\/unexpectedbetweenawaitkeywordandexpression","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnexpectedNodesSyntax":{"url":"\/documentation\/swiftsyntax\/unexpectednodessyntax","title":"UnexpectedNodesSyntax","abstract":[{"type":"text","text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree."}],"type":"topic","navigatorTitle":[{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AwaitExprSyntax":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AwaitExprSyntax","url":"\/documentation\/swiftsyntax\/awaitexprsyntax","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AwaitExprSyntax","kind":"identifier"}],"title":"AwaitExprSyntax","navigatorTitle":[{"kind":"identifier","text":"AwaitExprSyntax"}]}}}