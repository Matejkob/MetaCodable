{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressionPatternSyntax","kind":"identifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":3,"type":"heading","text":"Examples","anchor":"Examples"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Patterns can be used in switch cases like the following example:"}]},{"code":["switch raw.kind {","  case .expressionPattern:","    return true","  default:","    return false","}"],"syntax":"swift","type":"codeListing"},{"anchor":"Children","level":3,"type":"heading","text":"Children"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"expression","type":"codeVoice"},{"type":"text","text":": "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","isActive":true,"type":"reference"}]}]}]}]}],"sections":[],"metadata":{"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"ExpressionPatternSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ExpressionPatternSyntax","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","externalID":"s:11SwiftSyntax017ExpressionPatternB0V","title":"ExpressionPatternSyntax","modules":[{"name":"SwiftSyntax"}]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"A pattern that contains an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol"},{"type":"text","text":"."}],"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/init(_:)-51m2o","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/init(leadingTrivia:_:expression:_:trailingTrivia:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/expression","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/unexpectedAfterExpression","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/unexpectedBeforeExpression"],"anchor":"Instance-Properties","generated":true},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/structure"],"anchor":"Type-Properties","title":"Type Properties"},{"title":"Default Implementations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/PatternSyntaxProtocol-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/SyntaxProtocol-Implementations"],"anchor":"Default-Implementations","generated":true}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"kind":"relationships"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/expressionpatternsyntax"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"references":{"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/CustomReflectable-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/CustomReflectable-Implementations","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/customreflectable-implementations","kind":"article","title":"CustomReflectable Implementations","abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/SH":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","type":"unresolvable","title":"Swift.TextOutputStreamable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntaxProtocol":{"title":"PatternSyntaxProtocol","url":"\/documentation\/swiftsyntax\/patternsyntaxprotocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntax","type":"reference","isActive":true},{"text":" nodes conform.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PatternSyntaxProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"PatternSyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntax":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntax","url":"\/documentation\/swiftsyntax\/patternsyntax","role":"symbol","navigatorTitle":[{"text":"PatternSyntax","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PatternSyntax","kind":"identifier"}],"title":"PatternSyntax","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntaxProtocol":{"navigatorTitle":[{"kind":"identifier","text":"ExprSyntaxProtocol"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","kind":"symbol","url":"\/documentation\/swiftsyntax\/exprsyntaxprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","isActive":true},{"type":"text","text":" nodes conform."}],"type":"topic","title":"ExprSyntaxProtocol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntax":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","title":"ExprSyntax","url":"\/documentation\/swiftsyntax\/exprsyntax","type":"topic","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/PatternSyntaxProtocol-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/patternsyntaxprotocol-implementations","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/PatternSyntaxProtocol-Implementations","type":"topic","title":"PatternSyntaxProtocol Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/structure":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/structure","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"type":"topic","title":"structure","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax":{"title":"ExpressionPatternSyntax","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ExpressionPatternSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A pattern that contains an "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/swiftsyntax\/expressionpatternsyntax","navigatorTitle":[{"text":"ExpressionPatternSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/Hashable-Implementations":{"title":"Hashable Implementations","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/hashable-implementations","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/Hashable-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://com.SwiftyLab.HelperCoders/SQ":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/SyntaxProtocol-Implementations":{"type":"topic","title":"SyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/syntaxprotocol-implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/SyntaxProtocol-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/init(_:)-51m2o":{"url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/init(_:)-51m2o","title":"init(_:)","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/init(_:)-51m2o","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"kind":"text","text":")"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/unexpectedAfterExpression":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"unexpectedAfterExpression","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/unexpectedafterexpression","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/unexpectedAfterExpression","title":"unexpectedAfterExpression","type":"topic","abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/Equatable-Implementations":{"title":"Equatable Implementations","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/equatable-implementations","role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/Equatable-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","abstract":[{"type":"text","text":"Provide common functionality for specialized syntax nodes. Extend this"},{"type":"text","text":" "},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/expression":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"expression","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ExprSyntax","preciseIdentifier":"s:11SwiftSyntax04ExprB0V"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/expression","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/expression","title":"expression","type":"topic","abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/init(leadingTrivia:_:expression:_:trailingTrivia:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"leadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?, "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"expression"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04ExprB8ProtocolP","text":"ExprSyntaxProtocol","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?, ","kind":"text"},{"text":"trailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?)","kind":"text"}],"title":"init(leadingTrivia:_:expression:_:trailingTrivia:)","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/init(leadingtrivia:_:expression:_:trailingtrivia:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/init(leadingTrivia:_:expression:_:trailingTrivia:)","abstract":[],"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/unexpectedBeforeExpression":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBeforeExpression","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/unexpectedbeforeexpression","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/unexpectedBeforeExpression","title":"unexpectedBeforeExpression","type":"topic","abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","title":"Swift.CustomReflectable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxHashable"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/syntaxhashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","role":"symbol","title":"SyntaxHashable","abstract":[{"text":"Protocol that provides a common Hashable implementation for all syntax nodes","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}]}}}