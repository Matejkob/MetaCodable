{"abstract":[{"text":"Appends the elements of a sequence to a range-replaceable collection.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/conditionelementlistsyntax\/+=(_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/SyntaxCollection-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/+=(_:_:)"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa"},{"kind":"text","text":">)"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","isActive":true},{"text":" to append to.","type":"text"}],"type":"paragraph"}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A collection or finite sequence."}]}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This will result in an allocation of a copy of this node."}]}]}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"modules":[{"name":"SwiftSyntax"}],"extendedModule":"SwiftSyntax","title":"+=(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:SK7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"symbolKind":"op","roleHeading":"Operator","externalID":"s:11SwiftSyntax0B10CollectionPAAE2peoiyyxz_qd__tSTRd__7ElementQyd__AERtzlFZ::SYNTHESIZED::s:11SwiftSyntax020ConditionElementListB0V"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/SyntaxCollection-Implementations":{"title":"SyntaxCollection Implementations","kind":"article","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/syntaxcollection-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/SyntaxCollection-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxCollection":{"url":"\/documentation\/swiftsyntax\/syntaxcollection","navigatorTitle":[{"text":"SyntaxCollection","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","type":"topic","title":"SyntaxCollection","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxCollection","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionElementListSyntax"}],"title":"ConditionElementListSyntax","navigatorTitle":[{"text":"ConditionElementListSyntax","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/+=(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"+=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:SK7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"text":"Appends the elements of a sequence to a range-replaceable collection.","type":"text"}],"type":"topic","title":"+=(_:_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/+=(_:_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/+=(_:_:)","kind":"symbol"}}}