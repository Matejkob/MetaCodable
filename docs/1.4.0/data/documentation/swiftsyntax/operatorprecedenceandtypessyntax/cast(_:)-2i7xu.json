{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The current syntax node.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"content":[{"type":"paragraph","inlineContent":[{"text":"This method overloads the general ","type":"text"},{"type":"codeVoice","code":"cast"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"text":" ","type":"text"},{"text":"informing the user that the cast will always succeed.","type":"text"}]}],"style":"note","type":"aside","name":"Note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","metadata":{"roleHeading":"Instance Method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax026OperatorPrecedenceAndTypesB0V","modules":[{"name":"SwiftSyntax"}],"symbolKind":"method","platforms":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"SwiftSyntax","title":"cast(_:)","role":"symbol"},"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax\/cast(_:)-2i7xu"]}],"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/cast(_:)-2i7xu","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OperatorPrecedenceAndTypesSyntax/cast(_:)-2i7xu":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"deprecated":true,"type":"topic","url":"\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax\/cast(_:)-2i7xu","title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/cast(_:)-2i7xu","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OperatorPrecedenceAndTypesSyntax":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OperatorPrecedenceAndTypesSyntax"}],"title":"OperatorPrecedenceAndTypesSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax","abstract":[{"type":"text","text":"A clause to specify precedence group in infix operator declarations, and designated types in any operator declaration."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OperatorPrecedenceAndTypesSyntax"}],"url":"\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OperatorPrecedenceAndTypesSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/SyntaxProtocol-Implementations","type":"topic"}}}