{"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"extendedModule":"SwiftSyntax","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE10isImplicitSbvp::SYNTHESIZED::s:11SwiftSyntax026OperatorPrecedenceAndTypesB0V","symbolKind":"property","title":"isImplicit","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":[],"role":"symbol","roleHeading":"Instance Property"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/SyntaxProtocol-Implementations"]]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Check children(viewMode: .all).isEmpty instead"}],"type":"paragraph"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]}],"variants":[{"paths":["\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax\/isimplicit"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/isImplicit"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OperatorPrecedenceAndTypesSyntax":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OperatorPrecedenceAndTypesSyntax"}],"title":"OperatorPrecedenceAndTypesSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax","abstract":[{"type":"text","text":"A clause to specify precedence group in infix operator declarations, and designated types in any operator declaration."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OperatorPrecedenceAndTypesSyntax"}],"url":"\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OperatorPrecedenceAndTypesSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/SyntaxProtocol-Implementations","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OperatorPrecedenceAndTypesSyntax/isImplicit":{"url":"\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax\/isimplicit","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","kind":"symbol","title":"isImplicit","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/isImplicit","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}]}}}