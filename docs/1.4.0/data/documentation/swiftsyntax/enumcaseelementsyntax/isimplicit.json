{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/enumcaseelementsyntax\/isimplicit"]}],"metadata":{"roleHeading":"Instance Property","title":"isImplicit","modules":[{"name":"SwiftSyntax"}],"role":"symbol","externalID":"s:11SwiftSyntax0B8ProtocolPAAE10isImplicitSbvp::SYNTHESIZED::s:11SwiftSyntax015EnumCaseElementB0V","extendedModule":"SwiftSyntax","symbolKind":"property","platforms":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax\/isImplicit"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Check children(viewMode: .all).isEmpty instead"}]}],"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","url":"\/documentation\/swiftsyntax","kind":"symbol","type":"topic","abstract":[],"title":"SwiftSyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementSyntax":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax","url":"\/documentation\/swiftsyntax\/enumcaseelementsyntax","abstract":[{"text":"An element of an enum case, containing the name of the case and, optionally, either associated values or an assignment to a raw value.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnumCaseElementSyntax"}],"title":"EnumCaseElementSyntax","navigatorTitle":[{"text":"EnumCaseElementSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax\/SyntaxProtocol-Implementations","title":"SyntaxProtocol Implementations","url":"\/documentation\/swiftsyntax\/enumcaseelementsyntax\/syntaxprotocol-implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementSyntax/isImplicit":{"deprecated":true,"title":"isImplicit","type":"topic","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax\/isImplicit","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/enumcaseelementsyntax\/isimplicit"}}}