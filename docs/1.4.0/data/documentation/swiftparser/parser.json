{"metadata":{"symbolKind":"struct","modules":[{"name":"SwiftParser"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"title":"Parser","externalID":"s:11SwiftParser0B0V","role":"symbol","roleHeading":"Structure"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser"]]},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser"},{"type":"text","text":" implements a recursive descent parser that produces a SwiftSyntax"},{"type":"text","text":" "},{"type":"text","text":"tree. Its implementation is divided among a set of files named for the"},{"text":" ","type":"text"},{"text":"class of syntax nodes they parse. For example, declaration parsing happens","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"codeVoice","code":"Declaration.swift"},{"type":"text","text":", and expression parsing happens in "},{"type":"codeVoice","code":"Expression.swift"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Parsing-Swift","level":1,"type":"heading","text":"Parsing Swift"},{"inlineContent":[{"type":"text","text":"Broadly, the parser has a one-to-one correspondence between syntax nodes"},{"text":" ","type":"text"},{"type":"text","text":"and parsing functions. If a function consumes input from the token stream,"},{"text":" ","type":"text"},{"text":"it must be marked ","type":"text"},{"type":"codeVoice","code":"mutating"},{"text":" to do so. Thus, parsing functions that only","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"serve e.g. to read the current token and disambiguate the parse, or recover"},{"type":"text","text":" "},{"type":"text","text":"from a bad parse should be left "},{"code":"nonmutating","type":"codeVoice"},{"type":"text","text":" to indicate that they do not"},{"type":"text","text":" "},{"text":"consume tokens.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Token consumption is generally either unconditional via ","type":"text"},{"type":"codeVoice","code":"TokenConsumer.consumeAnyToken()"},{"type":"text","text":" "},{"text":"or conditional via a combination of ","type":"text"},{"type":"codeVoice","code":"TokenConsumer\/at(_:where:)"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"TokenConsumer.eat(_:)"},{"type":"text","text":". When parsing conditionally, "},{"code":"at","type":"codeVoice"},{"text":" returns a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"handle that is passed to "},{"type":"codeVoice","code":"eat"},{"text":". This ensures that any structure that is","type":"text"},{"type":"text","text":" "},{"text":"checked for is actually parsed by the parser at that position. If the parser","type":"text"},{"type":"text","text":" "},{"type":"text","text":"detects any unexpected structure, an assertion is raised. To perform"},{"type":"text","text":" "},{"type":"text","text":"conditional consumption and validation in one step, use "},{"type":"codeVoice","code":"consume(if:)"},{"text":" for","type":"text"},{"text":" ","type":"text"},{"text":"one kind of token, or ","type":"text"},{"type":"codeVoice","code":"consume(ifAny:)"},{"text":" to consume many kinds of tokens.","type":"text"}]},{"inlineContent":[{"type":"text","text":"It can also be useful to expect the presence of certain structural elements."},{"text":" ","type":"text"},{"type":"text","text":"For example, a function that parses the content of code items might expect"},{"type":"text","text":" "},{"type":"text","text":"an opening brace, its items, and also expect a closing brace:"}],"type":"paragraph"},{"syntax":null,"code":["let lbrace = self.eat(.leftBrace)","\/*  *\/","let rbrace = self.expect(.rightBrace)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Unlike "},{"code":"TokenConsumer.eat(_:)","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Parser.expect(_:remapping:)","type":"codeVoice"},{"text":" returns","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"missing"},{"type":"text","text":" token of the given kind. This allows the tree to remain"},{"text":" ","type":"text"},{"type":"text","text":"well-formed even when the input text is not, all without affecting"},{"text":" ","type":"text"},{"type":"text","text":"source fidelity."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For compound syntactic structures, parsing loops are often required. The general"},{"type":"text","text":" "},{"text":"structure of a source-preserving loop is","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var keepGoing: RawTokenSyntax? = nil","repeat {","  \/\/ Parse an element","  let element = self.parseElement()","","  \/\/ Consume the delimiter","  keepGoing = self.consume(if: .delimiter)","  elements.append(RawElementSyntax(element, ..., keepGoing))","} while keepGoing != nil"]},{"inlineContent":[{"type":"text","text":"Such parsing loops are kept enclosed in "},{"code":"do","type":"codeVoice"},{"text":" blocks to avoid having their","type":"text"},{"type":"text","text":" "},{"type":"text","text":"state leak into surrounding scopes."}],"type":"paragraph"},{"level":1,"anchor":"Lookahead","type":"heading","text":"Lookahead"},{"type":"paragraph","inlineContent":[{"text":"This parser provides at most one token worth of lookahead via","type":"text"},{"type":"text","text":" "},{"code":"peek()","type":"codeVoice"},{"type":"text","text":". If more tokens are required to disambiguate a parse, a"},{"type":"text","text":" "},{"code":"Parser.Lookahead","type":"codeVoice"},{"text":" instance should be constructed instead with","type":"text"},{"text":" ","type":"text"},{"code":"Parser.lookahead()","type":"codeVoice"},{"type":"text","text":"."}]},{"anchor":"Source-Fidelity","type":"heading","text":"Source Fidelity","level":1},{"inlineContent":[{"type":"text","text":"The syntax trees produced by this parser are required to faithfully"},{"text":" ","type":"text"},{"type":"text","text":"represent the input source text. As such, there are no utilities that allow"},{"type":"text","text":" "},{"text":"for skipping tokens in the parser. In addition, consumed tokens must become","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"part of at  least one syntax node."}],"type":"paragraph"},{"inlineContent":[{"text":"The exception to this is parser lookahead, which is allowed to skip as many","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"tokens as needed to disambiguate a parse. However, because lookahead"},{"text":" ","type":"text"},{"type":"text","text":"operates on a copy of the lexical stream, no input tokens are lost.."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"A parser for the Swift programming language."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftparser\/parser"]}],"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/init(_:maximumNestingLevel:parseTransition:arena:swiftVersion:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/init(_:maximumNestingLevel:parseTransition:swiftVersion:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/lookaheadRanges"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"anchor":"Type-Methods","title":"Type Methods","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parse(source:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parse(source:maximumNestingLevel:swiftVersion:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:maximumNestingLevel:parseTransition:)-30y1m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:maximumNestingLevel:parseTransition:)-8hjcw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:parseTransition:)-2gtt2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:parseTransition:)-dj0z"]},{"anchor":"Enumerations","generated":true,"title":"Enumerations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/SwiftVersion"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/init(_:maximumNestingLevel:parseTransition:arena:swiftVersion:)":{"title":"init(_:maximumNestingLevel:parseTransition:arena:swiftVersion:)","role":"symbol","abstract":[{"text":"Initializes a ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser","type":"reference","isActive":true},{"type":"text","text":" from the given input buffer."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/init(_:maximumNestingLevel:parseTransition:arena:swiftVersion:)","url":"\/documentation\/swiftparser\/parser\/init(_:maximumnestinglevel:parsetransition:arena:swiftversion:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"maximumNestingLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"text":"parseTransition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"IncrementalParseTransition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC"},{"text":"?, ","kind":"text"},{"text":"arena","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax07ParsingB5ArenaC","kind":"typeIdentifier","text":"ParsingSyntaxArena"},{"kind":"text","text":"?, "},{"text":"swiftVersion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftParser0B0V0A7VersionO","text":"SwiftVersion","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parseIncrementally(source:maximumNestingLevel:parseTransition:)-30y1m":{"abstract":[{"type":"text","text":"Parse the source code in the given buffer as Swift source file with support"},{"type":"text","text":" "},{"text":"for incremental parsing.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:maximumNestingLevel:parseTransition:)-30y1m","title":"parseIncrementally(source:maximumNestingLevel:parseTransition:)","deprecated":true,"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"parseIncrementally","kind":"identifier"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SR","text":"UnsafeBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"maximumNestingLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"?, ","kind":"text"},{"text":"parseTransition","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC","text":"IncrementalParseTransition","kind":"typeIdentifier"},{"text":"?) -> (tree","kind":"text"},{"kind":"text","text":": "},{"text":"SourceFileSyntax","preciseIdentifier":"s:11SwiftSyntax010SourceFileB0V","kind":"typeIdentifier"},{"text":", lookaheadRanges","kind":"text"},{"text":": ","kind":"text"},{"text":"LookaheadRanges","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser15LookaheadRangesV"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftparser\/parser\/parseincrementally(source:maximumnestinglevel:parsetransition:)-30y1m"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/LookaheadRanges":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/LookaheadRanges","url":"\/documentation\/swiftparser\/lookaheadranges","navigatorTitle":[{"text":"LookaheadRanges","kind":"identifier"}],"abstract":[{"type":"text","text":"Record the lookahead ranges for syntax nodes."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LookaheadRanges"}],"type":"topic","title":"LookaheadRanges"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/lookaheadRanges":{"title":"lookaheadRanges","role":"symbol","abstract":[{"text":"See comments in ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/LookaheadRanges","isActive":true}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/lookaheadRanges","url":"\/documentation\/swiftparser\/parser\/lookaheadranges","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lookaheadRanges","kind":"identifier"},{"kind":"text","text":": "},{"text":"LookaheadRanges","preciseIdentifier":"s:11SwiftParser15LookaheadRangesV","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parse(source:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parse(source:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"source"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"SourceFileSyntax","preciseIdentifier":"s:11SwiftSyntax010SourceFileB0V","kind":"typeIdentifier"}],"title":"parse(source:)","abstract":[{"text":"Parse the source code in the given string as Swift source file. See","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Parser.init"},{"type":"text","text":" for more details."}],"role":"symbol","url":"\/documentation\/swiftparser\/parser\/parse(source:)","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/SwiftVersion":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/SwiftVersion","role":"symbol","title":"Parser.SwiftVersion","url":"\/documentation\/swiftparser\/parser\/swiftversion","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwiftVersion"}],"abstract":[{"text":"A Swift language version.","type":"text"}],"navigatorTitle":[{"text":"SwiftVersion","kind":"identifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser":{"abstract":[{"type":"text","text":"A parser for the Swift programming language."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"kind":"symbol","title":"Parser","url":"\/documentation\/swiftparser\/parser","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parseIncrementally(source:parseTransition:)-dj0z":{"abstract":[{"type":"text","text":"Parse the source code in the given string as Swift source file with support"},{"text":" ","type":"text"},{"text":"for incremental parsing.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:parseTransition:)-dj0z","title":"parseIncrementally(source:parseTransition:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"parseIncrementally","kind":"identifier"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parseTransition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IncrementalParseTransition","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:11SwiftParser22IncrementalParseResultV","text":"IncrementalParseResult","kind":"typeIdentifier"}],"url":"\/documentation\/swiftparser\/parser\/parseincrementally(source:parsetransition:)-dj0z"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/init(_:maximumNestingLevel:parseTransition:swiftVersion:)":{"title":"init(_:maximumNestingLevel:parseTransition:swiftVersion:)","role":"symbol","abstract":[{"type":"text","text":"Initializes a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser","type":"reference","isActive":true},{"type":"text","text":" from the given string."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/init(_:maximumNestingLevel:parseTransition:swiftVersion:)","url":"\/documentation\/swiftparser\/parser\/init(_:maximumnestinglevel:parsetransition:swiftversion:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"maximumNestingLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"parseTransition"},{"text":": ","kind":"text"},{"text":"IncrementalParseTransition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC"},{"text":"?, ","kind":"text"},{"text":"swiftVersion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SwiftVersion","preciseIdentifier":"s:11SwiftParser0B0V0A7VersionO","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parse(source:maximumNestingLevel:swiftVersion:)":{"abstract":[{"type":"text","text":"Parse the source code in the given buffer as Swift source file. See"},{"type":"text","text":" "},{"code":"Parser.init","type":"codeVoice"},{"text":" for more details.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parse(source:maximumNestingLevel:swiftVersion:)","title":"parse(source:maximumNestingLevel:swiftVersion:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"maximumNestingLevel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"swiftVersion","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SwiftVersion","preciseIdentifier":"s:11SwiftParser0B0V0A7VersionO"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax010SourceFileB0V","text":"SourceFileSyntax"}],"url":"\/documentation\/swiftparser\/parser\/parse(source:maximumnestinglevel:swiftversion:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parseIncrementally(source:maximumNestingLevel:parseTransition:)-8hjcw":{"title":"parseIncrementally(source:maximumNestingLevel:parseTransition:)","role":"symbol","abstract":[{"text":"Parse the source code in the given buffer as Swift source file with support","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for incremental parsing."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:maximumNestingLevel:parseTransition:)-8hjcw","url":"\/documentation\/swiftparser\/parser\/parseincrementally(source:maximumnestinglevel:parsetransition:)-8hjcw","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parseIncrementally"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"kind":"text","text":"<"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":">, ","kind":"text"},{"text":"maximumNestingLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"?, ","kind":"text"},{"text":"parseTransition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"IncrementalParseTransition","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"IncrementalParseResult","preciseIdentifier":"s:11SwiftParser22IncrementalParseResultV","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parseIncrementally(source:parseTransition:)-2gtt2":{"abstract":[{"type":"text","text":"Parse the source code in the given string as Swift source file with support"},{"text":" ","type":"text"},{"text":"for incremental parsing.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:parseTransition:)-2gtt2","title":"parseIncrementally(source:parseTransition:)","deprecated":true,"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"parseIncrementally","kind":"identifier"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parseTransition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IncrementalParseTransition","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC"},{"kind":"text","text":"?) -> (tree"},{"text":": ","kind":"text"},{"text":"SourceFileSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax010SourceFileB0V"},{"text":", lookaheadRanges","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"LookaheadRanges","preciseIdentifier":"s:11SwiftParser15LookaheadRangesV"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftparser\/parser\/parseincrementally(source:parsetransition:)-2gtt2"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser":{"title":"SwiftParser","abstract":[],"url":"\/documentation\/swiftparser","role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser","kind":"symbol","type":"topic"}}}