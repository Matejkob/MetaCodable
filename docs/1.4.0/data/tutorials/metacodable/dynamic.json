{"metadata":{"categoryPathComponent":"Usage","role":"project","category":"Discover MetaCodable","title":"Represent dynamic data variations with protocol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/metacodable\/dynamic"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic"},"kind":"project","hierarchy":{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage","modules":[{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials","projects":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields","kind":"task"}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag","kind":"task"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag"}]}]},{"projects":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","kind":"task"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","kind":"task"}]},{"sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","kind":"task"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection"}],"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic"}],"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable"}],"paths":[["doc:\/\/MetaCodable\/tutorials\/Usage","doc:\/\/MetaCodable\/tutorials\/Usage\/$volume","doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable"]]},"sections":[{"xcodeRequirement":"Xcode 15 or later","chapter":"Advanced MetaCodable","estimatedTimeInMinutes":20,"content":[{"inlineContent":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}],"type":"paragraph"}],"title":"Represent dynamic data variations with protocol","kind":"hero"},{"kind":"tasks","tasks":[{"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Similar to "},{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","isActive":true,"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"enums"}],"overridingTitle":"enums"},{"text":" external, internal and adjacently tagged data variations are supported with default being externally tagged data.","type":"text"}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"title":"Create dynamic variation Codable types","stepsSection":[{"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Identify all the variations and the tags representing variations."}],"type":"paragraph"}],"type":"step","media":"DynamicPost-01.png","code":null,"runtimePreview":null},{"caption":[],"media":null,"runtimePreview":"DynamicPost-01.png","type":"step","content":[{"inlineContent":[{"text":"Create protocol containing common fields across all the data variations.","type":"text"}],"type":"paragraph"}],"code":"DynamicPost-01.swift"},{"code":"DynamicPost-02.swift","runtimePreview":"DynamicPost-01.png","media":null,"caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"Attach "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference"},{"type":"text","text":" attribute to this protocol."}],"type":"paragraph"}]},{"code":"DynamicPost-03.swift","type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create "},{"code":"Codable","type":"codeVoice"},{"text":" types with each type representing a variation.","type":"text"}]}],"media":null,"runtimePreview":"DynamicPost-01.png"},{"type":"step","code":"DynamicPost-04.swift","media":null,"runtimePreview":"DynamicPost-01.png","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conform common data protocol for each variant data type."}]}]},{"caption":[],"media":null,"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","isActive":true,"type":"reference"},{"type":"text","text":" conformance for each variant data type, with "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","isActive":true},{"type":"text","text":" returning variant tag."}],"type":"paragraph"}],"runtimePreview":"DynamicPost-01.png","code":"DynamicPost-05.swift","type":"step"},{"code":"DynamicPost-06.swift","runtimePreview":"DynamicPost-02.png","type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Provide multiple variant tags in "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","type":"reference"},{"text":" in case of multiple tags used to represent same variation.","type":"text"}],"type":"paragraph"}],"media":null},{"media":null,"type":"step","caption":[],"runtimePreview":"DynamicPost-02.png","code":"DynamicPost-07.swift","content":[{"inlineContent":[{"text":"Ignore specific type from decoding or encoding or both by attaching ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()"},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","isActive":true},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","isActive":true},{"text":" macros respectively.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"In case of internally tagged data, attach ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true,"type":"reference"},{"type":"text","text":" macro to "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" declaration with value specifying tag field name."}],"type":"paragraph"}],"type":"step","code":"DynamicPost-08.swift","media":null,"caption":[],"runtimePreview":"DynamicPost-03.png"},{"caption":[],"media":null,"runtimePreview":"DynamicPost-04.png","content":[{"inlineContent":[{"type":"text","text":"In case of adjacently tagged data, additionally attach "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)"},{"text":" macro to ","type":"text"},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" declaration with value specifying content field name."}],"type":"paragraph"}],"code":"DynamicPost-09.swift","type":"step"},{"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"type":"codeVoice","code":"MetaProtocolCodable"},{"text":" build tool plugin to target to handle code generation.","type":"text"}],"type":"paragraph"}],"media":null,"runtimePreview":"Plugin.png","type":"step","caption":[],"code":"Plugin.swift"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use generated ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder"},{"type":"text","text":" for protocol to decode\/encode dynamic type."}]}],"type":"step","media":null,"caption":[],"code":"Page.swift","runtimePreview":"Page.png"}],"anchor":"Create-dynamic-variation-Codable-types"},{"contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Customize "},{"code":"MetaProtocolCodable","type":"codeVoice"},{"type":"text","text":" build tool plugin code generation."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin to target to handle code generation."}],"type":"paragraph"}],"caption":[],"runtimePreview":"Plugin.png","code":"Plugin.swift","media":null,"type":"step"},{"code":"meta_codable_config-01.json","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","isActive":true},{"text":" file in the target plugin is included.","type":"text"}]}],"caption":[],"runtimePreview":null,"type":"step"},{"code":"meta_codable_config-02.json","runtimePreview":"MetaCodableConfig.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provide "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan"},{"text":" mode in ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"},{"type":"text","text":" file to control source files accross dependency targets scanned for "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"type":"text","text":" protocol variation data."}]}],"type":"step","caption":[],"media":null}],"title":"Customize dynamic data variations detection","anchor":"Customize-dynamic-data-variations-detection"}]}],"references":{"DynamicPost-01.swift":{"highlights":[],"syntax":"swift","identifier":"DynamicPost-01.swift","content":["protocol Post {","    var id: UUID { get }","}"],"fileType":"swift","fileName":"Post.swift","type":"file"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-adjacent-tag":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag","role":"pseudoSymbol","kind":"section","type":"section","title":"Create Codable enums with adjacent tag","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-adjacent-tag","abstract":[{"text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":" using ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}]},"DynamicPost-01.png":{"type":"image","alt":"Post variations JSON representation","identifier":"DynamicPost-01.png","variants":[{"url":"\/images\/MetaCodable\/DynamicPost-01.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/DynamicPost-01~dark.png","traits":["1x","dark"]}]},"doc://MetaCodable/tutorials/Usage/Advanced-MetaCodable":{"url":"\/tutorials\/usage\/advanced-metacodable","role":"article","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","abstract":[],"title":"Advanced MetaCodable","kind":"article","type":"topic"},"DynamicPost-06.swift":{"highlights":[{"line":24}],"syntax":"swift","identifier":"DynamicPost-06.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"fileType":"swift","fileName":"Post.swift","type":"file"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-basic-value-types-without-type-check":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check","abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}],"type":"section","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/helper#DecodeEncode-basic-value-types-without-type-check","title":"Decode\/Encode basic value types without type check"},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig":{"fragments":[{"text":"configuration","kind":"keyword"},{"kind":"text","text":" "},{"text":"file","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaCodableConfig"}],"url":"\/documentation\/metacodable\/metacodableconfig","role":"symbol","title":"MetaCodableConfig","kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","abstract":[{"type":"text","text":"The configuration file providing additional customization options for "},{"code":"MetaProtocolCodable","type":"codeVoice"},{"type":"text","text":" build tool plugin."}]},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-date-representations":{"kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","title":"Decode\/Encode date representations","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"code":"HelperCoders","type":"codeVoice"},{"type":"text","text":" module."}],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/helper#DecodeEncode-date-representations"},"DynamicPost-05.swift":{"type":"file","fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"picture\"","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-05.swift","syntax":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48}],"fileType":"swift"},"Page.swift":{"fileName":"Page.swift","highlights":[],"type":"file","identifier":"Page.swift","syntax":"swift","content":["import MetaCodable","","@Codable","struct Page {","    @CodedBy(","        SequenceCoder(","            elementHelper: PostCoder()","        )","    )","    let content: [Post]","    let next: String","}"],"fileType":"swift"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Create-Codable-type-and-customize-CodingKey-of-fields":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields","role":"pseudoSymbol","kind":"section","type":"section","title":"Create Codable type and customize CodingKey of fields","url":"\/tutorials\/metacodable\/essential#Create-Codable-type-and-customize-CodingKey-of-fields","abstract":[{"text":"This tutorial guides you through","type":"text"}]},"Page.png":{"type":"image","identifier":"Page.png","alt":"JSON representation of Page containing Posts","variants":[{"url":"\/images\/MetaCodable\/Page.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/Page~dark.png","traits":["1x","dark"]}]},"doc://MetaCodable/tutorials/Usage":{"url":"\/tutorials\/usage","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage","title":"Discover MetaCodable","type":"topic","kind":"overview","role":"overview","abstract":[{"type":"codeVoice","code":"MetaCodable"},{"text":" supercharges ","type":"text"},{"type":"codeVoice","code":"Swift"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations with macros. Remove previous boiler-plate for "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations and create "},{"type":"codeVoice","code":"Codable"},{"text":" conformances faster than ever before.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"abstract":[{"text":"The identifier value(s) for this type.","type":"text"}],"url":"\/documentation\/metacodable\/dynamiccodable\/identifier","title":"identifier","required":true,"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"identifier","kind":"identifier"},{"kind":"text","text":": "},{"text":"DynamicCodableIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"IdentifierValue","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB0P15IdentifierValueQa"},{"kind":"text","text":">"}]},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig/Scan":{"fragments":[{"text":"configuration","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"option"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scan"}],"role":"symbol","abstract":[{"text":"The source file scan option for ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"text":" build tool plugin.","type":"text"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan","url":"\/documentation\/metacodable\/metacodableconfig\/scan","title":"Scan","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"type":"topic","url":"\/documentation\/metacodable\/ignoreencoding()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from encoding."}],"title":"IgnoreEncoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"type":"topic","url":"\/documentation\/metacodable\/contentat(_:_:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"type":"text","text":" "},{"text":"to be decoded\/encoded at the ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"title":"ContentAt(_:_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ContentAt","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)"},"doc://MetaCodable/tutorials/Usage/MetaCodable-essentials":{"role":"article","type":"topic","kind":"article","url":"\/tutorials\/usage\/metacodable-essentials","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials","title":"MetaCodable essentials","abstract":[]},"doc://MetaCodable/tutorials/MetaCodable/Enum":{"url":"\/tutorials\/metacodable\/enum","type":"topic","kind":"project","estimatedTime":"10min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","title":"Represent variations in data","role":"project","abstract":[{"text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in ","type":"text"},{"type":"codeVoice","code":"Swift"},{"type":"text","text":" using "},{"type":"codeVoice","code":"MetaCodable"},{"text":".","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}],"kind":"symbol","type":"topic","title":"CodedAt(_:)","role":"symbol","url":"\/documentation\/metacodable\/codedat(_:)"},"DynamicPost-03.png":{"type":"image","alt":"Internally tagged Post variations JSON representation","identifier":"DynamicPost-03.png","variants":[{"url":"\/images\/MetaCodable\/DynamicPost-03.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/DynamicPost-03~dark.png","traits":["1x","dark"]}]},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-sequence-of-values":{"role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/metacodable\/helper#DecodeEncode-sequence-of-values","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values","title":"Decode\/Encode sequence of values","abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}]},"doc://MetaCodable/tutorials/MetaCodable/Helper":{"role":"project","estimatedTime":"20min","url":"\/tutorials\/metacodable\/helper","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}],"kind":"project","type":"topic","title":"Add common decoding\/encoding customizations"},"meta_codable_config-02.json":{"syntax":"json","content":["{","    \"scan\": \"recursive\"","}"],"highlights":[{"line":1},{"line":2},{"line":3}],"fileType":"json","fileName":"meta_codable_config.json","type":"file","identifier":"meta_codable_config-02.json"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"type":"topic","url":"\/documentation\/metacodable\/codable()","role":"symbol","kind":"symbol","abstract":[{"text":"Generate ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"enum"},{"text":", ","type":"text"},{"code":"actor","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"protocol","type":"codeVoice"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"text":" ","type":"text"},{"type":"text","text":"declarations."}],"title":"Codable()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Codable","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Customize-dynamic-data-variations-detection":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection","role":"pseudoSymbol","kind":"section","type":"section","title":"Customize dynamic data variations detection","url":"\/tutorials\/metacodable\/dynamic#Customize-dynamic-data-variations-detection","abstract":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}]},"DynamicPost-04.swift":{"content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost: Post {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"type":"file","syntax":"swift","fileType":"swift","fileName":"Post.swift","highlights":[{"line":9},{"line":15},{"line":22},{"line":29}],"identifier":"DynamicPost-04.swift"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-external-tag":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag","role":"pseudoSymbol","kind":"section","type":"section","title":"Create Codable enums with external tag","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-external-tag","abstract":[{"text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":" using ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}]},"DynamicPost-09.swift":{"syntax":"swift","content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","@ContentAt(\"content\")","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":5}],"fileType":"swift","fileName":"Post.swift","type":"file","identifier":"DynamicPost-09.swift"},"DynamicPost-03.swift":{"content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"type":"file","syntax":"swift","fileType":"swift","fileName":"Post.swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34}],"identifier":"DynamicPost-03.swift"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"type":"topic","url":"\/documentation\/metacodable\/ignoredecoding()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from decoding."}],"title":"IgnoreDecoding()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()"},"doc://MetaCodable/tutorials/MetaCodable/Helper#Create-custom-advanced-customizations":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","role":"pseudoSymbol","kind":"section","type":"section","title":"Create custom advanced customizations","url":"\/tutorials\/metacodable\/helper#Create-custom-advanced-customizations","abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}]},"DynamicPost-07.swift":{"syntax":"swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"fileType":"swift","fileName":"Post.swift","type":"file","identifier":"DynamicPost-07.swift"},"doc://MetaCodable/tutorials/MetaCodable/Essential":{"type":"topic","role":"project","title":"Use with general-purpose Swift types","kind":"project","estimatedTime":"10min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","url":"\/tutorials\/metacodable\/essential","abstract":[{"text":"This tutorial guides you through","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"type":"topic","title":"DynamicCodable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicCodable"}],"url":"\/documentation\/metacodable\/dynamiccodable"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Create-dynamic-variation-Codable-types":{"role":"pseudoSymbol","type":"section","abstract":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}],"kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","title":"Create dynamic variation Codable types","url":"\/tutorials\/metacodable\/dynamic#Create-dynamic-variation-Codable-types"},"DynamicPost-02.png":{"type":"image","identifier":"DynamicPost-02.png","alt":"Post variations JSON representation","variants":[{"url":"\/images\/MetaCodable\/DynamicPost-02.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/DynamicPost-02~dark.png","traits":["1x","dark"]}]},"DynamicPost-02.swift":{"syntax":"swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}"],"highlights":[{"line":1},{"line":2},{"line":3}],"fileType":"swift","fileName":"Post.swift","type":"file","identifier":"DynamicPost-02.swift"},"Plugin.swift":{"fileName":"Package.swift","highlights":[],"type":"file","identifier":"Plugin.swift","syntax":"swift","content":["import PackageDescription","","let appTarget = package.targets.first!","appTarget.plugins.append(","    .plugin(","        name: \"MetaProtocolCodable\",","        package: \"MetaCodable\"","    )",")"],"fileType":"swift"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HelperCoder"}],"kind":"symbol","title":"HelperCoder","navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that helps to decode and encode underlying "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","isActive":true,"type":"reference"},{"type":"text","text":" type"},{"text":" ","type":"text"},{"text":"from provided ","type":"text"},{"type":"codeVoice","code":"decoder"},{"text":" and to provided ","type":"text"},{"code":"encoder","type":"codeVoice"},{"text":" respectively.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","url":"\/documentation\/metacodable\/helpercoder"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Coded","kind":"identifier"}],"kind":"symbol","title":"Coded","required":true,"abstract":[{"type":"text","text":"The actual type of value that is going to be decoded\/encoded."}],"type":"topic","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","url":"\/documentation\/metacodable\/helpercoder\/coded"},"meta_codable_config-01.json":{"syntax":"json","content":["{}"],"highlights":[],"fileType":"json","fileName":"meta_codable_config.json","type":"file","identifier":"meta_codable_config-01.json"},"Xcode 15 or later":{"type":"xcodeRequirement","identifier":"Xcode 15 or later","title":"Xcode 15 or later","url":"https:\/\/itunes.apple.com\/us\/app\/xcode\/id497799835?mt=12"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-internal-tag":{"kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag","title":"Create Codable enums with internal tag","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":"."}],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-internal-tag"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Customize-field-decodingencoding":{"role":"pseudoSymbol","type":"section","abstract":[{"text":"This tutorial guides you through","type":"text"}],"kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding","title":"Customize field decoding\/encoding","url":"\/tutorials\/metacodable\/essential#Customize-field-decodingencoding"},"DynamicPost-04.png":{"type":"image","identifier":"DynamicPost-04.png","alt":"Adjacently tagged Post variations JSON representation","variants":[{"url":"\/images\/MetaCodable\/DynamicPost-04.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/DynamicPost-04~dark.png","traits":["1x","dark"]}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCoding","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from decoding and encoding."}],"type":"topic","role":"symbol","title":"IgnoreCoding()","url":"\/documentation\/metacodable\/ignorecoding()","kind":"symbol"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Share-common-Codable-fields":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields","role":"pseudoSymbol","kind":"section","type":"section","title":"Share common Codable fields","url":"\/tutorials\/metacodable\/essential#Share-common-Codable-fields","abstract":[{"text":"This tutorial guides you through","type":"text"}]},"MetaCodableConfig.png":{"type":"image","identifier":"MetaCodableConfig.png","alt":"MetaCodableConfig.plist configuration file","variants":[{"url":"\/images\/MetaCodable\/MetaCodableConfig.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/MetaCodableConfig~dark.png","traits":["1x","dark"]}]},"Plugin.png":{"type":"image","identifier":"Plugin.png","alt":"Xcode build tool plugin settings","variants":[{"url":"\/images\/MetaCodable\/Plugin.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/Plugin~dark.png","traits":["1x","dark"]}]},"DynamicPost-08.swift":{"fileType":"swift","highlights":[{"line":4}],"content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-08.swift","fileName":"Post.swift","type":"file","syntax":"swift"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic":{"type":"topic","role":"project","title":"Represent dynamic data variations with protocol","kind":"project","estimatedTime":"20min","url":"\/tutorials\/metacodable\/dynamic","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","abstract":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}]}}}