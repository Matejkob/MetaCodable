{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":" "},{"kind":"internalParam","text":"elements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"...)"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The elements to contain."}],"type":"paragraph"}],"name":"elements"}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"Creates group identifiers containing the given elements.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"Creates an instance initialized with the given elements."}],"sections":[],"metadata":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"...)"}],"extendedModule":"MetaCodable","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:11MetaCodable07DynamicB10IdentifierO12arrayLiteralACyxGxd_tcfc","title":"init(arrayLiteral:)","modules":[{"name":"MetaCodable"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable","doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier\/ExpressibleByArrayLiteral-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier\/init(arrayLiteral:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/dynamiccodableidentifier\/init(arrayliteral:)"]}],"kind":"symbol","references":{"doc://MetaCodable/documentation/MetaCodable/DynamicCodableIdentifier/init(arrayLiteral:)":{"title":"init(arrayLiteral:)","abstract":[{"type":"text","text":"Creates an instance initialized with the given elements."}],"url":"\/documentation\/metacodable\/dynamiccodableidentifier\/init(arrayliteral:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"...)"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier\/init(arrayLiteral:)","type":"topic","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable":{"abstract":[{"type":"text","text":"Supercharge "},{"type":"codeVoice","code":"Swift"},{"text":"â€™s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","title":"MetaCodable","role":"collection","url":"\/documentation\/metacodable"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodableIdentifier/ExpressibleByArrayLiteral-Implementations":{"title":"ExpressibleByArrayLiteral Implementations","abstract":[],"url":"\/documentation\/metacodable\/dynamiccodableidentifier\/expressiblebyarrayliteral-implementations","role":"collectionGroup","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier\/ExpressibleByArrayLiteral-Implementations","type":"topic","kind":"article"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodableIdentifier":{"role":"symbol","abstract":[{"type":"text","text":"The identifier option for "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","isActive":true,"type":"reference"},{"text":" types.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DynamicCodableIdentifier","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicCodableIdentifier","kind":"identifier"}],"url":"\/documentation\/metacodable\/dynamiccodableidentifier","title":"DynamicCodableIdentifier","type":"topic","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"role":"symbol","abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"url":"\/documentation\/metacodable\/dynamiccodable","title":"DynamicCodable","type":"topic","kind":"symbol"}}}