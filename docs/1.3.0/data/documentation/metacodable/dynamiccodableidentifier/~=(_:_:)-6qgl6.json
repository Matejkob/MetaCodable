{"metadata":{"modules":[{"name":"MetaCodable"}],"symbolKind":"op","role":"symbol","roleHeading":"Operator","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"~=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO","text":"DynamicCodableIdentifier","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"externalID":"s:11MetaCodable07DynamicB10IdentifierO2teoiySbACyxG_xtFZ","title":"~=(_:_:)"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/dynamiccodableidentifier\/~=(_:_:)-6qgl6"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"~="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"left"},{"kind":"text","text":": "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","kind":"typeIdentifier","text":"DynamicCodableIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"internalParam","text":"right"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","type":"reference"},{"text":" value.","type":"text"}]}],"name":"left"},{"content":[{"inlineContent":[{"text":"The identifier value compared.","type":"text"}],"type":"paragraph"}],"name":"right"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"Whether identifier value is equivalent.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"True"},{"text":" if the identifier value is exactly equal when left value has only","type":"text"},{"text":" ","type":"text"},{"text":"one identifier or left value contains the identifier value in case of","type":"text"},{"text":" ","type":"text"},{"text":"multiple identifiers, ","type":"text"},{"type":"codeVoice","code":"False"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable","doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier"]]},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equivalent."}],"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier\/~=(_:_:)-6qgl6","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://MetaCodable/documentation/MetaCodable/DynamicCodableIdentifier":{"navigatorTitle":[{"kind":"identifier","text":"DynamicCodableIdentifier"}],"abstract":[{"type":"text","text":"The identifier option for "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","type":"reference","isActive":true},{"text":" types.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","title":"DynamicCodableIdentifier","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodableIdentifier"}],"type":"topic","url":"\/documentation\/metacodable\/dynamiccodableidentifier"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"title":"DynamicCodable","kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","role":"symbol","url":"\/documentation\/metacodable\/dynamiccodable","abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicCodable","kind":"identifier"}]},"doc://MetaCodable/documentation/MetaCodable/DynamicCodableIdentifier/~=(_:_:)-6qgl6":{"role":"symbol","title":"~=(_:_:)","url":"\/documentation\/metacodable\/dynamiccodableidentifier\/~=(_:_:)-6qgl6","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equivalent."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier\/~=(_:_:)-6qgl6","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"~="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO","text":"DynamicCodableIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","role":"collection","url":"\/documentation\/metacodable","abstract":[{"text":"Supercharge ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":"â€™s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros.","type":"text"}]}}}