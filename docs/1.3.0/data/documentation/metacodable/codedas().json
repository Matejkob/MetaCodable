{"seeAlsoSections":[{"title":"Strategies","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"]}],"metadata":{"role":"symbol","platforms":[{"name":"Swift","introducedAt":"5.9","beta":false,"unavailable":false,"deprecated":false}],"roleHeading":"Macro","title":"CodedAs()","symbolKind":"macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">()","kind":"text"}],"externalID":"s:11MetaCodable7CodedAsyycSeRzSERzSQRzlufm","modules":[{"name":"MetaCodable"}]},"abstract":[{"type":"text","text":"Provides the identifier actual type for internally\/adjacently tagged enums"},{"type":"text","text":" "},{"type":"text","text":"and protocols."}],"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/metacodable\/codedas()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(peer) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"When type is provided attached to enum\/protocol declaration the identifier"},{"type":"text","text":" "},{"type":"text","text":"is decoded to the provided type instead of "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type. i.e. for enum:"}],"type":"paragraph"},{"type":"codeListing","code":["@Codable","@CodedAt(\"type\")","@CodedAs<Int>","enum Command {","    @CodedAs(1)","    case load(key: String)","    @CodedAs(2)","    case store(key: String, value: Int)","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"or protocol:"}],"type":"paragraph"},{"type":"codeListing","code":["@Codable","@CodedAt(\"type\")","@CodedAs<Int>","protocol Command {","    var key: String { get }","}","","@Codable","struct Load: Command, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<Int> { 1 }","    let key: String","}","","@Codable","struct Store: Command, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<Int> { 2 }","    let key: String","    let value: Int","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"the encoded JSON for internally tagged data will be of following variations:"}],"type":"paragraph"},{"type":"codeListing","code":["{ \"key\": \"MyKey\", \"type\": 1 }"],"syntax":"json"},{"type":"codeListing","code":["{ \"key\": \"MyKey\", \"value\": 42, \"type\": 2 }"],"syntax":"json"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"This macro on its own only validates if attached declaration","type":"text"},{"text":" ","type":"text"},{"text":"is a variable declaration. ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference"},{"text":" macro uses this macro","type":"text"},{"text":" ","type":"text"},{"text":"when generating final implementations.","type":"text"}]}]},{"name":"Important","type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"For each case ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","type":"reference","isActive":true},{"text":" macro with values","type":"text"},{"text":" ","type":"text"},{"text":"of the type here should be provided, otherwise case name as ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" ","type":"text"},{"text":"will be used for comparison. If the type here conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"text":" and can be represented by case name","type":"text"},{"text":" ","type":"text"},{"text":"as ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" literal then no need to provide values with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","type":"reference","isActive":true},{"text":".","type":"text"}]}]},{"name":"Important","type":"aside","style":"important","content":[{"inlineContent":[{"text":"When using with protocols ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"type must be same as the type defined with this macro, in absence of this macro","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue","isActive":true,"type":"reference"},{"text":" type must be ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"Important","type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This attribute must be used combined with "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true},{"type":"text","text":"."}]}]}],"kind":"content"}],"sections":[],"references":{"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from encoding.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/ignoreencoding()","title":"IgnoreEncoding()"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"text":" ","type":"text"},{"text":"the attached type\/enum-case will be ignored for decoding\/encoding.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/ignorecodinginitialized()","title":"IgnoreCodingInitialized()"},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","abstract":[{"text":"Provides the identifier actual type for internally\/adjacently tagged enums","type":"text"},{"text":" ","type":"text"},{"text":"and protocols.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">()"}],"url":"\/documentation\/metacodable\/codedas()","title":"CodedAs()"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","abstract":[{"text":"Indicates ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" for the field names\/associated value label will be","type":"text"},{"text":" ","type":"text"},{"text":"of the provided case format.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO"},{"kind":"text","text":")"}],"url":"\/documentation\/metacodable\/codingkeys(_:)","title":"CodingKeys(_:)"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"text":" ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"url":"\/documentation\/metacodable\/codedat(_:)","title":"CodedAt(_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/ignoredecoding()","title":"IgnoreDecoding()"},"doc://MetaCodable/documentation/MetaCodable":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Supercharge "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"’s "},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros.","type":"text"}],"url":"\/documentation\/metacodable","kind":"symbol","title":"MetaCodable","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"text":" ","type":"text"},{"text":"container ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided with field name as final","type":"text"},{"text":" ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"url":"\/documentation\/metacodable\/codedin(_:)","title":"CodedIn(_:)"},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","abstract":[{"text":"Provides values to be used for an enum-case instead of using case name or","type":"text"},{"text":" ","type":"text"},{"text":"additional variable ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":"s.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"...)"}],"url":"\/documentation\/metacodable\/codedas(_:_:)","title":"CodedAs(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/IdentifierValue":{"kind":"symbol","required":true,"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdentifierValue","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","text":"Equatable","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The type of identifier value."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue","title":"IdentifierValue","type":"topic","url":"\/documentation\/metacodable\/dynamiccodable\/identifiervalue"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"CodedBy(_:)","abstract":[{"type":"text","text":"Indicates the field or enum\/protocol identifier needs to be decoded and"},{"type":"text","text":" "},{"type":"text","text":"encoded by the provided "},{"type":"codeVoice","code":"helper"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","url":"\/documentation\/metacodable\/codedby(_:)"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"text":" ","type":"text"},{"text":"declarations.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/codable()","title":"Codable()"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","abstract":[{"text":"Indicates the enum-case associated values or protocol conforming types need","type":"text"},{"text":" ","type":"text"},{"text":"to be decoded\/encoded at the ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContentAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"url":"\/documentation\/metacodable\/contentat(_:_:)","title":"ContentAt(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/ignorecoding()","title":"IgnoreCoding()"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","abstract":[{"text":"Provides a ","type":"text"},{"code":"default","type":"codeVoice"},{"text":" value to be used when decoding fails and","type":"text"},{"text":" ","type":"text"},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"url":"\/documentation\/metacodable\/default(_:)","title":"Default(_:)"}}}