{"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:SE","text":"Encodable"},{"kind":"text","text":", names: named(CodingKeys), named(DecodingKeys), named(init(from:)), named(encode(to:))) "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, conformances: "},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:SE","text":"Encodable"},{"kind":"text","text":", names: named(CodingKeys), named(init(from:)), named(encode(to:))) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":1,"anchor":"Usage","type":"heading","text":"Usage"},{"type":"paragraph","inlineContent":[{"text":"By default the field name is used as ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" for the field value during","type":"text"},{"text":" ","type":"text"},{"text":"encoding and decoding. Following customization can be done on fields to","type":"text"},{"text":" ","type":"text"},{"text":"provide custom decode and encode behavior:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"reference","isActive":true},{"type":"text","text":" providing single string value as custom coding key."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"type":"text","text":" providing multiple string value as nested coding"},{"type":"text","text":" "},{"type":"text","text":"key path."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","type":"reference"},{"text":" with one or more string value as nested container","type":"text"},{"text":" ","type":"text"},{"text":"coding key path, with variable name as coding key.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"reference","isActive":true},{"type":"text","text":" with no path arguments, when type is composition"},{"type":"text","text":" "},{"type":"text","text":"of multiple "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" types."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)"},{"text":" to provide additional coding key values where","type":"text"},{"text":" ","type":"text"},{"text":"field value can appear.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","isActive":true,"type":"reference"},{"text":" to provide custom decoding\/encoding behavior for","type":"text"},{"text":" ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" types or implement decoding\/encoding for non-","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" types.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","isActive":true,"type":"reference"},{"text":" to provide default value when decoding fails.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)"},{"text":" to provide custom values for enum cases.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true},{"type":"text","text":" to provide enum-case\/protocol identifier tag path."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()"},{"type":"text","text":" to provide enum-case\/protocol identifier tag type."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","type":"reference","isActive":true},{"text":" to provided enum-case\/protocol content path.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","isActive":true},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","isActive":true},{"type":"text","text":" to ignore specific properties\/cases\/types from"},{"text":" ","type":"text"},{"text":"decoding\/encoding or both.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","type":"reference","isActive":true},{"type":"text","text":" to work with different case style "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"s."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","isActive":true,"type":"reference"},{"text":" to ignore decoding and encoding","type":"text"},{"text":" ","type":"text"},{"text":"all initialized properties\/case associated variables.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Generate protocol decoding\/encoding ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","type":"reference","isActive":true},{"text":"s with build tool","type":"text"},{"text":" ","type":"text"},{"text":"plugin ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"text":" from ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","type":"reference","isActive":true},{"text":" types.","type":"text"}]}]}],"type":"unorderedList"},{"level":1,"anchor":"Effect","type":"heading","text":"Effect"},{"type":"paragraph","inlineContent":[{"text":"This macro composes extension macro expansion depending on ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" ","type":"text"},{"text":"conformance of type:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Extension macro expansion, to confirm to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"protocols depending on whether type doesnâ€™t already conform to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" respectively.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Extension macro expansion, to generate custom ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" type for","type":"text"},{"text":" ","type":"text"},{"text":"the attached declaration named ","type":"text"},{"type":"codeVoice","code":"CodingKeys"},{"text":" and use this type for","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementation of both ","type":"text"},{"type":"codeVoice","code":"init(from:)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"encode(to:)"},{"text":" ","type":"text"},{"text":"methods.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"If attached declaration already conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" this macro expansion","type":"text"},{"text":" ","type":"text"},{"text":"is skipped.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"style":"important","type":"aside","name":"Important","content":[{"inlineContent":[{"type":"text","text":"The attached declaration must be of a "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":"actor"},{"type":"text","text":" type. "},{"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"See the limitations for this macro"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Limitations","isActive":true,"overridingTitle":"See the limitations for this macro"},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/codable()"]}],"abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"text":" ","type":"text"},{"text":"declarations.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"title":"Macros","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()"],"generated":true}],"metadata":{"role":"symbol","platforms":[{"deprecated":false,"beta":false,"name":"Swift","unavailable":false,"introducedAt":"5.9"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:11MetaCodable0B0yycfm","modules":[{"name":"MetaCodable"}],"roleHeading":"Macro","title":"Codable()","symbolKind":"macro"},"references":{"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"title":"DynamicCodable","kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","role":"symbol","url":"\/documentation\/metacodable\/dynamiccodable","abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicCodable","kind":"identifier"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"role":"symbol","abstract":[{"type":"text","text":"Provides the identifier actual type for internally\/adjacently tagged enums"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","title":"CodedAs()","kind":"symbol","url":"\/documentation\/metacodable\/codedas()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAs"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">()","kind":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/Limitations":{"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Limitations","abstract":[{"type":"text","text":"All the usage limitations for "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable"},{"type":"text","text":"."}],"role":"article","kind":"article","title":"Limitations","url":"\/documentation\/metacodable\/limitations"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"text":" ","type":"text"},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","title":"ContentAt(_:_:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ContentAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"type":"topic","url":"\/documentation\/metacodable\/contentat(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"title":"IgnoreDecoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","type":"topic","url":"\/documentation\/metacodable\/ignoredecoding()"},"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","role":"collection","url":"\/documentation\/metacodable","abstract":[{"text":"Supercharge ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":"â€™s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"type":"topic","title":"CodedBy(_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedBy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","abstract":[{"text":"Indicates the field or enum\/protocol identifier needs to be decoded and","type":"text"},{"type":"text","text":" "},{"text":"encoded by the provided ","type":"text"},{"code":"helper","type":"codeVoice"},{"text":" instance.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedby(_:)"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/metacodable\/default(_:)","title":"Default(_:)","type":"topic","abstract":[{"text":"Provides a ","type":"text"},{"code":"default","type":"codeVoice"},{"text":" value to be used when decoding fails and","type":"text"},{"text":" ","type":"text"},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}],"kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"role":"symbol","abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"text":" ","type":"text"},{"text":"container ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided with field name as final","type":"text"},{"text":" ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","title":"CodedIn(_:)","kind":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"title":"CodedAs(_:_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Provides values to be used for an enum-case instead of using case name or"},{"text":" ","type":"text"},{"text":"additional variable ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":"s.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","type":"topic","url":"\/documentation\/metacodable\/codedas(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"title":"Codable()","url":"\/documentation\/metacodable\/codable()","role":"symbol","kind":"symbol","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"text":" ","type":"text"},{"text":"declarations.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"title":"CodingKeys(_:)","url":"\/documentation\/metacodable\/codingkeys(_:)","role":"symbol","kind":"symbol","abstract":[{"text":"Indicates ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" for the field names\/associated value label will be","type":"text"},{"text":" ","type":"text"},{"text":"of the provided case format.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/metacodable\/ignoreencoding()","title":"IgnoreEncoding()","type":"topic","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from encoding.","type":"text"}],"kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"title":"IgnoreCodingInitialized()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"type":"text","text":" "},{"text":"the attached type\/enum-case will be ignored for decoding\/encoding.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","type":"topic","url":"\/documentation\/metacodable\/ignorecodinginitialized()"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"role":"symbol","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from decoding and encoding."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","title":"IgnoreCoding()","kind":"symbol","url":"\/documentation\/metacodable\/ignorecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"title":"CodedAt(_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"topic","url":"\/documentation\/metacodable\/codedat(_:)"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"title":"HelperCoder","url":"\/documentation\/metacodable\/helpercoder","navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A type that helps to decode and encode underlying ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","isActive":true,"type":"reference"},{"text":" type","type":"text"},{"text":" ","type":"text"},{"text":"from provided ","type":"text"},{"code":"decoder","type":"codeVoice"},{"text":" and to provided ","type":"text"},{"code":"encoder","type":"codeVoice"},{"text":" respectively.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HelperCoder","kind":"identifier"}]},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"type":"topic","title":"Coded","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Coded","kind":"identifier"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","abstract":[{"type":"text","text":"The actual type of value that is going to be decoded\/encoded."}],"kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/metacodable\/helpercoder\/coded"},"doc://MetaCodable/documentation/MetaCodable/MemberInit()":{"role":"symbol","abstract":[{"type":"text","text":"Generate memberwise initializer(s) of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" and "},{"type":"codeVoice","code":"actor"},{"type":"text","text":" types"},{"type":"text","text":" "},{"type":"text","text":"by leveraging custom attributes provided on variable declarations."}],"url":"\/documentation\/metacodable\/memberinit()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemberInit"},{"kind":"text","text":"()"}],"type":"topic","kind":"symbol","title":"MemberInit()"}}}