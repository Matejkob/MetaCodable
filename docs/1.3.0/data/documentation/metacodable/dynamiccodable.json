{"seeAlsoSections":[{"title":"Dynamic Coding","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"IdentifierValue"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The type declared ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","type":"reference"},{"text":" is used to decode conformed type","type":"text"},{"text":" ","type":"text"},{"text":"if matches, and encode to represent data for the conformed type.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Conforming to this ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" allows type to be decoded\/encoded dynamically","type":"text"},{"text":" ","type":"text"},{"text":"if it conforms to any additional ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":"(s) that declare dynamic","type":"text"},{"text":" ","type":"text"},{"text":"decoding\/encoding with attached ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"text":" macro, while the conformed","type":"text"},{"text":" ","type":"text"},{"text":"types can be declared in several different targets.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use dynamic decoding, first declare a protocol with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"type":"text","text":" macro"},{"type":"text","text":" "},{"type":"text","text":"attached that represents common data. i.e. for dynamic "},{"type":"codeVoice","code":"Post"},{"type":"text","text":" data:"}]},{"code":["[","  {","    \"id\": \"00005678-abcd-efab-0123-456789abcdef\",","    \"type\": \"text\",","    \"author\": \"12345678-abcd-efab-0123-456789abcdef\",","    \"likes\": 145,","    \"createdAt\": \"2021-07-23T07:36:43Z\",","    \"text\": \"Lorem Ipsium\"","  },","  {","    \"id\": \"43215678-abcd-efab-0123-456789abcdef\",","    \"type\": \"picture\",","    \"author\": \"abcd5678-abcd-efab-0123-456789abcdef\",","    \"likes\": 370,","    \"createdAt\": \"2021-07-23T09:32:13Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/picture.png\",","    \"caption\": \"Lorem Ipsium\"","  },","  {","    \"id\": \"43215678-abcd-efab-0123-456789abcdef\",","    \"type\": \"photo\",","    \"author\": \"abcd5678-abcd-efab-0123-456789abcdef\",","    \"likes\": 370,","    \"createdAt\": \"2021-07-23T09:32:13Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/picture.png\",","    \"caption\": \"Lorem Ipsium\"","  },","  {","    \"id\": \"64475bcb-caff-48c1-bb53-8376628b350b\",","    \"type\": \"audio\",","    \"author\": \"4c17c269-1c56-45ab-8863-d8924ece1d0b\",","    \"likes\": 25,","    \"createdAt\": \"2021-07-23T09:33:48Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/audio.aac\",","    \"duration\": 60","  },","  {","    \"id\": \"98765432-abcd-efab-0123-456789abcdef\",","    \"type\": \"video\",","    \"author\": \"04355678-abcd-efab-0123-456789abcdef\",","    \"likes\": 2345,","    \"createdAt\": \"2021-07-23T09:36:38Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/video.mp4\",","    \"duration\": 460,","    \"thumbnail\": \"https:\/\/a.url.com\/to\/a\/thumbnail.png\"","  }","]"],"syntax":"json","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"new protocol ","type":"text"},{"type":"codeVoice","code":"Post"},{"text":" can be created, with the type of identifier tagging","type":"text"},{"text":" ","type":"text"},{"text":"(external, internal or adjacent) indicated, here tagging is ","type":"text"},{"type":"codeVoice","code":"internal"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Data type of identifier can also be specified with ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()"},{"text":" if","type":"text"},{"text":" ","type":"text"},{"text":"varies from ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}]},{"code":["@Codable","@CodedAt(\"type\")","protocol Post {","    var id: UUID { get }","    var author: UUID { get }","    var likes: Int { get }","    var createdAt: String { get }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Individual "},{"type":"codeVoice","code":"Post"},{"type":"text","text":" data type can be created conforming to "},{"type":"codeVoice","code":"Post"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"DynamicCodable"},{"type":"text","text":", specifying one or multiple identifier:"}]},{"code":["@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"text\" }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"audio\" }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"video\" }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Include "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin to generate protocol"},{"type":"text","text":" "},{"type":"text","text":"decoding\/encoding "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","type":"reference","isActive":true},{"type":"text","text":" named "},{"type":"codeVoice","code":"\\(protocolName)Coder"},{"type":"text","text":" "},{"type":"text","text":"where "},{"type":"codeVoice","code":"\\(protocolName)"},{"type":"text","text":" is replaced with the protocol name."}]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/dynamiccodable"]}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","interfaceLanguage":"swift"},"metadata":{"title":"DynamicCodable","modules":[{"name":"MetaCodable"}],"role":"symbol","externalID":"s:11MetaCodable07DynamicB0P","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"roleHeading":"Protocol","symbolKind":"protocol"},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue"]},{"title":"Type Properties","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://MetaCodable/documentation/MetaCodable/DynamicCodableIdentifier":{"role":"symbol","abstract":[{"type":"text","text":"The identifier option for "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","isActive":true,"type":"reference"},{"text":" types.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DynamicCodableIdentifier","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicCodableIdentifier","kind":"identifier"}],"url":"\/documentation\/metacodable\/dynamiccodableidentifier","title":"DynamicCodableIdentifier","type":"topic","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"role":"symbol","abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"url":"\/documentation\/metacodable\/dynamiccodable","title":"DynamicCodable","type":"topic","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HelperCoder","kind":"identifier"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","abstract":[{"type":"text","text":"A type that helps to decode and encode underlying "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","isActive":true},{"type":"text","text":" type"},{"type":"text","text":" "},{"type":"text","text":"from provided "},{"type":"codeVoice","code":"decoder"},{"type":"text","text":" and to provided "},{"type":"codeVoice","code":"encoder"},{"type":"text","text":" respectively."}],"type":"topic","title":"HelperCoder","navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/metacodable\/helpercoder","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig":{"kind":"symbol","title":"MetaCodableConfig","url":"\/documentation\/metacodable\/metacodableconfig","abstract":[{"text":"The configuration file providing additional customization options for ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"text":" build tool plugin.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","fragments":[{"kind":"keyword","text":"configuration"},{"kind":"text","text":" "},{"kind":"keyword","text":"file"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaCodableConfig"}],"role":"symbol","type":"topic"},"doc://MetaCodable/documentation/MetaCodable":{"abstract":[{"type":"text","text":"Supercharge "},{"type":"codeVoice","code":"Swift"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","title":"MetaCodable","role":"collection","url":"\/documentation\/metacodable"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Coded"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","abstract":[{"type":"text","text":"The actual type of value that is going to be decoded\/encoded."}],"type":"topic","title":"Coded","kind":"symbol","url":"\/documentation\/metacodable\/helpercoder\/coded","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"required":true,"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"identifier","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DynamicCodableIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"IdentifierValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","abstract":[{"type":"text","text":"The identifier value(s) for this type."}],"type":"topic","title":"identifier","kind":"symbol","url":"\/documentation\/metacodable\/dynamiccodable\/identifier","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"abstract":[{"text":"Provides the identifier actual type for internally\/adjacently tagged enums","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}],"kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodedAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">()","kind":"text"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","title":"CodedAs()","role":"symbol","url":"\/documentation\/metacodable\/codedas()"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"type":"codeVoice","code":"class"},{"text":", ","type":"text"},{"type":"codeVoice","code":"enum"},{"text":", ","type":"text"},{"type":"codeVoice","code":"actor"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"type":"text","text":"declarations."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","title":"Codable()","role":"symbol","url":"\/documentation\/metacodable\/codable()"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/IdentifierValue":{"abstract":[{"type":"text","text":"The type of identifier value."}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifierValue"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue","title":"IdentifierValue","url":"\/documentation\/metacodable\/dynamiccodable\/identifiervalue","required":true,"kind":"symbol","role":"symbol","type":"topic"}}}