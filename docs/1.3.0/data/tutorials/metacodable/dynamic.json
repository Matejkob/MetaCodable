{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/metacodable\/dynamic"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic"},"metadata":{"role":"project","category":"Discover MetaCodable","title":"Represent dynamic data variations with protocol","categoryPathComponent":"Usage"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"project","hierarchy":{"modules":[{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials","projects":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields","kind":"task"}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag"}]}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","projects":[{"sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","kind":"task"}],"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper"},{"sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection"}],"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic"}]}],"reference":"doc:\/\/MetaCodable\/tutorials\/Usage","paths":[["doc:\/\/MetaCodable\/tutorials\/Usage","doc:\/\/MetaCodable\/tutorials\/Usage\/$volume","doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable"]]},"sections":[{"kind":"hero","chapter":"Advanced MetaCodable","xcodeRequirement":"Xcode 15 or later","title":"Represent dynamic data variations with protocol","content":[{"inlineContent":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}],"type":"paragraph"}],"estimatedTimeInMinutes":20},{"kind":"tasks","tasks":[{"stepsSection":[{"caption":[],"media":"DynamicPost-01.png","code":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Identify all the variations and the tags representing variations."}]}],"runtimePreview":null},{"caption":[],"media":null,"code":"DynamicPost-01.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Create protocol containing common fields across all the data variations."}],"type":"paragraph"}],"runtimePreview":"DynamicPost-01.png"},{"caption":[],"media":null,"code":"DynamicPost-02.swift","type":"step","content":[{"inlineContent":[{"text":"Attach ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","isActive":true,"type":"reference"},{"text":" attribute to this protocol.","type":"text"}],"type":"paragraph"}],"runtimePreview":"DynamicPost-01.png"},{"caption":[],"media":null,"code":"DynamicPost-03.swift","type":"step","content":[{"inlineContent":[{"text":"Create ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" types with each type representing a variation.","type":"text"}],"type":"paragraph"}],"runtimePreview":"DynamicPost-01.png"},{"caption":[],"media":null,"code":"DynamicPost-04.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Conform common data protocol for each variant data type.","type":"text"}]}],"runtimePreview":"DynamicPost-01.png"},{"caption":[],"media":null,"code":"DynamicPost-05.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Add ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","isActive":true,"type":"reference"},{"text":" conformance for each variant data type, with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","isActive":true,"type":"reference"},{"text":" returning variant tag.","type":"text"}]}],"runtimePreview":"DynamicPost-01.png"},{"caption":[],"media":null,"code":"DynamicPost-06.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Provide multiple variant tags in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"},{"type":"text","text":" in case of multiple tags used to represent same variation."}],"type":"paragraph"}],"runtimePreview":"DynamicPost-02.png"},{"caption":[],"media":null,"code":"DynamicPost-07.swift","type":"step","content":[{"inlineContent":[{"text":"Ignore specific type from decoding or encoding or both by attaching ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","type":"reference"},{"text":" or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","type":"reference"},{"text":" or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","type":"reference"},{"text":" macros respectively.","type":"text"}],"type":"paragraph"}],"runtimePreview":"DynamicPost-02.png"},{"caption":[],"media":null,"code":"DynamicPost-08.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"In case of internally tagged data, attach "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"type":"text","text":" macro to "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" declaration with value specifying tag field name."}],"type":"paragraph"}],"runtimePreview":"DynamicPost-03.png"},{"caption":[],"media":null,"code":"DynamicPost-09.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"In case of adjacently tagged data, additionally attach "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","isActive":true},{"type":"text","text":" macro to "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" declaration with value specifying content field name."}],"type":"paragraph"}],"runtimePreview":"DynamicPost-04.png"},{"caption":[],"media":null,"code":"Plugin.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Add ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"text":" build tool plugin to target to handle code generation.","type":"text"}]}],"runtimePreview":"Plugin.png"},{"caption":[],"media":null,"code":"Page.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use generated "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","isActive":true},{"type":"text","text":" for protocol to decode\/encode dynamic type."}]}],"runtimePreview":"Page.png"}],"anchor":"Create-dynamic-variation-Codable-types","title":"Create dynamic variation Codable types","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"Similar to ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","overridingTitleInlineContent":[{"text":"enums","type":"text"}],"overridingTitle":"enums","type":"reference","isActive":true},{"text":" external, internal and adjacently tagged data variations are supported with default being externally tagged data.","type":"text"}]}],"kind":"contentAndMedia"}]},{"stepsSection":[{"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"text":" build tool plugin to target to handle code generation.","type":"text"}],"type":"paragraph"}],"runtimePreview":"Plugin.png","code":"Plugin.swift","type":"step","media":null,"caption":[]},{"content":[{"inlineContent":[{"type":"text","text":"Create "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"},{"type":"text","text":" file in the target plugin is included."}],"type":"paragraph"}],"runtimePreview":null,"code":"meta_codable_config-01.json","type":"step","media":null,"caption":[]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provide "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan","type":"reference"},{"type":"text","text":" mode in "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","type":"reference"},{"type":"text","text":" file to control source files accross dependency targets scanned for "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference"},{"type":"text","text":" protocol variation data."}]}],"runtimePreview":"MetaCodableConfig.png","code":"meta_codable_config-02.json","type":"step","media":null,"caption":[]}],"anchor":"Customize-dynamic-data-variations-detection","title":"Customize dynamic data variations detection","contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"text":"Customize ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"text":" build tool plugin code generation.","type":"text"}],"type":"paragraph"}],"kind":"contentAndMedia"}]}]}],"references":{"Plugin.swift":{"identifier":"Plugin.swift","syntax":"swift","fileName":"Package.swift","content":["import PackageDescription","","let appTarget = package.targets.first!","appTarget.plugins.append(","    .plugin(","        name: \"MetaProtocolCodable\",","        package: \"MetaCodable\"","    )",")"],"highlights":[],"fileType":"swift","type":"file"},"Xcode 15 or later":{"identifier":"Xcode 15 or later","url":"https:\/\/itunes.apple.com\/us\/app\/xcode\/id497799835?mt=12","title":"Xcode 15 or later","type":"xcodeRequirement"},"DynamicPost-03.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/DynamicPost-03.png"},{"traits":["1x","dark"],"url":"\/images\/DynamicPost-03~dark.png"}],"identifier":"DynamicPost-03.png","alt":"Internally tagged Post variations JSON representation","type":"image"},"Page.swift":{"identifier":"Page.swift","syntax":"swift","fileName":"Page.swift","content":["import MetaCodable","","@Codable","struct Page {","    @CodedBy(","        SequenceCoder(","            elementHelper: PostCoder()","        )","    )","    let content: [Post]","    let next: String","}"],"highlights":[],"fileType":"swift","type":"file"},"doc://MetaCodable/tutorials/Usage":{"abstract":[{"code":"MetaCodable","type":"codeVoice"},{"text":" supercharges ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros. Remove previous boiler-plate for ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations and create ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" conformances faster than ever before."}],"role":"overview","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage","title":"Discover MetaCodable","url":"\/tutorials\/usage","kind":"overview","type":"topic"},"DynamicPost-04.swift":{"identifier":"DynamicPost-04.swift","syntax":"swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost: Post {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":9},{"line":15},{"line":22},{"line":29}],"fileType":"swift","type":"file"},"doc://MetaCodable/tutorials/MetaCodable/Essential":{"kind":"project","role":"project","abstract":[{"type":"text","text":"This tutorial guides you through"}],"type":"topic","title":"Use with general-purpose Swift types","estimatedTime":"10min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","url":"\/tutorials\/metacodable\/essential"},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig/Scan":{"title":"Scan","role":"symbol","type":"topic","abstract":[{"text":"The source file scan option for ","type":"text"},{"type":"codeVoice","code":"MetaProtocolCodable"},{"text":" build tool plugin.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan","kind":"symbol","fragments":[{"text":"configuration","kind":"keyword"},{"text":" ","kind":"text"},{"text":"option","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scan","kind":"identifier"}],"url":"\/documentation\/metacodable\/metacodableconfig\/scan"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-basic-value-types-without-type-check":{"abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}],"role":"pseudoSymbol","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check","title":"Decode\/Encode basic value types without type check","url":"\/tutorials\/metacodable\/helper#DecodeEncode-basic-value-types-without-type-check","kind":"section","type":"section"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-external-tag":{"kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"code":"Swift","type":"codeVoice"},{"text":" using ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}],"type":"section","title":"Create Codable enums with external tag","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-external-tag"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Share-common-Codable-fields":{"abstract":[{"text":"This tutorial guides you through","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields","title":"Share common Codable fields","url":"\/tutorials\/metacodable\/essential#Share-common-Codable-fields","kind":"section","type":"section"},"doc://MetaCodable/tutorials/MetaCodable/Enum":{"abstract":[{"text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":" using ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}],"role":"project","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","title":"Represent variations in data","url":"\/tutorials\/metacodable\/enum","kind":"project","type":"topic","estimatedTime":"10min"},"DynamicPost-01.swift":{"identifier":"DynamicPost-01.swift","syntax":"swift","fileName":"Post.swift","content":["protocol Post {","    var id: UUID { get }","}"],"highlights":[],"fileType":"swift","type":"file"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"role":"symbol","abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from decoding and encoding."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","title":"IgnoreCoding()","kind":"symbol","url":"\/documentation\/metacodable\/ignorecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"type":"topic"},"DynamicPost-06.swift":{"identifier":"DynamicPost-06.swift","syntax":"swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":23}],"fileType":"swift","type":"file"},"DynamicPost-09.swift":{"identifier":"DynamicPost-09.swift","syntax":"swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","@ContentAt(\"content\")","protocol Post {","    var id: UUID { get }","}","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":5}],"fileType":"swift","type":"file"},"doc://MetaCodable/tutorials/Usage/MetaCodable-essentials":{"kind":"article","role":"article","abstract":[],"type":"topic","title":"MetaCodable essentials","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials","url":"\/tutorials\/usage\/metacodable-essentials"},"MetaCodableConfig.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/MetaCodableConfig.png"},{"traits":["1x","dark"],"url":"\/images\/MetaCodableConfig~dark.png"}],"identifier":"MetaCodableConfig.png","alt":"MetaCodableConfig.plist configuration file","type":"image"},"DynamicPost-02.png":{"variants":[{"url":"\/images\/DynamicPost-02.png","traits":["1x","light"]},{"url":"\/images\/DynamicPost-02~dark.png","traits":["1x","dark"]}],"identifier":"DynamicPost-02.png","alt":"Post variations JSON representation","type":"image"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-sequence-of-values":{"kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}],"type":"section","title":"Decode\/Encode sequence of values","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values","url":"\/tutorials\/metacodable\/helper#DecodeEncode-sequence-of-values"},"DynamicPost-01.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/DynamicPost-01.png"},{"traits":["1x","dark"],"url":"\/images\/DynamicPost-01~dark.png"}],"identifier":"DynamicPost-01.png","alt":"Post variations JSON representation","type":"image"},"doc://MetaCodable/tutorials/Usage/Advanced-MetaCodable":{"kind":"article","role":"article","abstract":[],"type":"topic","title":"Advanced MetaCodable","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","url":"\/tutorials\/usage\/advanced-metacodable"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Customize-field-decodingencoding":{"abstract":[{"text":"This tutorial guides you through","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding","title":"Customize field decoding\/encoding","url":"\/tutorials\/metacodable\/essential#Customize-field-decodingencoding","kind":"section","type":"section"},"DynamicPost-08.swift":{"identifier":"DynamicPost-08.swift","syntax":"swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","protocol Post {","    var id: UUID { get }","}","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":4}],"fileType":"swift","type":"file"},"DynamicPost-04.png":{"variants":[{"url":"\/images\/DynamicPost-04.png","traits":["1x","light"]},{"url":"\/images\/DynamicPost-04~dark.png","traits":["1x","dark"]}],"identifier":"DynamicPost-04.png","alt":"Adjacently tagged Post variations JSON representation","type":"image"},"doc://MetaCodable/tutorials/MetaCodable/Helper#Create-custom-advanced-customizations":{"abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","title":"Create custom advanced customizations","url":"\/tutorials\/metacodable\/helper#Create-custom-advanced-customizations","kind":"section","type":"section"},"meta_codable_config-02.json":{"identifier":"meta_codable_config-02.json","syntax":"json","fileName":"meta_codable_config.json","content":["{","    \"scan\": \"recursive\"","}"],"highlights":[{"line":1},{"line":2},{"line":3}],"fileType":"json","type":"file"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"type":"topic","url":"\/documentation\/metacodable\/dynamiccodable\/identifier","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO","text":"DynamicCodableIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"IdentifierValue"},{"kind":"text","text":">"}],"abstract":[{"text":"The identifier value(s) for this type.","type":"text"}],"required":true,"title":"identifier","role":"symbol"},"Page.png":{"variants":[{"url":"\/images\/Page.png","traits":["1x","light"]},{"url":"\/images\/Page~dark.png","traits":["1x","dark"]}],"identifier":"Page.png","alt":"JSON representation of Page containing Posts","type":"image"},"DynamicPost-02.swift":{"identifier":"DynamicPost-02.swift","syntax":"swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}"],"highlights":[{"line":1},{"line":2},{"line":3}],"fileType":"swift","type":"file"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic":{"kind":"project","role":"project","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}],"type":"topic","title":"Represent dynamic data variations with protocol","estimatedTime":"20min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","url":"\/tutorials\/metacodable\/dynamic"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Customize-dynamic-data-variations-detection":{"abstract":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection","title":"Customize dynamic data variations detection","url":"\/tutorials\/metacodable\/dynamic#Customize-dynamic-data-variations-detection","kind":"section","type":"section"},"Plugin.png":{"variants":[{"url":"\/images\/Plugin.png","traits":["1x","light"]},{"url":"\/images\/Plugin~dark.png","traits":["1x","dark"]}],"identifier":"Plugin.png","alt":"Xcode build tool plugin settings","type":"image"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-internal-tag":{"kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"type":"codeVoice","code":"Swift"},{"text":" using ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}],"type":"section","title":"Create Codable enums with internal tag","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-internal-tag"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Create-dynamic-variation-Codable-types":{"kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}],"type":"section","title":"Create dynamic variation Codable types","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","url":"\/tutorials\/metacodable\/dynamic#Create-dynamic-variation-Codable-types"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"title":"IgnoreDecoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","type":"topic","url":"\/documentation\/metacodable\/ignoredecoding()"},"DynamicPost-03.swift":{"identifier":"DynamicPost-03.swift","syntax":"swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34}],"fileType":"swift","type":"file"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"title":"HelperCoder","url":"\/documentation\/metacodable\/helpercoder","navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A type that helps to decode and encode underlying ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","isActive":true,"type":"reference"},{"text":" type","type":"text"},{"text":" ","type":"text"},{"text":"from provided ","type":"text"},{"code":"decoder","type":"codeVoice"},{"text":" and to provided ","type":"text"},{"code":"encoder","type":"codeVoice"},{"text":" respectively.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HelperCoder","kind":"identifier"}]},"DynamicPost-05.swift":{"identifier":"DynamicPost-05.swift","syntax":"swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"picture\"","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49}],"fileType":"swift","type":"file"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-date-representations":{"abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","title":"Decode\/Encode date representations","url":"\/tutorials\/metacodable\/helper#DecodeEncode-date-representations","kind":"section","type":"section"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Create-Codable-type-and-customize-CodingKey-of-fields":{"abstract":[{"text":"This tutorial guides you through","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields","title":"Create Codable type and customize CodingKey of fields","url":"\/tutorials\/metacodable\/essential#Create-Codable-type-and-customize-CodingKey-of-fields","kind":"section","type":"section"},"DynamicPost-07.swift":{"identifier":"DynamicPost-07.swift","syntax":"swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}],"fileType":"swift","type":"file"},"meta_codable_config-01.json":{"identifier":"meta_codable_config-01.json","syntax":"json","fileName":"meta_codable_config.json","content":["{}"],"highlights":[],"fileType":"json","type":"file"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"title":"DynamicCodable","kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","role":"symbol","url":"\/documentation\/metacodable\/dynamiccodable","abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicCodable","kind":"identifier"}]},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig":{"title":"MetaCodableConfig","role":"symbol","type":"topic","abstract":[{"text":"The configuration file providing additional customization options for ","type":"text"},{"type":"codeVoice","code":"MetaProtocolCodable"},{"text":" build tool plugin.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","kind":"symbol","fragments":[{"text":"configuration","kind":"keyword"},{"text":" ","kind":"text"},{"text":"file","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaCodableConfig","kind":"identifier"}],"url":"\/documentation\/metacodable\/metacodableconfig"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-adjacent-tag":{"kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"code":"Swift","type":"codeVoice"},{"text":" using ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}],"type":"section","title":"Create Codable enums with adjacent tag","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-adjacent-tag"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"title":"Codable()","url":"\/documentation\/metacodable\/codable()","role":"symbol","kind":"symbol","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"text":" ","type":"text"},{"text":"declarations.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"type":"topic","title":"Coded","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Coded","kind":"identifier"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","abstract":[{"type":"text","text":"The actual type of value that is going to be decoded\/encoded."}],"kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/metacodable\/helpercoder\/coded"},"doc://MetaCodable/tutorials/MetaCodable/Helper":{"kind":"project","role":"project","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}],"type":"topic","title":"Add common decoding\/encoding customizations","estimatedTime":"20min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","url":"\/tutorials\/metacodable\/helper"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/metacodable\/ignoreencoding()","title":"IgnoreEncoding()","type":"topic","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from encoding.","type":"text"}],"kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"text":" ","type":"text"},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","title":"ContentAt(_:_:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ContentAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"type":"topic","url":"\/documentation\/metacodable\/contentat(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"title":"CodedAt(_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"topic","url":"\/documentation\/metacodable\/codedat(_:)"}}}