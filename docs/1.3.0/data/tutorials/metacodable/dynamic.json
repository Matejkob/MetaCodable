{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/metacodable\/dynamic"]}],"kind":"project","metadata":{"role":"project","title":"Represent dynamic data variations with protocol","categoryPathComponent":"Usage","category":"Discover MetaCodable"},"hierarchy":{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage","modules":[{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials","projects":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields"}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag"}]}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","projects":[{"sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","kind":"task"}],"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper"},{"sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection","kind":"task"}],"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic"}]}],"paths":[["doc:\/\/MetaCodable\/tutorials\/Usage","doc:\/\/MetaCodable\/tutorials\/Usage\/$volume","doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic"},"sections":[{"kind":"hero","xcodeRequirement":"Xcode 15 or later","title":"Represent dynamic data variations with protocol","estimatedTimeInMinutes":20,"chapter":"Advanced MetaCodable","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}]}]},{"kind":"tasks","tasks":[{"anchor":"Create-dynamic-variation-Codable-types","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Similar to "},{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","type":"reference","isActive":true,"overridingTitle":"enums","overridingTitleInlineContent":[{"type":"text","text":"enums"}]},{"type":"text","text":" external, internal and adjacently tagged data variations are supported with default being externally tagged data."}]}]}],"title":"Create dynamic variation Codable types","stepsSection":[{"media":"DynamicPost-01.png","content":[{"type":"paragraph","inlineContent":[{"text":"Identify all the variations and the tags representing variations.","type":"text"}]}],"code":null,"runtimePreview":null,"caption":[],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Create protocol containing common fields across all the data variations.","type":"text"}]}],"code":"DynamicPost-01.swift","runtimePreview":"DynamicPost-01.png","caption":[],"type":"step"},{"media":null,"content":[{"inlineContent":[{"text":"Attach ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference"},{"text":" attribute to this protocol.","type":"text"}],"type":"paragraph"}],"code":"DynamicPost-02.swift","runtimePreview":"DynamicPost-01.png","caption":[],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" types with each type representing a variation."}]}],"code":"DynamicPost-03.swift","runtimePreview":"DynamicPost-01.png","caption":[],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conform common data protocol for each variant data type."}]}],"code":"DynamicPost-04.swift","runtimePreview":"DynamicPost-01.png","caption":[],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","isActive":true},{"type":"text","text":" conformance for each variant data type, with "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","isActive":true},{"type":"text","text":" returning variant tag."}]}],"code":"DynamicPost-05.swift","runtimePreview":"DynamicPost-01.png","caption":[],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provide multiple variant tags in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"},{"type":"text","text":" in case of multiple tags used to represent same variation."}]}],"code":"DynamicPost-06.swift","runtimePreview":"DynamicPost-02.png","caption":[],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Ignore specific type from decoding or encoding or both by attaching ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()"},{"text":" or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},{"text":" or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()"},{"text":" macros respectively.","type":"text"}]}],"code":"DynamicPost-07.swift","runtimePreview":"DynamicPost-02.png","caption":[],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"In case of internally tagged data, attach ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"text":" macro to ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" declaration with value specifying tag field name.","type":"text"}]}],"code":"DynamicPost-08.swift","runtimePreview":"DynamicPost-03.png","caption":[],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"In case of adjacently tagged data, additionally attach ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","isActive":true},{"text":" macro to ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" declaration with value specifying content field name.","type":"text"}]}],"code":"DynamicPost-09.swift","runtimePreview":"DynamicPost-04.png","caption":[],"type":"step"},{"media":null,"content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin to target to handle code generation."}],"type":"paragraph"}],"code":"Plugin.swift","runtimePreview":"Plugin.png","caption":[],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use generated "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder"},{"type":"text","text":" for protocol to decode\/encode dynamic type."}]}],"code":"Page.swift","runtimePreview":"Page.png","caption":[],"type":"step"}]},{"anchor":"Customize-dynamic-data-variations-detection","contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Customize "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin code generation."}],"type":"paragraph"}],"kind":"contentAndMedia"}],"title":"Customize dynamic data variations detection","stepsSection":[{"media":null,"code":"Plugin.swift","runtimePreview":"Plugin.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin to target to handle code generation."}]}],"type":"step","caption":[]},{"media":null,"code":"meta_codable_config-01.json","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Create "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"},{"type":"text","text":" file in the target plugin is included."}],"type":"paragraph"}],"type":"step","caption":[]},{"media":null,"code":"meta_codable_config-02.json","runtimePreview":"MetaCodableConfig.png","content":[{"type":"paragraph","inlineContent":[{"text":"Provide ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan","type":"reference"},{"text":" mode in ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","type":"reference"},{"text":" file to control source files accross dependency targets scanned for ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference"},{"text":" protocol variation data.","type":"text"}]}],"type":"step","caption":[]}]}]}],"references":{"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HelperCoder","kind":"identifier"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","abstract":[{"type":"text","text":"A type that helps to decode and encode underlying "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","isActive":true},{"type":"text","text":" type"},{"type":"text","text":" "},{"type":"text","text":"from provided "},{"type":"codeVoice","code":"decoder"},{"type":"text","text":" and to provided "},{"type":"codeVoice","code":"encoder"},{"type":"text","text":" respectively."}],"type":"topic","title":"HelperCoder","navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/metacodable\/helpercoder","role":"symbol"},"MetaCodableConfig.png":{"alt":"MetaCodableConfig.plist configuration file","identifier":"MetaCodableConfig.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/MetaCodableConfig.png"},{"traits":["1x","dark"],"url":"\/images\/MetaCodableConfig~dark.png"}]},"DynamicPost-06.swift":{"fileType":"swift","syntax":"swift","highlights":[{"line":23}],"fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-06.swift","type":"file"},"DynamicPost-08.swift":{"content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","protocol Post {","    var id: UUID { get }","}","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"syntax":"swift","type":"file","highlights":[{"line":4}],"fileType":"swift","fileName":"Post.swift","identifier":"DynamicPost-08.swift"},"doc://MetaCodable/tutorials/MetaCodable/Helper":{"abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","type":"topic","estimatedTime":"20min","role":"project","url":"\/tutorials\/metacodable\/helper","title":"Add common decoding\/encoding customizations","kind":"project"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Share-common-Codable-fields":{"abstract":[{"type":"text","text":"This tutorial guides you through"}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields","type":"section","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/essential#Share-common-Codable-fields","title":"Share common Codable fields","kind":"section"},"DynamicPost-02.swift":{"fileType":"swift","syntax":"swift","highlights":[{"line":1},{"line":2},{"line":3}],"fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}"],"identifier":"DynamicPost-02.swift","type":"file"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"type":"codeVoice","code":"class"},{"text":", ","type":"text"},{"type":"codeVoice","code":"enum"},{"text":", ","type":"text"},{"type":"codeVoice","code":"actor"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"type":"text","text":"declarations."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","title":"Codable()","role":"symbol","url":"\/documentation\/metacodable\/codable()"},"DynamicPost-03.png":{"alt":"Internally tagged Post variations JSON representation","identifier":"DynamicPost-03.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/DynamicPost-03.png"},{"traits":["1x","dark"],"url":"\/images\/DynamicPost-03~dark.png"}]},"meta_codable_config-01.json":{"content":["{}"],"syntax":"json","type":"file","highlights":[],"fileType":"json","fileName":"meta_codable_config.json","identifier":"meta_codable_config-01.json"},"doc://MetaCodable/tutorials/MetaCodable/Enum":{"role":"project","type":"topic","estimatedTime":"10min","title":"Represent variations in data","url":"\/tutorials\/metacodable\/enum","kind":"project","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":" using "},{"type":"codeVoice","code":"MetaCodable"},{"text":".","type":"text"}]},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-sequence-of-values":{"role":"pseudoSymbol","type":"section","title":"Decode\/Encode sequence of values","url":"\/tutorials\/metacodable\/helper#DecodeEncode-sequence-of-values","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values","abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"type":"codeVoice","code":"HelperCoders"},{"text":" module.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Coded"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","abstract":[{"type":"text","text":"The actual type of value that is going to be decoded\/encoded."}],"type":"topic","title":"Coded","kind":"symbol","url":"\/documentation\/metacodable\/helpercoder\/coded","role":"symbol"},"Plugin.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Plugin.png"},{"traits":["1x","dark"],"url":"\/images\/Plugin~dark.png"}],"identifier":"Plugin.png","alt":"Xcode build tool plugin settings"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-adjacent-tag":{"role":"pseudoSymbol","type":"section","title":"Create Codable enums with adjacent tag","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-adjacent-tag","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"type":"codeVoice","code":"Swift"},{"text":" using ","type":"text"},{"type":"codeVoice","code":"MetaCodable"},{"text":".","type":"text"}]},"Page.swift":{"type":"file","syntax":"swift","fileType":"swift","content":["import MetaCodable","","@Codable","struct Page {","    @CodedBy(","        SequenceCoder(","            elementHelper: PostCoder()","        )","    )","    let content: [Post]","    let next: String","}"],"fileName":"Page.swift","identifier":"Page.swift","highlights":[]},"doc://MetaCodable/tutorials/MetaCodable/Essential#Create-Codable-type-and-customize-CodingKey-of-fields":{"type":"section","abstract":[{"text":"This tutorial guides you through","type":"text"}],"kind":"section","title":"Create Codable type and customize CodingKey of fields","url":"\/tutorials\/metacodable\/essential#Create-Codable-type-and-customize-CodingKey-of-fields","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields","role":"pseudoSymbol"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded to the"},{"text":" ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","title":"CodedAt(_:)","role":"symbol","url":"\/documentation\/metacodable\/codedat(_:)"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-external-tag":{"abstract":[{"text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in ","type":"text"},{"type":"codeVoice","code":"Swift"},{"text":" using ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}],"type":"section","title":"Create Codable enums with external tag","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-external-tag"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"abstract":[{"text":"Indicates the field\/case\/type needs to ignored from encoding.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","title":"IgnoreEncoding()","role":"symbol","url":"\/documentation\/metacodable\/ignoreencoding()"},"meta_codable_config-02.json":{"content":["{","    \"scan\": \"recursive\"","}"],"syntax":"json","type":"file","highlights":[{"line":1},{"line":2},{"line":3}],"fileType":"json","fileName":"meta_codable_config.json","identifier":"meta_codable_config-02.json"},"DynamicPost-01.png":{"alt":"Post variations JSON representation","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/DynamicPost-01.png"},{"traits":["1x","dark"],"url":"\/images\/DynamicPost-01~dark.png"}],"identifier":"DynamicPost-01.png"},"DynamicPost-03.swift":{"content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"syntax":"swift","type":"file","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34}],"fileType":"swift","fileName":"Post.swift","identifier":"DynamicPost-03.swift"},"Plugin.swift":{"content":["import PackageDescription","","let appTarget = package.targets.first!","appTarget.plugins.append(","    .plugin(","        name: \"MetaProtocolCodable\",","        package: \"MetaCodable\"","    )",")"],"syntax":"swift","type":"file","highlights":[],"fileType":"swift","fileName":"Package.swift","identifier":"Plugin.swift"},"DynamicPost-01.swift":{"fileType":"swift","identifier":"DynamicPost-01.swift","highlights":[],"fileName":"Post.swift","syntax":"swift","type":"file","content":["protocol Post {","    var id: UUID { get }","}"]},"DynamicPost-04.png":{"alt":"Adjacently tagged Post variations JSON representation","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/DynamicPost-04.png"},{"traits":["1x","dark"],"url":"\/images\/DynamicPost-04~dark.png"}],"identifier":"DynamicPost-04.png"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"text":" ","type":"text"},{"text":"to be decoded\/encoded at the ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContentAt","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":"...)"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","title":"ContentAt(_:_:)","role":"symbol","url":"\/documentation\/metacodable\/contentat(_:_:)"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"required":true,"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"identifier","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DynamicCodableIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"IdentifierValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","abstract":[{"type":"text","text":"The identifier value(s) for this type."}],"type":"topic","title":"identifier","kind":"symbol","url":"\/documentation\/metacodable\/dynamiccodable\/identifier","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"IgnoreDecoding","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","title":"IgnoreDecoding()","role":"symbol","url":"\/documentation\/metacodable\/ignoredecoding()"},"doc://MetaCodable/tutorials/Usage/MetaCodable-essentials":{"role":"article","kind":"article","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials","title":"MetaCodable essentials","url":"\/tutorials\/usage\/metacodable-essentials","type":"topic","abstract":[]},"doc://MetaCodable/tutorials/Usage/Advanced-MetaCodable":{"url":"\/tutorials\/usage\/advanced-metacodable","role":"article","kind":"article","abstract":[],"title":"Advanced MetaCodable","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","type":"topic"},"doc://MetaCodable/tutorials/MetaCodable/Essential":{"abstract":[{"text":"This tutorial guides you through","type":"text"}],"type":"topic","title":"Use with general-purpose Swift types","role":"project","estimatedTime":"10min","kind":"project","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","url":"\/tutorials\/metacodable\/essential"},"DynamicPost-07.swift":{"type":"file","syntax":"swift","fileType":"swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"fileName":"Post.swift","identifier":"DynamicPost-07.swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}]},"DynamicPost-09.swift":{"highlights":[{"line":5}],"type":"file","fileName":"Post.swift","content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","@ContentAt(\"content\")","protocol Post {","    var id: UUID { get }","}","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-09.swift","syntax":"swift","fileType":"swift"},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig":{"kind":"symbol","title":"MetaCodableConfig","url":"\/documentation\/metacodable\/metacodableconfig","abstract":[{"text":"The configuration file providing additional customization options for ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"text":" build tool plugin.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","fragments":[{"kind":"keyword","text":"configuration"},{"kind":"text","text":" "},{"kind":"keyword","text":"file"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaCodableConfig"}],"role":"symbol","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"role":"symbol","abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"url":"\/documentation\/metacodable\/dynamiccodable","title":"DynamicCodable","type":"topic","kind":"symbol"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-basic-value-types-without-type-check":{"url":"\/tutorials\/metacodable\/helper#DecodeEncode-basic-value-types-without-type-check","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}],"title":"Decode\/Encode basic value types without type check","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check","type":"section"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Customize-field-decodingencoding":{"url":"\/tutorials\/metacodable\/essential#Customize-field-decodingencoding","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"This tutorial guides you through"}],"title":"Customize field decoding\/encoding","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding","type":"section"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Create-dynamic-variation-Codable-types":{"role":"pseudoSymbol","type":"section","title":"Create dynamic variation Codable types","url":"\/tutorials\/metacodable\/dynamic#Create-dynamic-variation-Codable-types","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}]},"DynamicPost-02.png":{"alt":"Post variations JSON representation","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/DynamicPost-02.png"},{"traits":["1x","dark"],"url":"\/images\/DynamicPost-02~dark.png"}],"identifier":"DynamicPost-02.png"},"doc://MetaCodable/tutorials/Usage":{"abstract":[{"code":"MetaCodable","type":"codeVoice"},{"text":" supercharges ","type":"text"},{"type":"codeVoice","code":"Swift"},{"text":"’s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros. Remove previous boiler-plate for ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations and create "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" conformances faster than ever before."}],"type":"topic","title":"Discover MetaCodable","role":"overview","kind":"overview","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage","url":"\/tutorials\/usage"},"DynamicPost-05.swift":{"content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"picture\"","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier:","    DynamicCodableIdentifier<String> {","        return \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"syntax":"swift","type":"file","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49}],"fileType":"swift","fileName":"Post.swift","identifier":"DynamicPost-05.swift"},"DynamicPost-04.swift":{"fileType":"swift","identifier":"DynamicPost-04.swift","highlights":[{"line":9},{"line":15},{"line":22},{"line":29}],"fileName":"Post.swift","syntax":"swift","type":"file","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost: Post {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"]},"doc://MetaCodable/tutorials/MetaCodable/Helper#Create-custom-advanced-customizations":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","title":"Create custom advanced customizations","url":"\/tutorials\/metacodable\/helper#Create-custom-advanced-customizations","type":"section","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}]},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-internal-tag":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag","title":"Create Codable enums with internal tag","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-internal-tag","type":"section","abstract":[{"text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in ","type":"text"},{"type":"codeVoice","code":"Swift"},{"text":" using ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}]},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Customize-dynamic-data-variations-detection":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection","title":"Customize dynamic data variations detection","url":"\/tutorials\/metacodable\/dynamic#Customize-dynamic-data-variations-detection","type":"section","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}]},"Page.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Page.png"},{"traits":["1x","dark"],"url":"\/images\/Page~dark.png"}],"identifier":"Page.png","alt":"JSON representation of Page containing Posts"},"Xcode 15 or later":{"type":"xcodeRequirement","title":"Xcode 15 or later","url":"https:\/\/itunes.apple.com\/us\/app\/xcode\/id497799835?mt=12","identifier":"Xcode 15 or later"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-date-representations":{"url":"\/tutorials\/metacodable\/helper#DecodeEncode-date-representations","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}],"title":"Decode\/Encode date representations","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","type":"section"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic":{"abstract":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}],"type":"topic","title":"Represent dynamic data variations with protocol","role":"project","estimatedTime":"20min","kind":"project","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","url":"\/tutorials\/metacodable\/dynamic"},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig/Scan":{"url":"\/documentation\/metacodable\/metacodableconfig\/scan","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The source file scan option for "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin."}],"title":"Scan","fragments":[{"text":"configuration","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"option"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scan"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreCoding","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","title":"IgnoreCoding()","role":"symbol","url":"\/documentation\/metacodable\/ignorecoding()"}}}